{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bases de donn\u00e9es 2","text":""},{"location":"#cegep-de-victoriaville","title":"C\u00e9gep de Victoriaville","text":""},{"location":"#bases-de-donnees-2-420-3b4-vi-automne-2024","title":"Bases de donn\u00e9es 2 (420-3B4-VI) - Automne 2024","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Vous trouverez ici les notes et exercices du cours. J'ajouterai du nouveau contenu continuellement.</p> <p>Pr\u00e9alable \u00e0 ce cours : 420-2B4-VI Bases de donn\u00e9es 1</p> <p>Ce cours est pr\u00e9alable \u00e0 : 420-4C4-VI : M\u00e9gadonn\u00e9es (efficacit\u00e9 des traitements sur de grands ensembles et base de donn\u00e9es NoSQL) 420-4B4-VI : Conception de syst\u00e8mes (mod\u00e9lisation et analyse)</p> <p>Cheminement complet: https://informatique.apical.xyz/</p>"},{"location":"#environnement-de-travail","title":"Environnement de travail","text":"<p>Afin d\u2019utiliser MySQL vous devez installer deux logiciels :</p> <ul> <li>AMPPS, qui contient MySQL Server (install\u00e9 aussi dans le cours de bases de donn\u00e9es 1)</li> <li>DBeaver, un outil de gestion de base de donn\u00e9es</li> </ul>"},{"location":"#ampps","title":"AMPPS","text":"<p>AMPPS est une pile Apache (Apache, MySQL, Php, Perl et d\u2019autres) disponible \u00e0 https://ampps.com/</p> <p>Note : si vous avez une erreur en lien avec \u00ab Microsoft c++ redistributable \u00bb, lisez les d\u00e9tails de l\u2019erreur. S\u2019il est indiqu\u00e9 qu\u2019une autre version est d\u00e9j\u00e0 install\u00e9e, c\u2019est probablement une version plus r\u00e9cente, ce qui est sans cons\u00e9quence.</p> <p>Une fois install\u00e9, vous n\u2019avez qu\u2019\u00e0 le lancer pour voir appara\u00eetre cette petite fen\u00eatre au bas \u00e0 droite de votre \u00e9cran. Le statut de MySQL devrait \u00eatre vert (\u00e7a peut prendre quelques secondes apr\u00e8s le d\u00e9marrage pour passer du rouge au vert, c\u2019est normal).</p> <p></p> <p>Note: si vous voulez, vous pouvez configurer AMPPS pour qu'il d\u00e9marre automatiquement \u00e0 l'ouverture de votre session Windows. Sinon vous devrez le d\u00e9marrer manuellement.</p>"},{"location":"apropos/","title":"\u00c0 propos du site du cours de bases de donn\u00e9es 2","text":"<p>Version originale du site par Mathieu Fr\u00e9chette (2023) Mise \u00e0 jour en 2024 par \u00c9tienne Rivard  </p>"},{"location":"horaire/","title":"Horaire du cours de d\u00e9veloppement web 3","text":"Semaine Cours Date Sujet Exercice 1 1 2023-08-21 Pr\u00e9sentation du cours DBeaver Exercice 01 - Revision MySQL 1 2 2023-08-23 Retour sur exercice 01Introduction mod\u00e9lisationMod\u00e8le Entit\u00e9-AssociationSch\u00e9ma conceptuelTypes de relationsExercice 02 \u00e0 faire ensembleNormalisation Exercice 02 - Syst\u00e8me de prise de pr\u00e9sence en cours 2 3 2023-08-28 Exercice 03 - Le syst\u00e8me de stationnement du c\u00e9gep (partie A)Th\u00e9orie sur les diagrammes de classesPr\u00e9sentation de l'outil drawioConvention de nommage MySQLExercice 03B - Cr\u00e9er le diagramme de classes du syst\u00e8me Exercice 03 - Syst\u00e8me de stationnement du c\u00e9gep 2 4 2023-08-30 Retour sur l'exercice 03Cr\u00e9ation d'une base de donn\u00e9esExercice 04 - Livre de recette Exercice 04 - Mod\u00e9lisation d'un livre de recettes 3 5 2023-09-06 Retour sur l'exercice 04[Insertion&gt;(mysql/insertion.md) + Exercice 05Vues + Exercice 06 Exercice 05 - Exercice sur les INSERTsExercice 06 - Exercice sur les VIEWs 3 6 2023-09-11 D\u00e9clencheurs Exercice 07 - Exercice sur les TRIGGERs 4 7 2023-09-13 \u00c9valuation formative 4 8 2023-09-18 Retour sur formatif  FonctionsExercice 08Types de jointures Exercice 08 - Exercice sur les fonctions 5 9 2023-09-20 Proc\u00e9dures stock\u00e9esTransactionsGestion des erreursCurseursExercice 09 Exercice 09 - Cr\u00e9dit social 5 10 2023-09-25 Finaliser Exercice 09 Exercice 09 - Cr\u00e9dit social 6 11 2023-09-27 R\u00e9vision 6 12 2023-10-02 Examen 1 (35%) 7 13 2023-10-16 Retour sur l'examen 1Retour sur les curseurs et la gestion d'erreurs, les joins et unionExercice 10 Exercice 10 - Exercice sur les curseurs 7 14 2023-10-18 UtilisateursAutorisationsR\u00f4lesExercice 11 Exercice 11 - Gestion des utilisateurs 8 15 2023-10-23 Installation de PythonUtilisation du connecteur MySQLExercice 12 Exercice 12 - pyCRUD 8 16 2023-10-25 Exercice 12 Exercice 12 - pyCRUD 9 17 2023-10-30 PyQT5Exercice 13 Exercice 13 - pyQT5 9 18 2023-11-01 qtDesignerExercice 14 Exercice 14 - qtDesigner 10 19 2023-11-06 Exercice 14 Exercice 14 - qtDesigner 10 20 2023-11-09 D\u00e9but projet long 11 21 2023-11-13 projet long 11 22 2023-11-15 projet long 12 23 2023-11-20 projet long 12 24 2023-11-22 projet long 13 25 2023-11-27 Pr\u00e9sentation et remise du projet long (15%) 13 26 2023-11-29 R\u00e9vision analyse 14 27 2023-12-04 Formatif partie 1 14 28 2023-12-06 Formatif partie 2 15 29 2023-12-11 \u00c9valuation finale partie 1 15 30 2023-12-15 \u00c9valuation finale partie 2"},{"location":"examens/revision/","title":"R\u00e9vision pour l'\u00e9preuve finale","text":""},{"location":"examens/revision/#directives","title":"Directives","text":"<ul> <li>T\u00e9l\u00e9chargez le projet de d\u00e9part : revision_finale.zip</li> <li>Importez le script SQL creationBD.sql pr\u00e9sent dans le r\u00e9pertoire ressources du projet.</li> </ul> <p>Diagramme de classe de la base de donn\u00e9es import\u00e9e</p> <p></p> <p>Le projet contient deux scripts Python: app.py qui est le programme principal et db_groupCamp.py qui contient des fonctions qui interroge la base de donn\u00e9es.</p> <p>Au lancement de app.py on vous demandera de saisir un nom d'usager. Il y a trois usagers valides \u00e0 la cr\u00e9ation de la base de donn\u00e9es : Math, CharlyBoy et Loulou. Ensuite le menu suivant est affich\u00e9 : </p> <p></p>"},{"location":"examens/revision/#question-1-declencheurs","title":"Question #1 - D\u00e9clencheurs","text":"<p>Cr\u00e9ez un script SQL qui va ajouter des d\u00e9clencheurs (Trigger) qui permettront de s'assurer que la piste favorite que l'usager entre pour un album de sa collection est bien pr\u00e9sente dans cet album. </p> <p>Si la piste qui est indiqu\u00e9 est invalide, annulez l'insertion ou la modification et retournez le message d'erreur \"La piste favorite indiqu\u00e9e n'est pas pr\u00e9sente dans cet album\" avec le code d'erreur SQLSTATE \"45000\". </p> <p>Utilisez SIGNAL pour le retour d'information de l'erreur.</p> <p>Le script SQL \u00e0 remettre doit se nommer NomPrenom_creationTrigger.sql et se retrouver dans le r\u00e9pertoire ressources.</p>"},{"location":"examens/revision/#question-2-afficher-le-resultat-dune-requete","title":"Question #2 - Afficher le r\u00e9sultat d'une requ\u00eate","text":"<p>Compl\u00e9tez la section ==Afficher ma collection== du script app.py.</p> <p>\u00c0 partir de l'usager qui est connect\u00e9, affichez la liste des albums qui sont dans sa collection. Pour chaque album, affichez les informations suivantes sur des lignes diff\u00e9rentes: </p> <ul> <li>Le titre de l'album</li> <li>\"par\" et le nom du groupe</li> <li>\"piste favorite : \" et le titre de la piste favorite. S'il n'y en a pas, affichez \"-\"</li> <li>\"commentaire : \" et le commentaire donn\u00e9 \u00e0 l'album. S'il n'y en a pas, affichez \"-\"</li> </ul> <p>Exemple de r\u00e9sultat pour la collection de l'usager \"Math\"</p> <p></p>"},{"location":"examens/revision/#question-3-procedure-stockee","title":"Question #3 - Proc\u00e9dure stock\u00e9e","text":"<p>Compl\u00e9tez la section ==ajouter un album \u00e0 ma collection== du script app.py.</p> <p>Vous devez cr\u00e9er une proc\u00e9dure stock\u00e9e nomm\u00e9e AjouterAlbum qui va prendre en param\u00e8tre les informations suivantes : </p> <ul> <li>Le id de l'usager</li> <li>Le id de l'album \u00e0 ajouter (on prend pour acquis que l'usager va conna\u00eetre le id de l'album)</li> <li>Le id de la piste favorite de l'album</li> <li>Un commentaire sur l'album</li> <li>Le prix pay\u00e9 pour l'album.</li> </ul> <p>Dans la proc\u00e9dure stock\u00e9e, vous devez faire les instructions suivantes : </p> <ul> <li>D\u00e9clarez un \"exit handler\" pour le code SQLSTATE '99999' qui va annuler la transaction et retourner le texte \"Le prix pay\u00e9 est inf\u00e9rieur au prix minimum de l'album.\" dans une requ\u00eate SELECT.</li> <li>D\u00e9clarez un \"exit handler\" pour les \"SQLEXCEPTION\" qui va annuler la transaction et retourner le texte \"Une erreur est survenue, les op\u00e9rations ont \u00e9t\u00e9 annul\u00e9es.\" dans une requ\u00eate SELECT.</li> <li>Englobez toutes les instructions dans une transaction</li> <li>Validez si le prix pay\u00e9 est sup\u00e9rieur ou \u00e9gal au prix demand\u00e9 pour l'album. S'il est inf\u00e9rieur, lancez l'exception SQLSTATE '99999' avec l'instruction SIGNAL.</li> <li>Ins\u00e9rez les informations requises dans la table collection</li> <li>Si l'album achet\u00e9 \u00e9tait d\u00e9j\u00e0 pr\u00e9sent dans la liste de souhait de l'usager, le supprimer de la liste</li> <li>Si toutes les op\u00e9rations ont r\u00e9ussi, retournez le texte \"L'ajout de l'album a r\u00e9ussi\" dans une requ\u00eate SELECT.</li> </ul> <p>Ensuite dans le script Python, demandez les informations \u00e0 l'usager et lancez la proc\u00e9dure stock\u00e9e. R\u00e9cup\u00e9rez le r\u00e9sultat (le message de retour du SELECT dans la proc\u00e9dure) et affichez-le \u00e0 l'\u00e9cran.</p> <p>Ajoutez un script SQL nomm\u00e9 NomPrenom_ajouterAlbum.sql dans le r\u00e9pertoire ressources du projet qui permettra de recr\u00e9er votre proc\u00e9dure stock\u00e9e.</p> <p>Exemple de r\u00e9sultat pour l'usager \"Math\"</p> <p></p> <p></p> <p></p>"},{"location":"exercices/analyse_revision_a/","title":"Analyse - R\u00e9vision A","text":""},{"location":"exercices/analyse_revision_a/#mise-en-situation","title":"Mise en situation","text":"<p>\u00c0 partir de l'image suivante, vous devez mod\u00e9liser le syst\u00e8me de facturation d'un garage de voiture.</p> <p></p>"},{"location":"exercices/analyse_revision_a/#precisions","title":"Pr\u00e9cisions","text":"<ul> <li>Seulement les informations surlign\u00e9es en jaunes doivent \u00eatre sauvegard\u00e9s (ou peuvent \u00eatre reproduit exactement avec les autres informations sauvegard\u00e9es).</li> <li>Le nombre 2134521 situ\u00e9 au-dessus du nom \"Mathieu Fr\u00e9chette\" est le code de ce client.</li> <li>La description du v\u00e9hicule est un champs texte associ\u00e9 au compte du client. Le client peut avoir plus d'un v\u00e9hicule associ\u00e9 \u00e0 son compte.</li> <li>La case PLAQUE est le num\u00e9ro de la plaque d'immatriculation du v\u00e9hicule</li> <li>Les trois champs ODO ... repr\u00e9sente trois prise de l'odom\u00e8tre du v\u00e9hicule durant le travail factur\u00e9.</li> <li>Dans le d\u00e9tail de la facture : <ul> <li>Le texte \"Remettre Pneus dans l'auto\" est un texte global \u00e0 la facture que le commis a entr\u00e9 manuellement.</li> <li>Il y a trois ligne de d\u00e9tail, chacune commen\u00e7ant par une quantit\u00e9 et un code de produit.</li> <li>Le texte \"N'oubliez pas la rotation... \" est aussi un texte globale \u00e0 la facture qu'un commis a entr\u00e9 manuellement.</li> <li>On peu payer la facture selon plus d'un mode de paiement. Donc \u00e0 la ligne \"M\u00e9thode de paiement. Visa=730.92$\" on pourrait retrouver plus d'un mode de paiement avec le montant pour chaque mode.</li> </ul> </li> <li>Les \"produits\" sont class\u00e9s en trois cat\u00e9gorie : Pi\u00e8ces, Main-d'\u0153uvre (M.O.) et autre. Un produit ne peut avoir qu'une cat\u00e9gorie.</li> <li>Dans la table facturation, ajoutez deux colonnes, date_creation (type date) et user_creation (type varchar) qui seront remplies automatiquement avec un d\u00e9clencheur.</li> </ul>"},{"location":"exercices/analyse_revision_a/#schema-conceptuelle-et-diagramme-de-classe","title":"Sch\u00e9ma conceptuelle et diagramme de classe","text":"<p>Produisez sch\u00e9ma conceptuelle et un diagramme de classes \u00e0 partir du syst\u00e8me d\u00e9crit plus haut.</p> <p>Les deux diagrammes doivent respecter les normes de conception et la troisi\u00e8me forme normale.</p>"},{"location":"exercices/analyse_revision_a/#interrogation-des-donnees","title":"Interrogation des donn\u00e9es","text":"<p>Un fois vos 2 diagrammes termin\u00e9s, t\u00e9l\u00e9chargez et ex\u00e9cutez le script suivant : revision_analyse.sql. Il contient la cr\u00e9ation de la base de donn\u00e9es, des tables et l'insertion des donn\u00e9es de ma version de cet exercice.</p> <p>\u00c9crivez une requ\u00eate qui va permettre de reproduire l'affichage de la section d\u00e9tail de la facture plus haut. Le r\u00e9sultat doit ressembler \u00e0 celui-ci : </p> <p></p> <p>Ensuite ajoutez la ligne o\u00f9 il est question de la m\u00e9thode de paiement \u00e0 l'aide d'un UNION. Vous devez avoir ce r\u00e9sultat: </p> <p></p>"},{"location":"exercices/ex01_enonce/","title":"Exercice 1 - R\u00e9vision","text":"<p>Question de se remettre en mode \"BD\", voici un petit exercice de r\u00e9vision des concepts vus durant le cours de Base de donn\u00e9es 1. Inscrivez-moi dans un fichier SQL les commandes et requ\u00eates que vous avez utilis\u00e9es pour compl\u00e9ter les questions de la section Manipulation des donn\u00e9es. Le fichier est \u00e0 remettre dans le devoir Teams correspondant. </p> <p>La base de donn\u00e9es contient une liste de sorts pour le jeu Donjons et Dragons 5e \u00e9dition. Chaque sort appartient \u00e0 une seule \u00e9cole de magie, mais il peut \u00eatre utilis\u00e9 par plus d'une classe de personnage. Il y a aussi une liste d'usagers qui peuvent cr\u00e9er une liste de leurs sorts favoris.</p> <p>Voici le diagramme de classes de la base de donn\u00e9es</p> <p></p>"},{"location":"exercices/ex01_enonce/#creation-dune-base-de-donnees-et-execution-dun-script-sql","title":"Cr\u00e9ation d'une base de donn\u00e9es et ex\u00e9cution d'un script SQL","text":"<ul> <li>Cr\u00e9ez une nouvelle base de donn\u00e9es et nommez la bd2_01</li> <li>T\u00e9l\u00e9chargez le fichier ex01_create_tables.sql. </li> <li>Lancez le script pour cr\u00e9er les tables et ajouter les donn\u00e9es.</li> <li>Allez-y en ligne de commande ou avec DBeaver</li> </ul>"},{"location":"exercices/ex01_enonce/#manipulation-des-donnees","title":"Manipulation des donn\u00e9es","text":"<p>Pour chacune des questions, j'ai ajout\u00e9 une image du r\u00e9sultat attendu avec le nom des colonnes d\u00e9sir\u00e9.</p> <ol> <li> <p>S\u00e9lectionnez le nom de toutes les classes tri\u00e9 en ordre alphab\u00e9tique invers\u00e9. </p> </li> <li> <p>Comptez le nombre de sorts qui appartient \u00e0 l'\u00e9cole Conjuration. </p> </li> <li> <p>Comptez le nombre de sorts de chacune des \u00e9coles. (ecole | nb_sorts) </p> </li> <li> <p>S\u00e9lectionnez la liste des sorts de la classe Bard de niveau 0, triez en ordre alphab\u00e9tique de nom de sort. </p> </li> <li> <p>S\u00e9lectionnez la liste de tous les sorts qui contiennent le mot fire dans leur nom. </p> </li> <li> <p>Trouvez les trois \u00e9coles de magie qui comptent le plus de sorts faisant partie des sorts favoris des usagers. Triez les \u00e9coles en commen\u00e7ant par la plus populaire. </p> </li> <li> <p>S\u00e9lectionnez la liste des sorts qui ont le composant verbal mais pas somatic et material et qui ont une dur\u00e9e d'une heure OU qu'ils n'ont pas le composant verbal et qui ont une port\u00e9e de Touch </p> </li> <li> <p>S\u00e9lectionnez le nombre de sorts pour chaque classe. </p> </li> <li> <p>En vous aidant de la requ\u00eate pr\u00e9c\u00e9dente, affichez la moyenne de sort par classe de personnage. Essayez d'utiliser une sous-requ\u00eate et la fonction SQL AVG </p> </li> <li> <p>S\u00e9lectionnez tous les sorts d'une classe donn\u00e9e et d'un niveau donn\u00e9e. Pour chaque sort affichez le id et le nom du sort ainsi qu'une colonne composante qui sera g\u00e9n\u00e9r\u00e9 comme suit. Pour les champs verbal, somatic et material, affichez respectivement un V, S ou M si la valeur est \u00e9gale \u00e0 1, sinon n'affichez rien. Chaque lettre doit \u00eatre s\u00e9par\u00e9e par une virgule. Finalement affichez la valeur du champ material_cost. Vous pouvez vous aider des fonctions IF() et CONCAT(). Dans mon exemple j'affiche tous les sorts de la classe Bard du niveau 0. </p> </li> </ol>"},{"location":"exercices/ex02_enonce/","title":"Exercice 02 - Syst\u00e8me de saisie d'absence","text":"<p>On veut reproduire le syst\u00e8me de saisie d'absence en cours. Analysez le fonctionnement \u00e0 l'aide du texte qui suit et des images et cr\u00e9ez le sch\u00e9ma conceptuel de votre solution.</p>"},{"location":"exercices/ex02_enonce/#fonctionnement","title":"Fonctionnement","text":"<p>L'usager commence par saisir un cours et ensuite la date de ce cours.</p> <p></p> <p>Ensuite dans un tableau on a la liste de tous les \u00e9l\u00e8ves inscrit \u00e0 ce cours. On peut saisir le nombre d'heure par un nombre entier positif. Une fois la saisie termin\u00e9e l'usager clique sur Sauvegarder les modifications</p> <p></p> <p>Finalement l'usager peut aussi sortir un rapport cumulatif des absences des \u00e9l\u00e8ves pour un cours donn\u00e9.</p> <p></p>"},{"location":"exercices/ex03_enonce/","title":"Exercice 03 - Analyse du syst\u00e8me de stationnement du c\u00e9gep","text":"<p>Pour notre deuxi\u00e8me cas, on va analyser le syst\u00e8me de droit de stationnement du c\u00e9gep. Vous devez analyser le syst\u00e8me et ensuite cr\u00e9er les deux diagrammes suivants a l'aide d'un logiciel appropri\u00e9 : </p> <ul> <li>un sch\u00e9ma conceptuel selon le mod\u00e8le entit\u00e9-association.</li> <li>un diagramme de classe UML</li> </ul> <p>Une fois termin\u00e9, me remettre le sch\u00e9ma et le diagramme en format image sur Teams dans la section devoir.</p>"},{"location":"exercices/ex03_enonce/#mise-en-situation","title":"Mise en situation","text":"<p>On doit tout d'abord se cr\u00e9er un usager avec un courriel et un mot de passe. Ensuite l'usager cr\u00e9\u00e9 peut effectuer une commande qui d\u00e9terminera la dur\u00e9e du droit de stationnement et les v\u00e9hicules autoris\u00e9s selon leur plaque d'immatriculation. </p> <ul> <li>L'usager \u00e0 le choix entre trois type de droit : <ul> <li>30 jours</li> <li>1 session</li> <li>annuelle</li> </ul> </li> <li>Il peut entrer un maximum de 4 plaques d'immatriculation par commande.</li> <li>Un compte peut contenir plus de 4 plaque d'immatriculation, mais chaque plaque est associ\u00e9 \u00e0 une commande, un droit de stationnement.</li> <li>Pour les autres informations, r\u00e9f\u00e9rez-vous aux images suivantes : </li> </ul> <p></p> <p></p> <p>Dans la section Informations personnelles on retrouve le num\u00e9ro de DA ou d'employ\u00e9, le nom complet, le courriel et le num\u00e9ro de t\u00e9l\u00e9phone.</p> <p></p> <p></p> <p></p> <p></p>"},{"location":"exercices/ex04_enonce/","title":"Exercice 04 - Mod\u00e9lisation d'un livre de recettes","text":""},{"location":"exercices/ex04_enonce/#consignes","title":"Consignes","text":"<p>Vous devez analyser et mod\u00e9liser un livre de recettes. Les deux images qui suivent vous indique ce qui doit \u00eatre inclus dans la base de donn\u00e9es. Toutes les informations pr\u00e9sentent doivent \u00eatre sauvegard\u00e9es.</p> <p>Pr\u00e9cision sur les pictogrammes dans les recettes : </p> <ul> <li>Le bol repr\u00e9sente le temps de pr\u00e9paration de la recette</li> <li>La flamme est le temps de cuisson</li> <li>La main est un temps de pr\u00e9paration autre</li> </ul> <p>Vous devez me produire et remettre : </p> <ul> <li>[ ] Le mod\u00e8le entit\u00e9-association en format image.</li> <li>[ ] Un diagramme de classes UML, aussi \u00e0 remettre en format image.</li> <li>[ ] Un script sql de g\u00e9n\u00e9ration de la base de donn\u00e9es et des tables qui inclus la cr\u00e9ation de la base de donn\u00e9es, des tables et des cl\u00e9s primaires et \u00e9trang\u00e8res.</li> <li>[ ] La base de donn\u00e9es doit se nommer ex04_recette et avoir comme collation <code>utf8mb4_unicode_ci</code></li> <li>[ ] La table qui contiendra les recettes doit avoir une cl\u00e9 primaire qui d\u00e9bute \u00e0 la valeur 1000</li> <li>[ ] Le script doit pouvoir \u00eatre lanc\u00e9 cons\u00e9cutivement sans causer d'erreur (Pensez \u00e0 ajouter des commandes drop ... if exists)</li> <li>[ ] Vous devez respecter les trois premi\u00e8re forme normale et la convention de nommage qui est d\u00e9crite dans les notes de cours.</li> </ul> <p>Le tout dans un dossier compress\u00e9 dans le devoir sur Teams</p>"},{"location":"exercices/ex04_enonce/#images","title":"Images","text":""},{"location":"exercices/ex04_enonce/#recette-1","title":"Recette 1","text":""},{"location":"exercices/ex04_enonce/#recette-2","title":"Recette 2","text":""},{"location":"exercices/ex05_enonce/","title":"Exercice 5 - INSERT","text":"<p>\u00c0 partir de la base de donn\u00e9es athl\u00e8te, (le script sql de g\u00e9n\u00e9ration est disponible ici), r\u00e9alisez les requ\u00eates d'insertion suivante.</p> <ol> <li>Ins\u00e9rez-vous dans la table athl\u00e8te sans sp\u00e9cifier les noms de colonnes dans la requ\u00eate.</li> <li>Ins\u00e9rez un autre athl\u00e8te fictif mais en sp\u00e9cifiant seulement son nom, pr\u00e9nom et la date de naissance.</li> <li>R\u00e9cup\u00e9rez le id qui a \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9 automatiquement lors de la requ\u00eate pr\u00e9c\u00e9dente et faites afficher avec une requ\u00eate SELECT le message suivant : \"L'athl\u00e8te [prenom] [nom] a \u00e9t\u00e9 ajout\u00e9 avec succ\u00e8s!\". Utilisez le id r\u00e9cup\u00e9r\u00e9 dans la clause WHERE de votre requ\u00eate.</li> <li>Cr\u00e9ez une nouvelle table appel\u00e9 athlete_quebec avec les colonnes suivante ( id cl\u00e9 primaire auto-incr\u00e9ment\u00e9, nom, pr\u00e9nom, ville )</li> <li>Ins\u00e9rez dans cette table tous les athl\u00e8tes qui proviennent de la province du Qu\u00e9bec \u00e0 l'aide d'une requ\u00eate select.</li> </ol> <p>Je veux que vous me remettiez les requ\u00eates dans un script SQL avec pour chaque requ\u00eate d'insertion une requ\u00eate select qui va valider que les donn\u00e9es ont bien \u00e9t\u00e9 ajout\u00e9.</p>"},{"location":"exercices/ex06_enonce/","title":"Exercice 6 - VIEW","text":"<p>\u00c0 partir de la base de donn\u00e9es athl\u00e8te de l'exercice pr\u00e9c\u00e9dente, (le script sql de g\u00e9n\u00e9ration est disponible ici), creez les views suivantes : </p> <ol> <li>Cr\u00e9ez une view nomm\u00e9e resultat_hhmmss qui affiche le r\u00e9sultat format\u00e9 en heures, minutes, secondes (hhss). Les colonnes de la view doivent \u00eatre les m\u00eames que la table resultat mais en ajoutant une colonne nomm\u00e9e resultat_hhmmss dans laquelle le calcul sera fait (id, athlete_id, epreuve_id, date_resultat, resultat_ms, resultat_hhmmss).</li> <li>Cr\u00e9ez une view nomm\u00e9e athlete_complet qui, en combinant les tables n\u00e9cessaires, affiche les athl\u00e8tes avec les colonnes suivantes, (id, nom pr\u00e9nom concat, date_epreuve, nom_epreuve, r\u00e9sultat). Attention, je veux que les noms de colonnes de la view soit identique \u00e0 ce que je demande entre parenth\u00e8se)</li> <li>\u00c0 partir de la view pr\u00e9c\u00e9dente, athlete_complet, s\u00e9lectionn\u00e9 les informations des athl\u00e8tes qui ont particip\u00e9 \u00e0 un marathon. </li> <li>Cr\u00e9ez une view nomm\u00e9e resultat_21juillet2020 qui va contenir toutes les informations de la table r\u00e9sultat mais uniquement pour la date du 21 juillet 2020.</li> <li>Modifier la view resultat_21juillet2020 pour qu'elle affiche les r\u00e9sultats du 14 juillet 2019. Modifier aussi son nom pour resultat_14juillet2019</li> <li>Supprimer la view resultat_14juillet2019</li> </ol> <p>Je veux que vous me remettiez les requ\u00eates dans un script SQL.</p>"},{"location":"exercices/ex07_enonce/","title":"Exercice 7 - Triggers","text":""},{"location":"exercices/ex07_enonce/#preparation-des-donnees","title":"Pr\u00e9paration des donn\u00e9es","text":"<ul> <li>Importer le script sql ex07_create_tables.sql disponible ici</li> </ul>"},{"location":"exercices/ex07_enonce/#triggers-a-creer","title":"Triggers \u00e0 cr\u00e9er","text":""},{"location":"exercices/ex07_enonce/#question-1","title":"Question #1","text":"<p>Pour chaque modification \u00e0 la table resultat, ins\u00e9rez les informations n\u00e9cessaires dans la table resultat_log APR\u00c8S l'ex\u00e9cution de la requ\u00eate INSERT, UPDATE et DELETE. Attention, lors d'un UPDATE, ajoutez les informations seulement si la colonne resultat_ms a \u00e9t\u00e9 modifi\u00e9.</p> colonne insert update delete operation \"insert\" \"update\" \"delete\" ancien_resultat null old.resultat_ms old.resultat_ms nouveau_resultat new.resultat_ms new.resultat_ms null resultat_id new.id new.id new.id date_operation La date du jour La date du jour La date du jour"},{"location":"exercices/ex07_enonce/#question-2","title":"Question #2","text":"<p>Quand on ajoute un r\u00e9sultat, validez que la valeur de la colonne cree_par existe dans la table usager. Si la valeur est invalide, emp\u00eachez la requ\u00eate INSERT et retournez un message d'erreurs. La valeur \u00e0 ins\u00e9rer dans le champ cree_par est le id d'un usager de la table usager. </p>"},{"location":"exercices/ex07_enonce/#question-3","title":"Question #3","text":"<p>Effectuez les m\u00eames op\u00e9rations que la question #2 quand on modifie un r\u00e9sultat mais sur la colonne modifie_par.</p>"},{"location":"exercices/ex07_enonce/#question-4","title":"Question #4","text":"<p>AVANT l'insertion ou la modification de la description d'une \u00e9preuve dans la table epreuve_type, valider que la description n'est pas d\u00e9j\u00e0 utilis\u00e9. Si oui, modifiez la valeur \u00e0 ajouter ou modifier en ajoutant (x) \u00e0 la description. ( x vaudra le nombre de fois que le nom se retrouve dans la table -1 ) Ex. On veut ins\u00e9rer Marathon comme valeur mais elle est d\u00e9j\u00e0 pr\u00e9sente comme description dans la table. On va utiliser Marathon (1) comme nouvelle valeur \u00e0 ins\u00e9rer.</p>"},{"location":"exercices/ex08_enonce/","title":"Exercice 8 - Fonctions","text":"<p>Dans la base de donn\u00e9es que vous avec import\u00e9e \u00e0 l'exercice 7 cr\u00e9ez les deux fonctions suivantes : </p>"},{"location":"exercices/ex08_enonce/#formater-un-resutlat","title":"Formater un r\u00e9sutlat","text":"<p>Cr\u00e9ez une fonction nomm\u00e9e resultatHMS qui prendra en param\u00e8tre un r\u00e9sultat en millisecondes et qui le retournera en texte sous le format heures minutes et secondes (HH:MM:SS).</p>"},{"location":"exercices/ex08_enonce/#fonction-de-calcul-de-moyenne-au-5-kilometres","title":"Fonction de calcul de moyenne au 5 kilom\u00e8tres","text":"<p>Ajoutez les informations suivantes : </p> <pre><code>-- Insertion de l'athl\u00e8te John Smith avec trois r\u00e9sultats au 5 km\nINSERT INTO athlete (nom, prenom, date_naissance, adresse, ville, province, pays, courriel)\nVALUES ('Smith', 'John', '1980-01-01', '475 Rue Notre Dame E', 'Victoriaville', 'Qu\u00e9bec', 'Canada', 'john.smith@gmail.com');\n\nSET @id_athlete := LAST_INSERT_ID();\n\nINSERT INTO resultat (athlete_id , epreuve_type_id, date_resultat, resultat_ms, evenement_id)\nVALUES (@id_athlete, 1, '2023-07-17', 1529499, 2),\n       (@id_athlete, 1, '2023-08-17', 1995742, 2),\n       (@id_athlete, 1, '2023-09-17', 1480882, 2);\n</code></pre> <p>Cr\u00e9ez une fonction nomm\u00e9e moyenne5k qui va prendre en param\u00e8tre le id d'un athl\u00e8te et qui va retourner la moyenne de ses r\u00e9sultats pour toutes ses r\u00e9sultats au 5 km. La valeur de sortie doit \u00eatre la moyenne des r\u00e9sultats exprim\u00e9es en heures, minutes, secondes (hhss) et de type VARCHAR(). </p> <p>Utilisez l'athl\u00e8te John Smith qu'on vient d'ajouter pour tester la fonction, le r\u00e9sultat devrait \u00eatre <code>00:27:48</code>.</p>"},{"location":"exercices/ex09_enonce/","title":"Exercice 9 - Cr\u00e9dit social","text":""},{"location":"exercices/ex09_enonce/#installation","title":"Installation","text":"<p>Les scripts sql de g\u00e9n\u00e9ration de la base de donn\u00e9es sont disponible ici</p> <ul> <li>Cr\u00e9ez la base de donn\u00e9es et les tables en ex\u00e9cutant le script sql 01_create_table.sql</li> <li>Ins\u00e9rez les donn\u00e9es en ex\u00e9cutant les scripts suivants (l'ordre est important). Certains scripts comportent beaucoup de ligne, 50 000 pour 04_insert_citoyen, c'est normal que le temps ex\u00e9cution soit long. Importez les scripts en ligne de commande pour gagner beaucoup de temps!!!</li> </ul> <p>Liste des scripts \u00e0 ex\u00e9cuter</p> <ul> <li>02_insert_classe</li> <li>03_insert_evenement_type</li> <li>04_insert_citoyen</li> <li>05_insert_evenement</li> <li>06_insert_citoyen_evenement</li> </ul> <p>Inscrivez moi les scripts des 5 num\u00e9ros dans un fichier sql. Une fois termin\u00e9 remettez moi le fichier dans le devoir sur Teams.</p>"},{"location":"exercices/ex09_enonce/#diagramme-des-classes","title":"Diagramme des classes","text":""},{"location":"exercices/ex09_enonce/#descriptions","title":"Descriptions","text":"<p>La base de donn\u00e9es sert \u00e0 stocker des informations sur les citoyens pour \u00e9tablir leur score de cr\u00e9dit social, une note de bon comportement qui d\u00e9termine dans quel classe le citoyen est situ\u00e9. </p>"},{"location":"exercices/ex09_enonce/#calcul-du-credit-social","title":"Calcul du cr\u00e9dit social","text":"<p>\u00c0 la naissance, un citoyen se voit octroyer un cr\u00e9dit initial de 500 (par contre ce nombre pourrait \u00eatre modifi\u00e9 par le parti). Tout au long de sa vie, le total de ce cr\u00e9dit va fluctuer selon des \u00e9v\u00e9nements auquel le citoyen va participer. Donc le cr\u00e9dit social de chaque citoyen est la somme de son cr\u00e9dit initial et du score de tous les \u00e9v\u00e9nements auxquels il a particip\u00e9. Les \u00e9v\u00e9nements sont d\u00e9fini par un type et un score par d\u00e9faut (dans la table evenement_type, mais ce score peut \u00eatre ajust\u00e9 selon la nature de l'\u00e9v\u00e9nement (le champ score_ajustement de la table citoyen_evenement, s'il est \u00e0 null ne pas en tenir compte, sinon il outrepasse le score par d\u00e9faut de l'\u00e9v\u00e9nement). Le score de cr\u00e9dit social peut varier entre 0 et 1000.</p>"},{"location":"exercices/ex09_enonce/#calcul-de-la-classe-du-citoyen","title":"Calcul de la classe du citoyen","text":"<p>Chaque citoyen appartient \u00e0 une classe selon son score de cr\u00e9dit social. \u00c7a lui donne droit \u00e0 certain avantage de sa classe mais aussi aux avantages de toutes les classes inf\u00e9rieurs. Pour appartenir \u00e0 une classe, le score de cr\u00e9dit social du citoyen doit \u00eatre sup\u00e9rieur au cr\u00e9dit minimum de cette classe ( colonne credit_min de la table classe). La classe est recalcul\u00e9 chaque nuit selon son score actuel. Donc pour connaitre la classe d'un citoyen vous n'avez qu'\u00e0 utiliser le champ classe_id de la table citoyen.</p>"},{"location":"exercices/ex09_enonce/#exercices","title":"Exercices","text":""},{"location":"exercices/ex09_enonce/#1-fonction-calcul_credit","title":"1. Fonction calcul_credit()","text":"<p>Cr\u00e9ez une fonction nomm\u00e9e calcul_credit qui prends en param\u00e8tre le id d'un citoyen et retourne le total du calcul de son cr\u00e9dit social. </p> Param\u00e8tres IN/OUT tYPE Valeur test id IN INT 20958 RETURNS - INT 365 <p>Ex. Le citoyen Harry Walsh, id 20958, pin 51d8fbc8-d473-45f5-991e-15aea899e8f9, a un score de cr\u00e9dit social de 365. </p> <pre><code>select calcul_credit(20958) as score_credit\n</code></pre>"},{"location":"exercices/ex09_enonce/#2-fonction-privilege_valide","title":"2. Fonction privilege_valide()","text":"<p>Cr\u00e9ez une fonction nomm\u00e9e privilege_valide qui prend en param\u00e8tre le code pin du citoyen ainsi que le id d'une classe. Si la classe du citoyen est \u00e9gale ou sup\u00e9rieur \u00e0 la classe pass\u00e9e en param\u00e8tre, retournez TRUE, sinon retournez FALSE. Pour d\u00e9termin\u00e9 si une classe est sup\u00e9rieur \u00e0 une autre, vous devez vous fiez \u00e0 la colonne credit_min de la table classe.</p> Param\u00e8tres IN/OUT tYPE Valeur test pin IN VARCHAR(100) 51d8fbc8-d473-45f5-991e-15aea899e8f9 classe_id IN INT 4 RETURNS - BOOLEAN FALSE <p>Ex. Le citoyen Harry Walsh, id 20958, pin 51d8fbc8-d473-45f5-991e-15aea899e8f9 appartient \u00e0 la classe Delta. </p> <pre><code>-- Cette requ\u00eate retournera 1\nselect privilege_valide('51d8fbc8-d473-45f5-991e-15aea899e8f9',4) as valide\n-- Cette requ\u00eate retournera 0\nselect privilege_valide('51d8fbc8-d473-45f5-991e-15aea899e8f9',3) as valide\n</code></pre>"},{"location":"exercices/ex09_enonce/#3-vue-citoyen_avec_credit","title":"3. Vue citoyen_avec_credit","text":"<p>Cr\u00e9ez une vue nomm\u00e9e citoyen_avec_credit qui contiendra les champs suivants</p> Nom colonne table colonne citoyen_id citoyen id nom citoyen nom, prenom (\"Walsh, Harry\") pin citoyen pin classe classe titre credit calcul\u00e9 <p>Faites ensuite une requ\u00eate sur cette view pour afficher les informations du citoyen id 20958</p>"},{"location":"exercices/ex09_enonce/#4-procedure-stockee-liste_manifestant","title":"4. Proc\u00e9dure stock\u00e9e liste_manifestant","text":"<p>Cr\u00e9ez une proc\u00e9dure stock\u00e9e nomm\u00e9e liste_manifestant qui prend une date en param\u00e8tre et retourne une liste de manifestants qui \u00e9tait pr\u00e9sent. Assurez-vous que pour la date s\u00e9lectionn\u00e9e s'il y a un \u00e9v\u00e9nement il soit de type manifestation. Le r\u00e9sultat doit \u00eatre class\u00e9 en ordre alphab\u00e9tique de nom et pr\u00e9nom.</p> Nom colonne table colonne citoyen_id citoyen id evenement_id evenement id nom citoyen nom, prenom (\"Walsh, Harry\") pin citoyen pin classe classe titre date_evenement evenement date_evenement notes evenement notes <p>Faite ensuite une validation avec la date 2021-04-01, vous devriez avoir 17 enregistrements. Si vous essayer avec la date 2022-09-15 vous devriez en avoir aucun.</p>"},{"location":"exercices/ex09_enonce/#5-procedure-stockee-update_classe","title":"5. Proc\u00e9dure stock\u00e9e update_classe","text":"<p>Cr\u00e9ez une proc\u00e9dure stock\u00e9e nomm\u00e9e update_classe qui va mettre \u00e0 jour la classe de chaque citoyen. Il vous faudra calculer le cr\u00e9dit social de chacun, ensuite d\u00e9terminer dans quelle classe il appartient selon le cr\u00e9dit minimum de chaque classe. </p> <ul> <li>Vous devez parcourir tous les enregistrements de la table citoyen en utilisant un curseur.</li> <li>Si vous d\u00e9tectez une diff\u00e9rence entre la classe du citoyen et votre calcul, vous devez \"logger\" le probl\u00e8me dans la table log_update_classe.</li> </ul> <p>Pour tester votre procedure, limitez la requ\u00eate SELECT qui alimente le curseur \u00e0 un seul citoyen et modifier la valeur du champs credit_initial de ce citoyen pour que la valeur du champs classe_id ne soit plus valide. Dans l'exemple plus bas j'ai modifi\u00e9 la valeur du cr\u00e9dit initial du citoyen 2 pour 850, ce qui lui donne une classe de 2 (Beta) au lieu de 4 (Delta).</p> <p> </p> <p>Apr\u00e8s avoir lancer ma proc\u00e9dure, on peut voir que la valeur de classe_id a bien \u00e9t\u00e9 modifi\u00e9 et que l'op\u00e9ration a \u00e9t\u00e9 enregistr\u00e9 dans la table log_update_classe.</p> <p></p> <p></p>"},{"location":"exercices/ex10_enonce/","title":"Exercice 10 - Curseur","text":"<p>Cet exercice \u00e0 pour objectif de vous rendre plus \u00e0 l'aise avec la cr\u00e9ation et l'utilisation de curseurs.</p> <ul> <li>T\u00e9l\u00e9chargez et ex\u00e9cutez le script sql disponible ici : ex10_create_tables. </li> </ul>"},{"location":"exercices/ex10_enonce/#premiere-question","title":"Premi\u00e8re question","text":"<p>Dans la table houblon de la base de donn\u00e9es, il y a un champ pays qui contient le nom du pays producteur du type de houblon.  </p> <p>Cr\u00e9ez une proc\u00e9dure stock\u00e9e avec curseur qui va lister tous les pays pr\u00e9sents dans la table.</p> <ul> <li>Le format du r\u00e9sultat est un string avec la liste des pays s\u00e9par\u00e9s par un point-virgule (\"Canada;\u00c9tats-Unis\")</li> <li>Il ne doit pas avoir de doublon dans la liste</li> <li>Les pays doivent \u00eatre class\u00e9 en ordre alphab\u00e9tique</li> <li>Utilisez une variable OUT pour r\u00e9cup\u00e9rer le r\u00e9sultat</li> </ul> <p>Vous devriez avoir comme r\u00e9sultat  r\u00e9sultat<pre><code>\"Allemagne;Australie;\u00c9tats-Unis;France;Japon;Nouvelle-Z\u00e9lande;Pologne;R\u00e9publique-Tch\u00e8que;Royaume-Uni;Russie;Slov\u00e9nie\"\n</code></pre></p> <p>Cr\u00e9ez un script SQL nomm\u00e9e NomPrenom_ex10_1.sql qui va contenir la cr\u00e9ation de la proc\u00e9dure et un test \u00e0 la fin de votre proc\u00e9dure.</p>"},{"location":"exercices/ex10_enonce/#deuxieme-question","title":"Deuxi\u00e8me question","text":"<p>Encore dans la table houblon, il y a un champ similitude qui contient une liste de houblon similaire au houblon s\u00e9lectionn\u00e9. Le but est de pouvoir proposer des houblons qui s'accompagnent bien ensemble. On va extraire cette information dans une nouvelle table.</p> <p>Cr\u00e9ez un script SQL nomm\u00e9e NomPrenom_ex10_2.sql qui va contenir l'ensemble des \u00e9l\u00e9ments de votre r\u00e9ponse.</p> <p>Cr\u00e9ez les tables selon le diagramme UML suivant</p> <p></p> <p>Cr\u00e9ez une proc\u00e9dure stock\u00e9e selon les crit\u00e8res suivants:</p> <ul> <li>La proc\u00e9dure doit utiliser un curseur</li> <li>Cr\u00e9ez une transaction qui sera compl\u00eate uniquement si le traitement se d\u00e9roule bien jusqu'\u00e0 la fin</li> <li>Supprimez le contenu des tables similitude et similitude_log</li> <li>Pour chaque ligne de la table houblon, isoler les valeurs de la colonne similitude (elles sont s\u00e9par\u00e9es par des virgules)</li> <li>Pour chaque valeur, d\u00e9terminez si un houblon du m\u00eame nom existe d\u00e9j\u00e0.</li> <li>Si oui, ajoutez dans la nouvelle table similitude le id du houblon de la ligne et le id du houblon de la valeur trouv\u00e9e.</li> <li>Si non, ajoutez dans la table similitude_log le id du houblon de la ligne et la valeur en texte.</li> <li>Si on rencontre une erreur de type SQLEXCEPTION le traitement doit s'arr\u00eater et les modifications annul\u00e9es. Affichez aussi un message d'erreur \u00e0 l'usager.</li> </ul> <p>Pour tester votre proc\u00e9dure, lancez l\u00e0 et ensuite faites une requ\u00eate sur le houblon \"Admiral\" pour sortir ses houblons similaires depuis la table similitude. Vous devriez avoir comme r\u00e9sultat les houblons \"Target\" et \"Challenger\".</p> <p>Je vais r\u00e9cup\u00e9rer vos deux scripts SQL dans le devoir sur Teams</p>"},{"location":"exercices/ex11_enonce/","title":"Exercice 11 - Gestion des usagers","text":"<p>Pour cet exercice nous allons utiliser la base de donn\u00e9es credit_social (voir le script de cr\u00e9ation dans l'exercice 9).Vous devez me produire un script SQL qui va effectuer les op\u00e9rations suivantes. Assurez-vous de tester que les permissions sont bien appliqu\u00e9es. Vous pouvez ajouter les r\u00e9ponses des sections \"e\" dans le m\u00eame script en commentaire.</p>"},{"location":"exercices/ex11_enonce/#1-usager-mike","title":"1. Usager mike","text":"<p>a) Cr\u00e9ez un usager avec les informations suivantes : </p> <ul> <li>nom : mike</li> <li>mot de passe : !alph2</li> <li>h\u00f4te accept\u00e9 : tous</li> </ul> <p>b) Creez un r\u00f4le nomm\u00e9e <code>alpha</code></p> <p>c) Donnez les permissions suivantes \u00e0 ce r\u00f4le : </p> <ul> <li>Il a la permission de tout faire dans la base de donn\u00e9es credit_social.</li> <li>Il peut aussi ajouter des permissions \u00e0 d'autre usagers.</li> <li>Il peut cr\u00e9er des usagers pour ==toutes les bases de donn\u00e9es==, pas seulement credit_social.</li> </ul> <p>d) Attribuez \u00e0 l'usager <code>mike</code> le r\u00f4le <code>alpha</code> et assurez-vous que le r\u00f4les est activ\u00e9 automatiquement lors de la connexion de l'usager</p> <p>e) Testez les \u00e9l\u00e9ments suivants</p> <ul> <li>Inscrivez le r\u00e9sultat d'une requ\u00eate SELECT sur une table d'une autre base de donn\u00e9es que credit_social. Par exemple bd2_ex10.</li> <li>Faites la cr\u00e9ation de l'usager suivant (le point #2) avec cet usager. Est-ce que \u00e7a fonctionne?</li> </ul>"},{"location":"exercices/ex11_enonce/#2-usager-john","title":"2. Usager john","text":"<p>a) Cr\u00e9er un usager avec les informations suivantes : </p> <ul> <li>nom : john</li> <li>mot de passe : !b3ta</li> <li>h\u00f4te accept\u00e9 : tous</li> </ul> <p>b) Creez un r\u00f4le nomm\u00e9e <code>beta</code></p> <p>c) Donnez les permissions suivantes \u00e0 ce r\u00f4le : </p> <ul> <li>Il peut faire des requ\u00eates SELECT, UPDATE, INSERT sur les tables citoyen et evenement de la base de donn\u00e9es credit_social.</li> <li>Il peut ex\u00e9cuter toutes les proc\u00e9dures stock\u00e9es.</li> </ul> <p>d) Attribuez \u00e0 l'usager <code>john</code> le r\u00f4le <code>beta</code></p> <p>e) Testez les \u00e9l\u00e9ments suivants</p> <ul> <li>Essayez de supprimer l'\u00e9v\u00e9nement avec le id 6 de la table evenement. Inscrivez la requ\u00eate effectu\u00e9e et le r\u00e9sultat.</li> <li>Ex\u00e9cutez une proc\u00e9dure stock\u00e9e de la base de donn\u00e9es credit_social, par exemple liste_manifestant(). Est-ce que \u00e7a fonctionne?</li> <li>Modifiez le cr\u00e9dit initial du citoyen avec le id 2107 pour 800. Inscrivez la requ\u00eate effectu\u00e9e pour la mise \u00e0 jour et pour valider que la valeur a \u00e9t\u00e9 modifi\u00e9.</li> </ul>"},{"location":"exercices/ex11_enonce/#3-usager-bob","title":"3. Usager bob","text":"<p>a) Cr\u00e9er un usager avec les informations suivantes : </p> <ul> <li>nom : bob</li> <li>mot de passe : !g2mm2</li> <li>h\u00f4te accept\u00e9 : tous</li> </ul> <p>b) Creez un r\u00f4le nomm\u00e9e <code>gamma</code></p> <p>c) Donnez les permissions suivantes \u00e0 ce r\u00f4le : </p> <ul> <li>Il peut faire des requ\u00eates SELECT sur les colonnes nom, prenom et pin de la table citoyen de la base de donn\u00e9es credit_social.</li> <li>Il peut ex\u00e9cuter uniquement la proc\u00e9dure stock\u00e9e update_classe de la base de donn\u00e9es credit_social</li> </ul> <p>d) Attribuez \u00e0 l'usager <code>bob</code> le r\u00f4le <code>gamma</code></p> <p>e) Testez les \u00e9l\u00e9ments suivants</p> <ul> <li>\u00cates-vous capable de donner le nom et pr\u00e9nom du citoyen avec le id 1111? Sinon pourquoi?</li> <li>Faites les modifications n\u00e9cessaires pour en \u00eatre capable. Inscrivez l'op\u00e9ration effectu\u00e9e.</li> <li>Trouvez une fa\u00e7on pour permettre \u00e0 cet usager de pouvoir afficher le nom, prenom et la classe d'un citoyen selon son PIN sans ajouter la table classe dans les permissions SELECT de l'usager (indice : on a vu une fa\u00e7on de visualiser les donn\u00e9es d'une table sans y avoir acc\u00e8s). Inscrivez les op\u00e9rations effectu\u00e9es.</li> <li>Testez votre solution avec le PIN <code>39c0cf42-510c-4811-8c3c-47ab100443ce</code> et inscrivez le nom complet du citoyen correspondant.</li> </ul>"},{"location":"exercices/ex12_enonce/","title":"Exercice 12 - pyCRUD","text":"<p>Comme premier exercice avec Python, on va cr\u00e9er une application console simple qui va couvrir sommairement les op\u00e9ration CRUD. Nous allons utiliser la base de donn\u00e9es credit_social. Je vous laisse aller pour l'apprentissage de Python et des notions dont vous allez avoir besoin (afficher \u00e0 l'\u00e9cran, lire une saisie clavier, boucle, fonction, module?).</p>"},{"location":"exercices/ex12_enonce/#creation-du-menu","title":"Cr\u00e9ation du menu","text":"<p>Au lancement du programme, un menu s'affichera avec les options suivantes : </p> <ol> <li>Ajouter un nouveau citoyen</li> <li>Obtenir les informations d'un citoyen</li> <li>Modifier un citoyen</li> <li>Supprimer un citoyen</li> <li>Quitter</li> </ol> <p>Exemple de menu</p> <p></p>"},{"location":"exercices/ex12_enonce/#options-du-menu","title":"Options du menu","text":""},{"location":"exercices/ex12_enonce/#1-ajouter-un-citoyen","title":"1. Ajouter un citoyen","text":"<p>Demandez \u00e0 l'usager les informations suivantes sur le citoyen \u00e0 ajouter : </p> <ul> <li>nom</li> <li>pr\u00e9nom</li> <li>no_civique</li> <li>adresse</li> <li>ville</li> <li>pin</li> </ul> <p>Les champs classe_id et credit_initial seront \"forc\u00e9s\" \u00e0 respectivement 4 et 500. Une fois l'ajout fait, affichez un message de confirmation et revenez au menu principal.</p> <p></p>"},{"location":"exercices/ex12_enonce/#2-obtenir-les-informations-dun-citoyen","title":"2. Obtenir les informations d'un citoyen","text":"<p>Demandez \u00e0 l'usager de saisir le id du citoyen. Affichez ensuite les informations suivantes \u00e0 l'\u00e9cran : </p> <ul> <li>Pr\u00e9nom et nom</li> <li>Classe</li> <li>Score de cr\u00e9dit social</li> </ul> <p>Ensuite revenez au menu principal.</p> <p></p>"},{"location":"exercices/ex12_enonce/#3-modifier-un-citoyen","title":"3. Modifier un citoyen","text":"<p>Permettre en saisissant le id d'un citoyen de modifier son adresse ( no_civique, adresse, ville). Affichez un message de confirmation et revenez au menu principal.</p> <p></p>"},{"location":"exercices/ex12_enonce/#4-supprimer-un-citoyen","title":"4. Supprimer un citoyen","text":"<p>Supprimez un citoyen de la base de donn\u00e9es avec son id. Attention pr\u00e9sentement dans la base de donn\u00e9es il n'y a aucune cl\u00e9s \u00e9trang\u00e8res entre les tables citoyen, citoyen_evenement et evenement. On peut donc supprimer un citoyen sans supprimer les \u00e9v\u00e8nements auxquelles il a particip\u00e9. Il faudrait s'assurer qu'en supprimant un citoyen, ses \u00e9v\u00e8nements soient aussi supprim\u00e9. \u00c0 vous de choisir l'approche que vous voulez (le faire dans la requ\u00eate suppression, supprimer en cascade depuis une cl\u00e9 \u00e9trang\u00e8re, etc.)</p> <p></p>"},{"location":"exercices/ex12_enonce/#5-quitter","title":"5. Quitter","text":"<p>On quitte la boucle et le programme.</p>"},{"location":"exercices/ex13_enonce/","title":"Exercice 13 - pyQt5","text":"<p>\u00c0 l'aide de la librairie pyQT5 et de la base de donn\u00e9es credit_social, cr\u00e9ez une interface graphique qui permettra de saisir un id de citoyen et de retourner son nom.</p>"},{"location":"exercices/ex13_enonce/#resultat","title":"R\u00e9sultat","text":"<ul> <li>On entre un id dans le textBox.</li> <li>En cliquant sur rechercher, on effectue une requ\u00eate \u00e0 la base de donn\u00e9es.</li> <li>On affiche le nom du citoyen sous le bouton.</li> </ul>"},{"location":"exercices/ex13_enonce/#exemple-de-code","title":"Exemple de code","text":"<p>L'exemple de code suivant va afficher une fen\u00eatre vide.</p> <pre><code># Pour pouvoir passer des arguments \u00e0 notre application\nimport sys\n# Les librairies PyQT5\nfrom PyQt5.QtCore import *\nfrom PyQt5.QtWidgets import *\nfrom PyQt5.QtGui import *\n\nclass MainWindow(QMainWindow):\n\n    def __init__(self):\n        super(MainWindow, self).__init__()\n\n        self.setWindowTitle(\"Oh la belle fen\u00eatre vide\")\n        self.setFixedSize(QSize(600, 300))\n\n# Une instance de QApplication, on doit en avoir absolument \n# une et seulement une par application \napp = QApplication(sys.argv)\n\n# Cr\u00e9ation de notre fen\u00eatre principale en appelant la fonction\n# MainWindow appel\u00e9 plus haut\nwindow = MainWindow()\n# Tr\u00e8s important de l'afficher car par d\u00e9faut elle est masqu\u00e9.\nwindow.show()\n\n# D\u00e9marre la boucle d'\u00e9v\u00e8nement. L'application va s'afficher.\napp.exec()\n</code></pre> <p>Exemple d'un classe MainWindows avec un bouton et un champ texte. Il y a un \u00e9v\u00e9nement sur le bouton pour appeler une fonction quand on le clique.</p> <pre><code>class MainWindows(QMainWindow):\n    def __init__(self):\n        super().__init__()\n\n        self.setWindowTitle(\"Mon App\")\n        self.setFixedSize(QSize(300, 300))\n\n        # On cr\u00e9e un widget qui va contenir les autres et on \n        # d\u00e9fini le type de layout \u00e0 utiliser\n        layout = QGridLayout()\n\n        # On cr\u00e9e un bouton avec le texte rechercher\n        bouton = QPushButton('Rechercher')\n        # On ajoute le bouton au widget layout \n        # \u00e0 la position 2,0 (troisi\u00e8me ligne, premi\u00e8re colonne)\n        layout.addWidget(bouton, 2, 0)\n\n        # On cr\u00e9e un widget label\n        self.resultat = QLabel('-')\n        # Formatage du texte\n        self.resultat.setAlignment(Qt.AlignCenter)\n        font = self.resultat.font()\n        font.setPointSize(12)\n        self.resultat.setFont(font)\n        self.resultat.setFixedHeight(100)\n        # On ajoute le label dans le layout\n        layout.addWidget(self.resultat, 3, 0)\n\n        # On associe l'\u00e9v\u00e9nement clic du bouton \u00e0 la fonction \n        # afficher_nom\n        bouton.clicked.connect(self.afficher_nom)\n\n        # On cr\u00e9e un container qui repr\u00e9sente le widget principal, \n        # tout le contenu de notre fen\u00eatre\n        container = QWidget()\n        # On y ajoute le widget layout\n        container.setLayout(layout)\n        # On d\u00e9fini le container comme le widget principal\n        self.setCentralWidget(container)\n\n    def afficher_nom(self):\n        self.resultat.setText('Mathieu Fr\u00e9chette')\n</code></pre>"},{"location":"exercices/ex14_enonce/","title":"Exercice 14 - qtDesigner","text":"<p>Vous devez cr\u00e9er un \u00e9cran avec qtDesigner qui permettra de cr\u00e9er un nouvel \u00e9v\u00e9nement dans la base de donn\u00e9es credit_social et du m\u00eame coup ajouter des citoyens qui \u00e9taient pr\u00e9sent.</p> <p>Voici une capture d'\u00e9cran de la disposition de la fen\u00eatre ainsi que des divers Widgets.</p> <p></p>"},{"location":"exercices/ex14_enonce/#widgets-a-utiliser","title":"Widgets \u00e0 utiliser","text":"<ul> <li>Liste des types d'\u00e9v\u00e9nements : QComboBox, la liste est aliment\u00e9 par le r\u00e9sultat d'une requ\u00eate de la table evenement_type.</li> <li>Date : QDateEdit, pour initialiser \u00e0 la date du jour : <code>self.inputDate.setDateTime(QDateTime.currentDateTime())</code></li> <li>Notes : QTextEdit</li> <li>Liste des citoyens pr\u00e9sents : QTableWidget, info ici</li> <li>Id du citoyen et score : QLineEdit</li> <li>Les boutons : QPushButton</li> </ul>"},{"location":"exercices/ex14_enonce/#comportement","title":"Comportement","text":""},{"location":"exercices/ex14_enonce/#initialisation-de-la-fenetre","title":"Initialisation de la fen\u00eatre","text":"<p>Au chargement de la fen\u00eatre, remplissez la liste d\u00e9roulante des types d'\u00e9v\u00e9nements avec les types pr\u00e9sents dans la table evenement_type. Ajouter le texte et aussi le id dans chaque item de la liste pour pouvoir utiliser le id lors de la cr\u00e9ation de l'\u00e9v\u00e9nement.</p>"},{"location":"exercices/ex14_enonce/#ajout-de-citoyen","title":"Ajout de citoyen","text":"<p>Pour ajouter un citoyen, on doit inscrire un id et optionnellement un score ajustement. Ensuite en cliquand sur le bouton Ajouter un requ\u00eate est fait \u00e0 la BD pour valider que le citoyen existe. Si oui ajoutez une ligne dans le tableau avec le id du citoyen, son nom complet ainsi que la valeur du score ajustement.</p> <p>On peut aussi s\u00e9lectionner un citoyen dans le tableau et cliquer sur le bouton Supprimer pour l'enlever de la liste. Si aucun citoyen n'est s\u00e9lectionn\u00e9, affichez un message d'erreur avec un QMessageBox.</p>"},{"location":"exercices/ex14_enonce/#creation-de-levenement","title":"Cr\u00e9ation de l'\u00e9v\u00e9nement","text":"<p>Quand on clique sur le bouton Cr\u00e9er l'\u00e9v\u00e9nement, commencez par cr\u00e9er l'\u00e9v\u00e9nement avec les informations du type, de la date et des notes. Ensuite, pour chaque citoyen dans le tableau, faite une entr\u00e9e dans la table citoyen_evenement. Si le score ajustement \u00e9tait rest\u00e9 vide, ins\u00e9rez Null dans la table. Utilisez None en Python pour simuler le Null lors de l'insertion.</p> <p>Finalement une fois les enregistrements faits, effacer les diff\u00e9rents champs et r\u00e9initialisez la date \u00e0 celle d'aujourd'hui.</p> <p></p>"},{"location":"exercices/examen01_revision_a/","title":"Examen 1 - R\u00e9vision A","text":""},{"location":"exercices/examen01_revision_a/#consignes","title":"Consignes","text":"<p>\u00c0 partir de la mise en situation suivante, vous devez produire un ==sch\u00e9ma conceptuel== qui r\u00e9pondra aux normes suivantes: </p> <ul> <li>Le sch\u00e9ma respecte les exigences de la mise en situation.</li> <li>La multiplicit\u00e9 des associations est juste.</li> <li>Le sch\u00e9ma respecte les normes de conception.</li> </ul> <p>On va faire une auto-correction de vos sch\u00e9mas ensemble en classe.</p>"},{"location":"exercices/examen01_revision_a/#mise-en-situation","title":"Mise en situation","text":"<p>L'entreprise qui vous emploie d\u00e9veloppe une plateforme Web de vente de musique appel\u00e9e GroupCamp. Le principe du service est que les artistes  peuvent proposer leur album au prix qu'ils d\u00e9cident. L'acheteur peut ensuite d\u00e9cider de payer le prix demand\u00e9 ou bien plus cher s'il veut encourager  l'artiste. Vous \u00eates en charge de produire une premi\u00e8re \u00e9bauche d'enregistrement des informations dans une base de donn\u00e9es MySQL. Pour l'instant, tout le volet transactionnel et s\u00e9curit\u00e9 ne sera pas pris en charge par votre mod\u00e8le, ==vous devez seulement vous concentrer sur les \u00e9l\u00e9ments suivants==.</p> <p>Les artistes seront invit\u00e9s \u00e0  s'inscrire \u00e0 notre service en nous fournissant leur nom (nom d'artiste ou nom du groupe), une image qui les  repr\u00e9sente ainsi que la localisation d'o\u00f9 ils proviennent. La localisation est  un court texte o\u00f9 ils peuvent entrer une information du genre \"Victoriaville,  Qu\u00e9bec\", \"Californie\", \"Le garage chez Fred\", etc. </p> <p>Ensuite bien s\u00fbr les artistes vont nous informer sur les albums qui vont mettre en vente. Chaque album  comporte un titre, une description, une date de parution et une image. Que ce soit pour l'image de l'artiste ou de l'album, nous allons sauvegarder l'URL de l'image qui sera stock\u00e9e sur un de nos serveurs. L'artiste va aussi nous indiquer le prix minimum qu'il demande pour l'album. Pour l'instant, tous les  montants seront en devise canadienne. L'album comportera une ou plusieurs pistes, dont on enregistrera son titre, son ordre dans l'album et sa dur\u00e9e en secondes.</p> <p>Pour chaque album l'artiste  peut ajouter une s\u00e9rie de mots-cl\u00e9s qui d\u00e9finit le type de musique de l'album.  Il pourra choisir parmi la liste des mots-cl\u00e9s de tous les albums de tous les artistes ou en entrer de nouveaux. Le but \u00e9tant de permettre ensuite \u00e0 l'utilisateur de faire une recherche par mot-cl\u00e9. Cette option n'est pas obligatoire, l'artiste pourrait n\u2019en ajouter aucun \u00e0 l'album. Les mots-cl\u00e9s peuvent aussi varier d'un album \u00e0 l'autre du m\u00eame artiste. De plus, parmi tous les mots-cl\u00e9s choisis pour l'album, l'artiste peut en d\u00e9finir un qui sera \"principal\", ce mot-cl\u00e9 sera mis de l'avant \u00e0 l'affichage et lors des recherches. Un album ne peut pas avoir plus d'un mot-cl\u00e9 principal.</p> <p>Parlons maintenant du volet utilisateur. N'importe qui peut se cr\u00e9er un compte sur notre service. La personne devra nous fournir un nom d'usager et si elle le veut un court texte d'un maximum de 500 caract\u00e8res qui la d\u00e9crit. Le nom d'usager doit \u00eatre unique dans la base de donn\u00e9es.</p> <p>Quand un utilisateur ach\u00e8te un album, celui-ci va \u00eatre stock\u00e9 dans sa \"collection\". On va y sauvegarder le prix que l'usager a pay\u00e9. Il pourra aussi s'il le d\u00e9cide indiquer sa piste pr\u00e9f\u00e9r\u00e9e de l'album et laisser un commentaire sur l'album en g\u00e9n\u00e9rale qui sera affich\u00e9 sur la page de description de l'album. L'usager aura aussi la possibilit\u00e9 de se  cr\u00e9er une liste de souhaits d'album qu'il aime, mais qu'il n'a pas encore achet\u00e9. Dans ce cas, on enregistre uniquement un lien vers l'album. Si l'usager ach\u00e8te un album de sa liste de souhaits, il disparaitra de celle-ci.</p>"},{"location":"exercices/ff_enonce/","title":"Formatif formel","text":""},{"location":"exercices/ff_enonce/#consignes","title":"Consignes","text":"<ul> <li>Vous avez droit \u00e0 toutes vos notes et Internet.</li> <li>Aucune communication n'est permise (messagerie, courriel, etc.). Un \u00e9l\u00e8ve pris en flagrant d\u00e9lit se verra attribuer la note de 0 pour plagiat.</li> <li>La dur\u00e9e de l'examen est de 1h50.</li> <li>Une fois l\u2019examen termin\u00e9, vous devez me remettre vos fichiers image via le devoir de l\u2019examen sur Teams. </li> <li>Il est de votre devoir de vous assurer que votre fichier est inclus dans la remise. Aucun fichier ne sera accept\u00e9 une fois que vous aurez quitt\u00e9 le lieu de l'examen. </li> </ul>"},{"location":"exercices/ff_enonce/#mise-en-situation","title":"Mise en situation","text":"<p>Le centre de recherche xLabs se sp\u00e9cialise dans des recherches dites marginales. Elle emploie une pl\u00e9thore de cobayes pour ses diff\u00e9rents projets et pr\u00e9sentement il est difficile de garder une trace de l'\u00e9tat de tous ces \"volontaires\". La direction vous a donn\u00e9 le mandat de mod\u00e9liser leur op\u00e9ration.</p> <p>Pour chaque cobaye, on veut connaitre sa date de naissance, la date \u00e0 laquelle il a commenc\u00e9 sa premi\u00e8re exp\u00e9rience et aussi sa date de d\u00e9c\u00e8s s'il y a lieu, car chez xlabs on est cobaye \u00e0 vie. Un surnom et un num\u00e9ro d'identification unique est attribu\u00e9 aux cobayes. Par contre ce num\u00e9ro peut \u00eatre r\u00e9utilis\u00e9 \u00e0 la mort du cobaye.</p> <p>Les cobayes peuvent participer \u00e0 plus d'une exp\u00e9rience \u00e0 la fois et chaque exp\u00e9rience doit comporter au minimum un cobaye mais peut en avoir plusieurs. On veut connaitre la date de d\u00e9but et de fin de la participation de chaque cobaye \u00e0 chaque exp\u00e9rience. Chaque exp\u00e9rience \u00e0 un titre, un niveau de s\u00e9curit\u00e9 qui se situe entre 0 et 10 et une courte description qui d\u00e9fini le sujet de l'exp\u00e9rience. Un ou plusieurs chercheurs peuvent \u00eatre associ\u00e9s \u00e0 une exp\u00e9rience et un chercheur peut participer \u00e0 plus d'une exp\u00e9rience \u00e0 la fois. Parmi les chercheurs impliqu\u00e9s, un r\u00f4le est attribu\u00e9 \u00e0 chacun. Il y a pr\u00e9sentement trois r\u00f4les disponible (directeur de recherche, assistant, appariteur) mais il n'est pas impossible que \u00e7a change dans l'avenir. Le r\u00f4le d'un chercheur peut aussi varier d'une exp\u00e9rience \u00e0 l'autre. Au niveau des chercheurs, on veut connaitre uniquement leur nom et leur num\u00e9ro d'identification personnelle. </p> <p>Durant le temps que dure une exp\u00e9rience, les chercheurs vont faire des observations. Pour chaque observation, il y a un chercheur impliqu\u00e9, un cobaye, une exp\u00e9rience, une date d'observation et les notes de l'observation. </p> <p>Afin de s'assurer de la bonne rentabilit\u00e9 des cobayes, un chercheur effectue chaque jour une \u00e9valuation g\u00e9n\u00e9rale de ceux-ci. L'\u00e9valuation consiste uniquement en une prise de notes. On veut donc conserver pour chaque \u00e9valuation le cobaye \u00e9valu\u00e9, le chercheur impliqu\u00e9, la date de l'\u00e9valuation ainsi que les notes prises. </p>"},{"location":"exercices/ff_enonce/#directives","title":"Directives","text":"<p>\u00c0 partir de cette mise en situation vous devez cr\u00e9er: </p> <ol> <li>Un schema conceptuel en format image portant le nom NomPrenom_shema</li> <li>Un diagramme de classes en format image portant le nom NomPrenom_diagramme</li> <li>Un script de cr\u00e9ation des tables portant le nom NomPrenom_script</li> </ol>"},{"location":"exercices/ff_enonce/#schema-conceptuelle","title":"Sch\u00e9ma conceptuelle","text":"<ul> <li>La multiplicit\u00e9 des associations doit \u00eatre inscrite. </li> </ul>"},{"location":"exercices/ff_enonce/#diagramme-de-classes","title":"Diagramme de classes","text":"<ul> <li>Votre diagramme doit r\u00e9pondre aux r\u00e8gles de la troisi\u00e8me forme normale.</li> <li>Vous devez respecter la convention de nomenclature telle que d\u00e9crite dans les notes de cours \"Convention de nommage MySQL\".</li> </ul>"},{"location":"exercices/ff_enonce/#script-sql","title":"Script SQL","text":"<ul> <li>Le script SQL doit pouvoir \u00eatre lanc\u00e9 \u00e0 plusieurs reprises sans causer d'erreurs.</li> <li>Vous devez cr\u00e9er toutes les tables et les champs de votre diagramme.</li> <li>Les cl\u00e9s primaires et \u00e9trang\u00e8res doivent aussi \u00eatre cr\u00e9es.</li> </ul>"},{"location":"exercices/ff_enonce/#grille-de-correction","title":"Grille de correction","text":"\u00c9l\u00e9ments Atteint Satisfaisant Faible Non-atteint Sh\u00e9ma conceptuel Le sch\u00e9ma respecte la mise en situation 40 28 16 0 La multiplicit\u00e9 des associations est juste 10 7 4 0 Le sch\u00e9ma respecte les normes de conception 5 4 2 0 Diagramme de classes Les relations entrent les tables sont juste 10 7 4 0 Le diagramme respecte la troisi\u00e8me forme normale 10 7 4 0 Les type de donn\u00e9es sont juste 10 7 4 0 Script SQL Le script peut \u00eatre lanc\u00e9 sans causer d'erreurs 5 4 2 0 Toutes les informations n\u00e9cessaires sont cr\u00e9\u00e9es 10 7 4 0"},{"location":"exercices/ldvelh_enonce/","title":"Livre dont vous \u00eates le h\u00e9ro","text":""},{"location":"exercices/ldvelh_enonce/#description-de-lexercice","title":"Description de l'exercice","text":"<p>L'objectif du projet est de cr\u00e9er une application qui permettra de lire et de naviguer dans un livre dont vous \u00eates le h\u00e9ros.</p> <ul> <li>Vous devez faire l'analyse du cas et me produire un diagramme de classes UML de cette analyse. </li> <li>Ensuite cr\u00e9ez la base de donn\u00e9es en lien avec votre analyse. Je vais vous fournir le texte d'un livre divis\u00e9 en chapitres pour l'inclure dans la base de donn\u00e9es ainsi que les liens entre les chapitres sous deux scripts SQL. Libre \u00e0 vous de modifier ou non ces fichiers. </li> <li>Finalement vous allez d\u00e9velopper une application fonctionnelle en python avec une interface graphique. </li> </ul> <p>L'exercice sera \u00e9valu\u00e9 et comptera pour 15% de la note finale. L'exercice se fera individuellement. </p>"},{"location":"exercices/ldvelh_enonce/#remise-de-lexercice","title":"Remise de l'exercice","text":"<p>Cr\u00e9ez un d\u00e9p\u00f4t Github de l'exercice \u00e0 l'int\u00e9rieur duquel vous allez avoir les \u00e9l\u00e9ments suivants : </p> <ul> <li>Dans un r\u00e9pertoire nomm\u00e9 ressources, votre diagramme de classes ainsi que les scripts SQL n\u00e9cessaires \u00e0 la cr\u00e9ation de votre base de donn\u00e9es et \u00e0 l'insertion des donn\u00e9es une fois l'application fonctionnel.</li> <li>Le code de votre application.</li> <li>La remise du projet se fera durant le cours du 27 novembre 2023 durant lequel vous allez me pr\u00e9senter votre application.</li> </ul>"},{"location":"exercices/ldvelh_enonce/#analyse-du-cas","title":"Analyse du cas","text":"<p>Les points suivants du livre  doivent \u00eatre couverts par votre analyse :</p> <ul> <li>Le texte du livre divis\u00e9 entre chapitres ainsi que le principe de navigation entre les chapitres. (Pour chaque chapitre il n'y a qu'un choix restreint de chapitres auxquels on peut acc\u00e9der)</li> <li>Pour l'instant on n'aura qu'un livre dans l'application, mais on pourrait en avoir plusieurs. On va prendre pour acquis que tout les livres auraient la m\u00eame fiche de personnage.</li> <li>La fiche du personnage (feuille d'aventure \u00e0 la page 5 et le haut de la page 6). Pour les sections disciplines Kai et Armes, les valeurs qu'on peut y entrer doivent provenir d'une liste de choix, celle-ci est d\u00e9crite plus loin dans le livre. (\u00c0 partir de la page 9 pour les disciplines et 11 pour les armes)</li> <li>On ne couvrira pas le syst\u00e8me de r\u00e8gles, \u00e7a sera \u00e0 l'usager de le faire manuellement. (Combat, perte d'endurance, etc...)</li> <li>Vous pouvez traiter les cellules objets, repas, objets sp\u00e9ciaux et bourse comme des champs texte.</li> <li>On doit pouvoir enregistrer notre progression dans le livre et faire plusieurs parties en m\u00eame temps.</li> </ul> <p>Votre analyse doit respecter les r\u00e8gles de la troisi\u00e8me forme normale, \u00e0 moins de cas d'exception qui devront \u00eatre justifi\u00e9s.</p>"},{"location":"exercices/ldvelh_enonce/#diagramme-de-classes","title":"Diagramme de classes","text":"<ul> <li>Le diagramme de classes doit respecter votre analyse. </li> <li>Les normes de nomenclature d\u00e9fini dans les notes de cours doivent \u00eatre suivi.</li> </ul>"},{"location":"exercices/ldvelh_enonce/#base-de-donnees","title":"Base de donn\u00e9es","text":"<p>Il n'y a pas de minimum ou maximum quand aux nombre de tables \u00e0 avoir, mais vous devez inclure les \u00e9l\u00e9ments suivants : </p> <ul> <li>Un usager avec des droits restreint qui sera utilis\u00e9 par l'application. Pour les droits, allez-y au minimum, seulement les tables et commandes n\u00e9cessaires au fonctionnement de l'application. </li> <li>Vous devez au minimum inclure 2 proc\u00e9dures stock\u00e9es, fonctions ou triggers (Une fonction et un trigger, une proc\u00e9dure stock\u00e9e et une fonction, deux triggers, etc...).</li> </ul>"},{"location":"exercices/ldvelh_enonce/#application","title":"Application","text":"<p>L'application doit \u00eatre programm\u00e9 avec pyqt5 et comporter les fonctionnalit\u00e9s suivantes : </p> <ul> <li>Lire un livre et naviguer entre ses chapitres selon leur num\u00e9ro.</li> <li>Permettre \u00e0 l'usager de modifier sa fiche de personnage.</li> <li>Sauvegarde notre progression de lecture, (num\u00e9ro de chapitre, feuille d'aventure)</li> <li>Supprimer une sauvegarde.</li> </ul>"},{"location":"exercices/ldvelh_enonce/#ressources","title":"Ressources","text":"<ul> <li>Loup solitaire T.1 : Le livre de r\u00e9f\u00e9rence</li> <li>insert_chapitre.sql : Les textes de chaque chapitre</li> <li>insert_lien_chapitre.sql : Les liens du chapitre vers les autres</li> </ul>"},{"location":"exercices/ldvelh_enonce/#grille-de-correction","title":"Grille de correction","text":"Crit\u00e8res R\u00e9ussi Satisfaisant insatisfaisant Points Les scripts SQL de cr\u00e9ation de tables et d'insertion de donn\u00e9es sont fonctionnels et couvrent l'ensemble de l'application. 2 1 0 /2 Le diagramme de classes respecte les points \u00e0 couvrir de l'analyse de cas et les normes de nomenclature d\u00e9finies dans les notes de cours. 3 1 0 /3 Un usager avec des droits restreints est utilis\u00e9 pour la connexion entre l'application et la base de donn\u00e9es. Sa cr\u00e9ation est incluse dans les scripts SQL remis. 2 1 0 /2 La base de donn\u00e9es comportent 2 proc\u00e9dures stock\u00e9es, fonctions ou triggers. 2 1 0 /2 L'application permet de lire un livre et de naviguer entre les chapitres par leur num\u00e9ro. 2 1 0 /2 L'application permet \u00e0 l'usager de modifier manuellement la feuille de personnage du livre. 3 1 0 /3 L'application permet de sauvegarder la progression de lecture (le chapitre en cours) et la feuille de personnage. 4 2 0 /4 L'application permet de supprimer une sauvegarde 2 1 0 /2 Total /20"},{"location":"modelisation/definition_modelisation/","title":"Qu'est-ce qu'est la mod\u00e9lisation de donn\u00e9es?","text":"<p>La mod\u00e9lisation de donn\u00e9es est un ensemble de techniques et de m\u00e9thodes qui facilitent la construction d'une base de donn\u00e9es capable de stocker les informations d'un syst\u00e8me de mani\u00e8re efficace. Le processus de mod\u00e9lisation se d\u00e9compose en trois niveaux principaux :</p> <p>Niveau Conceptuel</p> <p>Durant cette phase initiale, une analyse approfondie du syst\u00e8me \u00e0 mod\u00e9liser est r\u00e9alis\u00e9e. Cette analyse implique la collecte de donn\u00e9es et la d\u00e9finition des exigences \u00e0 l'aide du mod\u00e8le entit\u00e9-association. Cette \u00e9tape critique permet de d\u00e9velopper un sch\u00e9ma conceptuel, qui repr\u00e9sente une \u00e9bauche pr\u00e9liminaire de la future base de donn\u00e9es.</p> <p>Niveau Relationnel</p> <p>Cette phase consiste \u00e0 convertir le sch\u00e9ma conceptuel en un diagramme de classes UML (Unified Modeling Language). Il s'agit ici de sp\u00e9cifier les types de donn\u00e9es pour chaque attribut, d'identifier les cl\u00e9s primaires et secondaires, et de d\u00e9finir les relations entre les diff\u00e9rentes tables. Le processus de normalisation est appliqu\u00e9 pour assurer l'efficacit\u00e9 et la pertinence du diagramme.</p> <p>Niveau SQL</p> <p>Enfin, le dernier niveau concerne la r\u00e9daction des scripts SQL qui serviront \u00e0 la cr\u00e9ation des tables. Cette \u00e9tape inclut \u00e9galement la d\u00e9finition des contraintes et la mise en place de d\u00e9clencheurs (triggers), qui sont essentiels pour maintenir l'int\u00e9grit\u00e9 et la logique des donn\u00e9es au sein de la base.</p> <p>Chaque \u00e9tape de ce processus est cruciale pour garantir que la base de donn\u00e9es finale soit \u00e0 la fois robuste et optimis\u00e9e pour les besoins sp\u00e9cifiques du syst\u00e8me.</p>"},{"location":"modelisation/modele_entites_relations/","title":"Mod\u00e8le entit\u00e9-association","text":""},{"location":"modelisation/modele_entites_relations/#definition","title":"D\u00e9finition","text":"<p>Le mod\u00e8le entit\u00e9-association aide \u00e0 repr\u00e9senter conceptuellement les donn\u00e9es d'un probl\u00e8me et fournit une repr\u00e9sentation graphique des associations entre les donn\u00e9es. Ceci est essentiel pour cr\u00e9er des diagrammes et mod\u00e9liser diff\u00e9rents syst\u00e8mes.</p>"},{"location":"modelisation/modele_entites_relations/#les-entites","title":"Les entit\u00e9s","text":"<p>Les entit\u00e9s dans ce mod\u00e8le repr\u00e9sentent les \u00e9l\u00e9ments du syst\u00e8me, pouvant \u00eatre des objets physiques ou des concepts. Chaque entit\u00e9 est identifiable de mani\u00e8re unique et peut inclure des attributs qui sont des donn\u00e9es \u00e0 stocker.</p> <p>Exemples d'entit\u00e9 :  </p> <ul> <li>\u00c9tudiant  </li> <li>Professeur  </li> <li>Cours  </li> <li>Livre  </li> </ul>"},{"location":"modelisation/modele_entites_relations/#les-attributs","title":"Les attributs","text":"<p>Les attributs sont les donn\u00e9es stock\u00e9es dans la base de donn\u00e9es pour chaque entit\u00e9. Il est important de distinguer les donn\u00e9es pouvant \u00eatre calcul\u00e9es ou d\u00e9duites des donn\u00e9es brutes \u00e0 enregistrer.</p> <p>Exemples d'attributs :</p> <ul> <li>\u00c9tudiant : nom, pr\u00e9nom, date de naissance, adresse</li> <li>Professeur : nom, pr\u00e9nom, date d'embauche, sp\u00e9cialit\u00e9</li> <li>Cours : titre, description, cr\u00e9dits</li> <li>Livre : titre, auteur, \u00e9dition, ISBN</li> </ul>"},{"location":"modelisation/modele_entites_relations/#les-associations","title":"Les associations","text":"<p>Les associations d\u00e9crivent les interactions et contraintes entre les entit\u00e9s. Elles sont utilis\u00e9es pour pr\u00e9ciser les relations dans les syst\u00e8mes mod\u00e9lis\u00e9s, ce qui aide \u00e0 traduire ces relations en bases de donn\u00e9es o\u00f9 les entit\u00e9s deviennent des tables et les attributs des champs.</p> <p>Exemples d'associations :</p> <ul> <li>Un \u00e9tudiant peut suivre plusieurs cours</li> <li>Un professeur peut enseigner plusieurs cours</li> <li>Un cours peut \u00eatre suivi par plusieurs \u00e9tudiants</li> <li>Un livre peut \u00eatre \u00e9crit par plusieurs auteurs</li> </ul> <p>Exemples de contraintes :</p> <ul> <li>Un \u00e9tudiant ne peut pas suivre un cours dans un autre programme que le sien</li> <li>Un professeur ne peut pas enseigner un cours sans \u00eatre assign\u00e9</li> <li>Un cours doit avoir un professeur assign\u00e9</li> <li>Un livre doit avoir au moins un auteur</li> </ul>"},{"location":"modelisation/normalisation/","title":"Formes normales","text":"<p>Les formes normales constituent un ensemble de principes directeurs qui, lorsqu'ils sont appliqu\u00e9s, garantissent la solidit\u00e9 d'un mod\u00e8le de donn\u00e9es. L'adoption de ces r\u00e8gles offre plusieurs avantages significatifs :</p> <ul> <li>R\u00e9duction de la redondance des donn\u00e9es : en \u00e9vitant les doublons, on assure une gestion plus efficace des ressources de stockage.</li> <li>Facilitation des mises \u00e0 jour : en minimisant les r\u00e9plications de donn\u00e9es, les modifications sont simplifi\u00e9es, r\u00e9duisant ainsi le risque d'erreurs.</li> <li>Pr\u00e9vention des incoh\u00e9rences : en \u00e9liminant les redondances, on r\u00e9duit le risque d'erreurs de synchronisation entre les donn\u00e9es, assurant ainsi leur int\u00e9grit\u00e9.</li> </ul> <p>Bien que huit niveaux de formes normales soient identifi\u00e9s, dans la pratique et notamment dans le cadre de ce cours, seules les trois premi\u00e8res formes normales sont g\u00e9n\u00e9ralement impl\u00e9ment\u00e9es. Pour qu'un mod\u00e8le soit consid\u00e9r\u00e9 comme \u00e9tant en troisi\u00e8me forme normale, il est imp\u00e9ratif qu'il respecte \u00e9galement les deux premi\u00e8res formes. Cette progression garantit une structuration logique et m\u00e9thodique des donn\u00e9es.</p>"},{"location":"modelisation/normalisation/#premiere-forme-normale-1fn","title":"Premi\u00e8re forme normale (1FN)","text":"<p>Les r\u00e8gles de la premi\u00e8re forme normale sont :</p> <p>Pour assurer l'int\u00e9grit\u00e9 et l'efficacit\u00e9 d'une base de donn\u00e9es, il est essentiel de respecter certaines r\u00e8gles de conception :</p> <ol> <li> <p>Cl\u00e9 primaire de la table : Chaque table doit poss\u00e9der une cl\u00e9 primaire, qui identifie de mani\u00e8re unique chaque enregistrement. Si aucun attribut ne se pr\u00eate naturellement \u00e0 cette fonction, un champ auto-incr\u00e9ment\u00e9 peut \u00eatre ajout\u00e9 pour servir de cl\u00e9 primaire.</p> </li> <li> <p>Atomicit\u00e9 des attributs : En conformit\u00e9 avec la premi\u00e8re forme normale (1FN), chaque attribut doit \u00eatre atomique, c\u2019est-\u00e0-dire indivisible. Un attribut ne doit pas contenir une liste de valeurs ou \u00eatre de nature composite. Si un attribut est d\u00e9compos\u00e9, il doit aboutir \u00e0 des informations distinctes et non \u00e0 une subdivision de la m\u00eame information.</p> </li> <li> <p>Uniformit\u00e9 des types de valeurs : Chaque attribut d'une table doit contenir uniquement un type de valeur, assurant ainsi la coh\u00e9rence des donn\u00e9es.</p> </li> <li> <p>Absence de redondance dans les colonnes : La duplication d'informations dans plusieurs colonnes d'une m\u00eame table doit \u00eatre \u00e9vit\u00e9e pour pr\u00e9venir les incoh\u00e9rences.</p> </li> </ol>"},{"location":"modelisation/normalisation/#exemple-de-non-respect-de-la-1fn","title":"Exemple de Non-Respect de la 1FN","text":"<p>Prenons l'exemple de deux tables <code>Usagers</code> qui violent la premi\u00e8re forme normale :</p> <ul> <li>Table Usagers 1 :</li> <li><code>ID</code> : cl\u00e9 primaire</li> <li><code>Nom</code> : nom de l'usager</li> <li> <p><code>T\u00e9l\u00e9phones</code> : liste des num\u00e9ros de t\u00e9l\u00e9phone (violation de la 1FN car l'attribut est une liste)</p> </li> <li> <p>Table Usagers 2 :</p> </li> <li><code>ID</code> : cl\u00e9 primaire</li> <li><code>Nom</code> : nom de l'usager</li> <li><code>Adresse</code> : adresse compl\u00e8te (rue, ville, code postal) (violation de la 1FN car l'attribut est compos\u00e9)</li> </ul> <p>Dans chacun de ces cas, l'attribut en violation doit \u00eatre modifi\u00e9 pour respecter la premi\u00e8re forme normale. Pour la table <code>Usagers 1</code>, l'attribut <code>T\u00e9l\u00e9phones</code> pourrait \u00eatre g\u00e9r\u00e9 via une table s\u00e9par\u00e9e. Pour la table <code>Usagers 2</code>, l'adresse peut \u00eatre divis\u00e9e en attributs distincts comme <code>Rue</code>, <code>Ville</code>, et <code>Code Postal</code>.</p>"},{"location":"modelisation/normalisation/#table-usagers-1","title":"Table Usagers 1","text":"ID Nom T\u00e9l\u00e9phones 1 Alice Durand (819) 363-4444, (819) 564-7878 2 Bob Martin (819) 765-4321 3 Clara Dubois (819) 123-4567, (819) 987-6543 4 Denis Petit (819) 345-6789"},{"location":"modelisation/normalisation/#table-usagers-2","title":"Table Usagers 2","text":"ID Nom Adresse 1 Alice Durand 123 rue de l'\u00c9glise, Qu\u00e9bec, G1R 4S9 2 Bob Martin 456 boulevard Charest, Qu\u00e9bec, G1K 8R2 3 Clara Dubois 789 avenue Cartier, Qu\u00e9bec, G1S 3P9 4 Denis Petit 101 chemin Sainte-Foy, Qu\u00e9bec, G1V 1T3 <p>Ces donn\u00e9es fictives montrent toujours les violations de la premi\u00e8re forme normale avec les attributs <code>T\u00e9l\u00e9phones</code> et <code>Adresse</code>. Pour rendre les tables <code>Usager 1</code> et <code>Usager 2</code> conformes \u00e0 la premi\u00e8re forme normale (1FN), nous devons \u00e9liminer les listes de valeurs et d\u00e9composer les valeurs composites en attributs plus simples. Voici les tables mises \u00e0 jour :</p>"},{"location":"modelisation/normalisation/#table-usagers-1_1","title":"Table Usagers 1","text":"<p>Pour rendre cette table conforme \u00e0 la 1FN, nous cr\u00e9ons une nouvelle table pour g\u00e9rer les num\u00e9ros de t\u00e9l\u00e9phone, assurant qu'un seul num\u00e9ro soit pr\u00e9sent par ligne :</p>"},{"location":"modelisation/normalisation/#table-usagers","title":"Table Usagers","text":"ID Nom 1 Alice Durand 2 Bob Martin 3 Clara Dubois 4 Denis Petit"},{"location":"modelisation/normalisation/#table-telephones","title":"Table T\u00e9l\u00e9phones","text":"Usager_ID T\u00e9l\u00e9phone 1 (819) 363-4444 1 (819) 564-7878 2 (819) 765-4321 3 (819) 123-4567 3 (819) 987-6543 4 (819) 345-6789"},{"location":"modelisation/normalisation/#table-usagers-2_1","title":"Table Usagers 2","text":"<p>Pour cette table, chaque composante de l'adresse est scind\u00e9e en colonnes distinctes pour respecter l'atomicit\u00e9 :</p>"},{"location":"modelisation/normalisation/#table-usagers_1","title":"Table Usagers","text":"ID Nom Rue Ville Code Postal 1 Alice Durand 123 rue de l'\u00c9glise Qu\u00e9bec G1R 4S9 2 Bob Martin 456 boulevard Charest Qu\u00e9bec G1K 8R2 3 Clara Dubois 789 avenue Cartier Qu\u00e9bec G1S 3P9 4 Denis Petit 101 chemin Sainte-Foy Qu\u00e9bec G1V 1T3 <p>Ces modifications permettent \u00e0 chaque table de respecter la premi\u00e8re forme normale en s'assurant que chaque champ contient des donn\u00e9es non divisibles et uniques, \u00e9vitant ainsi la redondance et les probl\u00e8mes de mise \u00e0 jour.</p>"},{"location":"modelisation/normalisation/#impact-de-lapplication-de-la-regle","title":"Impact de l'application de la r\u00e8gle","text":"<ul> <li>Aucun attribut n\u2019est compos\u00e9 ou de valeurs multiples</li> <li>Augmente grandement la performance en \u00e9vitant de parcourir des attributs sous forme de liste et en cr\u00e9ant des indexes plus performants.</li> </ul>"},{"location":"modelisation/normalisation/#deuxieme-forme-normale-2fn","title":"Deuxi\u00e8me forme normale (2FN)","text":"<p>Pour qu'une table de donn\u00e9es soit conforme \u00e0 la deuxi\u00e8me forme normale (2FN), elle doit remplir les conditions suivantes :</p> <ul> <li>\u00catre d\u00e9j\u00e0 conforme \u00e0 la premi\u00e8re forme normale (1FN).</li> <li>Assurer que chaque attribut non-cl\u00e9 d\u00e9pende enti\u00e8rement de la cl\u00e9 primaire, ou des cl\u00e9s primaires dans le cas d'une cl\u00e9 composite. Cela signifie qu'aucun attribut ne doit \u00eatre d\u00e9pendant uniquement d'une partie d'une cl\u00e9 composite.</li> </ul> <p>Cette structuration vise \u00e0 garantir une d\u00e9pendance compl\u00e8te des attributs par rapport \u00e0 la cl\u00e9 primaire, \u00e9vitant ainsi les d\u00e9pendances partielles qui pourraient entra\u00eener des anomalies de donn\u00e9es.</p> <p>Supposons la table notes_cours dans laquelle on veut enregistrer la note obtenue par cours par \u00e9tudiant :</p> ETUDIANT_ID COURS_ID NOTE NOM_COURS 1 1 95 Programmation 1 2 1 88 Programmation 1 1 2 64 Design Web <p>Il existe plusieurs probl\u00e9matiques notables dans la disposition actuelle de la base de donn\u00e9es :</p> <ol> <li> <p>Gestion des doublons : Il peut \u00eatre difficile de g\u00e9rer les doublons, particuli\u00e8rement si l'on souhaite r\u00e9cup\u00e9rer le nom d'un cours sp\u00e9cifique, tel que \"Programmation 1\". La pr\u00e9sence de doublons peut compliquer l'extraction de donn\u00e9es fiables.</p> </li> <li> <p>Acc\u00e8s aux donn\u00e9es apr\u00e8s suppression : Si un \u00e9tudiant est supprim\u00e9 de la base, l'acc\u00e8s aux informations du cours auquel il \u00e9tait inscrit, tel que \"Design Web\", pourrait \u00eatre compromis. Cette situation pose un risque de perte d'information non n\u00e9gligeable.</p> </li> <li> <p>Consistance des donn\u00e9es : En cas de modification du nom d'un cours, des erreurs peuvent survenir si la mise \u00e0 jour n'est pas appliqu\u00e9e uniform\u00e9ment \u00e0 toutes les occurrences. Cela peut entra\u00eener des incoh\u00e9rences dans les noms des cours, affectant la fiabilit\u00e9 des donn\u00e9es.</p> </li> <li> <p>Ajout de nouveaux cours : L'ajout de nouveaux cours \u00e0 la base de donn\u00e9es pourrait se heurter \u00e0 des complications si aucun \u00e9tudiant n'est encore inscrit pour recevoir des notes, ce qui rend difficile la gestion pr\u00e9visionnelle des cours.</p> </li> </ol> <p>Pour rem\u00e9dier \u00e0 ces probl\u00e8mes et assurer la conformit\u00e9 avec la 2FN, il est pr\u00e9conis\u00e9 de scinder la table existante en deux tables distinctes :</p> <ul> <li>Table Cours : Contiendrait des informations uniques sur les cours, telles que <code>ID_Cours</code> (cl\u00e9 primaire) et <code>Nom_Cours</code>.</li> <li>Table Inscriptions : Relierait les \u00e9tudiants aux cours et inclurait <code>ID_\u00c9tudiant</code>, <code>ID_Cours</code>, et <code>Note</code>. Chaque attribut de cette table serait pleinement d\u00e9pendant de la cl\u00e9 primaire compos\u00e9e (<code>ID_\u00c9tudiant</code>, <code>ID_Cours</code>), assurant ainsi une d\u00e9pendance fonctionnelle compl\u00e8te.</li> </ul> <p>Cette restructuration permettrait une gestion plus efficace des donn\u00e9es et \u00e9viterait les probl\u00e8mes cit\u00e9s, en s'alignant avec les principes de la mod\u00e9lisation relationnelle et les normes de normalisation des donn\u00e9es.</p> <p>table notes_cours</p> ETUDIANT_ID COURS_ID NOTE 1 1 95 2 1 88 1 2 64 <p>table cours</p> ID NOM 1 Programmation 1 2 Design Web"},{"location":"modelisation/normalisation/#impact-de-lapplication-de-la-regle_1","title":"Impact de l'application de la r\u00e8gle","text":"<ul> <li>Permets d'\u00e9liminer plusieurs redondances des donn\u00e9es.</li> <li>Facilite la mise \u00e0 jour des donn\u00e9es</li> </ul>"},{"location":"modelisation/normalisation/#troisieme-forme-normale-3fn","title":"Troisi\u00e8me forme normale (3FN)","text":"<p>Pour qu'une table soit conforme \u00e0 la troisi\u00e8me forme normale (3FN), elle doit :</p> <ul> <li>Satisfaire toutes les exigences de la deuxi\u00e8me forme normale (2FN), et par cons\u00e9quent, celles de la premi\u00e8re forme normale (1FN) \u00e9galement.</li> <li>Assurer que tous les attributs non-cl\u00e9s d\u00e9pendent uniquement de la cl\u00e9 primaire, et non d'autres attributs non-cl\u00e9s de la table.</li> </ul> <p>Consid\u00e9rons, \u00e0 titre d'exemple, la table d'inventaire suivante :</p> ID QUANTITE ITEM_ID DESCRIPTION 1 3 1 Potion de soins mineures 2 11 2 \u00c9p\u00e9e de cuivre <p>Dans cette table, l'attribut DESCRIPTION d\u00e9pend de ITEM_ID et non directement de la cl\u00e9 primaire ID. Pour rendre la table conforme \u00e0 la 3FN, il conviendrait de retirer l'attribut DESCRIPTION de cette table, \u00e0 condition que cette information soit d\u00e9j\u00e0 contenue dans une table distincte associ\u00e9e aux ITEM_ID (par exemple, une table Item). Cette s\u00e9paration permet d'\u00e9liminer les d\u00e9pendances transitives et d'assurer que chaque attribut non-cl\u00e9 est directement d\u00e9pendant de la cl\u00e9 primaire seule, garantissant ainsi l'int\u00e9grit\u00e9 et la normalisation des donn\u00e9es.</p>"},{"location":"modelisation/normalisation/#impact-de-lapplication-de-la-regle_2","title":"Impact de l'application de la r\u00e8gle","text":"<ul> <li>Permets d'\u00e9liminer plusieurs redondances des donn\u00e9es.</li> <li>Facilite la mise \u00e0 jour des donn\u00e9es</li> </ul> <p>Dans certaines circonstances, atteindre et maintenir la troisi\u00e8me forme normale (3FN) n'est pas toujours pratique ou n\u00e9cessaire, en particulier lorsque des exigences sp\u00e9cifiques ou des probl\u00e9matiques de performance le justifient. Prenons l'exemple d'une table qui enregistre les d\u00e9tails des lignes de facture : id\u00e9alement, le total de chaque ligne ne devrait pas \u00eatre stock\u00e9 puisqu'il peut \u00eatre calcul\u00e9 dynamiquement \u00e0 partir de la quantit\u00e9 et du prix unitaire. Cependant, si les op\u00e9rations sur le total des lignes sont fr\u00e9quentes et lourdes en termes de calcul, il peut \u00eatre judicieux de d\u00e9roger \u00e0 la 3FN et de conserver ce total dans une colonne d\u00e9di\u00e9e. Cela peut significativement r\u00e9duire le temps de traitement et am\u00e9liorer la performance du syst\u00e8me, particuli\u00e8rement dans les contextes o\u00f9 la rapidit\u00e9 d'acc\u00e8s aux donn\u00e9es est critique.</p> <p>Cette approche pragmatique doit \u00eatre \u00e9valu\u00e9e soigneusement, en pesant les avantages en termes de performance contre les risques potentiels d'incoh\u00e9rence des donn\u00e9es, particuli\u00e8rement lors des mises \u00e0 jour. Cette d\u00e9cision doit \u00eatre prise en consid\u00e9ration du contexte sp\u00e9cifique et des besoins op\u00e9rationnels de l'application ou du syst\u00e8me de gestion de base de donn\u00e9es.</p>"},{"location":"modelisation/normalisation/#ressources","title":"Ressources","text":"<p>Une vid\u00e9o qui explique tr\u00e8s bien la normalisation (en anglais) : Normalisation</p>"},{"location":"modelisation/schema_conceptuel/","title":"Sch\u00e9ma conceptuel","text":"<p>Le schema conceptuel</p> <p>Vous d\u00e9crivez les conventions de base utilis\u00e9es pour repr\u00e9senter un mod\u00e8le entit\u00e9-association, un outil crucial en conception de bases de donn\u00e9es. Voici une version l\u00e9g\u00e8rement am\u00e9lior\u00e9e et clarifi\u00e9e de votre explication pour une meilleure compr\u00e9hension des \u00e9l\u00e9ments du sch\u00e9ma conceptuel :</p> <p>Dans le sch\u00e9ma conceptuel du mod\u00e8le entit\u00e9-association, chaque composant est repr\u00e9sent\u00e9 de mani\u00e8re sp\u00e9cifique pour illustrer les relations et les structures de donn\u00e9es de mani\u00e8re visuelle et intuitive :</p> <ul> <li> <p>Entit\u00e9s : Repr\u00e9sent\u00e9es par des rectangles, les entit\u00e9s sont des objets ou des concepts qui poss\u00e8dent des donn\u00e9es dans la base de donn\u00e9es. Le nom de l'entit\u00e9 est plac\u00e9 en en-t\u00eate du rectangle.</p> </li> <li> <p>Attributs : Les caract\u00e9ristiques ou propri\u00e9t\u00e9s des entit\u00e9s sont nomm\u00e9es \u00e0 l'int\u00e9rieur des rectangles de leur entit\u00e9 respective. Chaque attribut d\u00e9crit une donn\u00e9e que l'entit\u00e9 doit contenir.</p> </li> <li> <p>Associations : Les relations entre deux entit\u00e9s ou plus sont repr\u00e9sent\u00e9es par des cercles, au sein desquels on inscrit un verbe ou un mot-cl\u00e9 d\u00e9crivant la relation. Ces cercles servent \u00e0 connecter logiquement les entit\u00e9s concern\u00e9es.</p> </li> <li> <p>Connexions : Des lignes ou traits relient les entit\u00e9s aux associations, d\u00e9montrant comment elles interagissent ou sont li\u00e9es par la relation d\u00e9finie.</p> </li> <li> <p>Multiplicit\u00e9 : \u00c0 chaque trait connectant une entit\u00e9 \u00e0 une association, une notation sp\u00e9cifie la multiplicit\u00e9 de la relation, c'est-\u00e0-dire le nombre minimal et maximal d'instances pouvant \u00eatre associ\u00e9es. Cette multiplicit\u00e9 est not\u00e9e sous la forme x..y, o\u00f9 \"x\" est le nombre minimal d'objets reli\u00e9s, et \"y\" le maximum. Des nombres entiers positifs sont utilis\u00e9s, ou le symbole \"*\" pour indiquer un nombre illimit\u00e9.</p> </li> </ul>"},{"location":"modelisation/schema_conceptuel/#exemple-pratique","title":"Exemple Pratique","text":"<p>Imaginons un sch\u00e9ma conceptuel simple pour une application de gestion de biblioth\u00e8que :</p> <p></p> <p>Cet exemple de sch\u00e9ma entit\u00e9-association illustre les relations entre les auteurs, les livres, les pays, et les genres. Voici comment on pourrait d\u00e9crire ce mod\u00e8le :</p>"},{"location":"modelisation/schema_conceptuel/#entites-et-associations","title":"Entit\u00e9s et Associations","text":"<ol> <li> <p>Entit\u00e9 Auteur :</p> <ul> <li>Attributs : Id, Nom, Pr\u00e9nom, Date de naissance.</li> <li>Associations :<ul> <li>R\u00e9dige : Relie un ou plusieurs auteurs \u00e0 z\u00e9ro ou plusieurs livres (multiplicit\u00e9 1..* \u00e0 0..*). Cela signifie qu'un auteur peut r\u00e9diger aucun ou plusieurs livres, et un livre peut \u00eatre r\u00e9dig\u00e9 par un ou plusieurs auteurs.</li> <li>Est originaire de : Chaque auteur est originaire d'un seul pays  (multiplicit\u00e9 0..* \u00e0 1..1). Cela signifie qu'un auteur peut ou non \u00eatre li\u00e9 \u00e0 un pays, mais un pays peut \u00eatre associ\u00e9 \u00e0 aucun, un ou plusieurs auteurs.</li> </ul> </li> </ul> </li> <li> <p>Entit\u00e9 Livre :</p> <ul> <li>Attributs : Id, Titre, isbn.</li> <li>Associations :<ul> <li>Appartient \u00e0 : Chaque livre appartient \u00e0 un genre (multiplicit\u00e9 0..* \u00e0 1..*). Cela indique qu'un livre peut ou non appartenir \u00e0 un genre, mais un genre peut inclure aucun, un, ou plusieurs livres.</li> </ul> </li> </ul> </li> <li> <p>Entit\u00e9 Pays :</p> <ul> <li>Attributs : Id, Nom.</li> <li>Cette entit\u00e9 est associ\u00e9e \u00e0 l'entit\u00e9 Auteur par l'association Est originaire de.</li> </ul> </li> <li> <p>Entit\u00e9 Genre :</p> <ul> <li>Attributs : Id, Nom.</li> <li>Cette entit\u00e9 est li\u00e9e \u00e0 l'entit\u00e9 Livre par l'association Appartient \u00e0.</li> </ul> </li> </ol>"},{"location":"modelisation/schema_conceptuel/#description-des-multiplicites","title":"Description des Multiplicit\u00e9s","text":"<ul> <li>R\u00e9dige (Auteur-Livre) : Une association qui peut inclure plusieurs auteurs collaborant sur un m\u00eame livre, ou un auteur travaillant sur plusieurs livres.</li> <li>Est originaire de (Auteur-Pays) : Un auteur peut \u00eatre associ\u00e9 \u00e0 un seul pays, refl\u00e9tant la nationalit\u00e9 ou l'origine g\u00e9ographique de l'auteur.</li> <li>Appartient \u00e0 (Livre-Genre) : Un livre est class\u00e9 dans un genre sp\u00e9cifique, mais un genre peut regrouper de nombreux livres.</li> </ul> <p>Cet exemple illustre la complexit\u00e9 et l'interd\u00e9pendance des entit\u00e9s dans une base de donn\u00e9es relationnelle, montrant comment les livres peuvent \u00eatre li\u00e9s \u00e0 leurs auteurs, genres, et pays d'origine. Cette structure aide \u00e0 organiser les donn\u00e9es de mani\u00e8re logique et efficace, facilitant les requ\u00eates et la gestion des informations.</p> <p>Astuce</p> <p>Les multiplicit\u00e9s sont importantes pour d\u00e9terminer les contraintes.</p> <p>Un truc pour les lire est de commencer par le nom de l'entit\u00e9, ensuite le verbe de l'association, la multiplicit\u00e9 et finalement la deuxi\u00e8me entit\u00e9. Si on prend par exemple l'association R\u00e9dige, on va lire que l'auteur peut r\u00e9diger entre 0 et plusieurs livres (0..). \u00c0 l'inverse un livre peut \u00eatre r\u00e9dig\u00e9 par au moins un auteur mais aussi par plusieurs (1..).</p>"},{"location":"modelisation/types_relations/","title":"Types de relations","text":"<p>Il existe trois types possibles de relation entre les tables :</p>"},{"location":"modelisation/types_relations/#un-a-plusieurs-1-n","title":"Un \u00e0 plusieurs (1-n)","text":"<p>Vous avez bien d\u00e9crit une mani\u00e8re de structurer une base de donn\u00e9es pour un jeu d'aventure afin de g\u00e9rer les relations entre les usagers et leurs personnages. Voici une version am\u00e9lior\u00e9e et plus d\u00e9taill\u00e9e de votre explication, en tenant compte des meilleures pratiques de mod\u00e9lisation de bases de donn\u00e9es :</p> <p>Dans le contexte d'un jeu d'aventure, o\u00f9 un usager peut cr\u00e9er et g\u00e9rer plusieurs personnages simultan\u00e9ment, la structure de la base de donn\u00e9es doit efficacement repr\u00e9senter la relation entre les usagers et leurs personnages. Chaque personnage est exclusif \u00e0 un usager, ce qui signifie qu'un personnage ne peut appartenir qu'\u00e0 un seul usager. Pour mod\u00e9liser cette relation \"un \u00e0 plusieurs\" dans la base de donn\u00e9es, on utilise la technique de la cl\u00e9 \u00e9trang\u00e8re.</p> <p>Voici comment cette relation peut \u00eatre structur\u00e9e :</p> <ol> <li> <p>Table Usagers : Cette table contient les informations de base des usagers.</p> <ul> <li>id (cl\u00e9 primaire) : Identifie de mani\u00e8re unique chaque usager dans le jeu.</li> <li>Autres attributs : Tels que le nom d'usager, l'email, etc.</li> </ul> </li> <li> <p>Table personnages : Cette table stocke les informations relatives aux diff\u00e9rents personnages cr\u00e9\u00e9s par les usagers.</p> <ul> <li>id (cl\u00e9 primaire) : Identifie de mani\u00e8re unique chaque personnage dans le jeu.</li> <li>usager_id (cl\u00e9 \u00e9trang\u00e8re) : Relie chaque personnage \u00e0 un usager sp\u00e9cifique. Cette cl\u00e9 \u00e9trang\u00e8re fait r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire de la table Usagers, assurant que chaque personnage est li\u00e9 \u00e0 un seul usager.</li> <li>Autres attributs : Tels que le nom du personnage, niveau, classe, etc.</li> </ul> </li> </ol> <p> </p> <p>En utilisant une cl\u00e9 \u00e9trang\u00e8re dans la table Personnages qui pointe vers la cl\u00e9 primaire de la table Usagers, on assure une int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle entre les tables. Cela permet de garantir que chaque personnage est associ\u00e9 \u00e0 un usager existant et emp\u00eache les orphelins de donn\u00e9es, c'est-\u00e0-dire des personnages sans usagers associ\u00e9s. Cette structure facilite \u00e9galement les requ\u00eates pour retrouver tous les personnages appartenant \u00e0 un usager sp\u00e9cifique, optimisant ainsi les interactions dans le jeu.</p>"},{"location":"modelisation/types_relations/#plusieurs-a-plusieurs-n-n","title":"Plusieurs \u00e0 plusieurs (n-n)","text":"<p>Dans le cadre du jeu d'aventure o\u00f9 un personnage peut poss\u00e9der plusieurs exemplaires d'un m\u00eame item et o\u00f9 un item peut \u00eatre pr\u00e9sent dans plusieurs inventaires, nous avons affaire \u00e0 une relation de type plusieurs \u00e0 plusieurs entre les personnages (ou directement les inventaires) et les items. Pour mod\u00e9liser correctement cette relation dans la base de donn\u00e9es, il est n\u00e9cessaire de cr\u00e9er une table de jonction qui transforme cette relation complexe en relations plus simples de type un \u00e0 plusieurs.</p>"},{"location":"modelisation/types_relations/#structure-des-tables","title":"Structure des tables :","text":"<ol> <li> <p>Table Inventaires : Contient les d\u00e9tails de chaque inventaire associ\u00e9 \u00e0 un personnage.</p> <ul> <li>id (cl\u00e9 primaire) : Identifie de mani\u00e8re unique chaque inventaire.</li> </ul> </li> <li> <p>Table Items : D\u00e9taille chaque item qui peut \u00eatre poss\u00e9d\u00e9 dans le jeu.</p> <ul> <li>id (cl\u00e9 primaire) : Identifie de mani\u00e8re unique chaque item.</li> </ul> </li> <li> <p>Table de Jonction inventaires_items : D\u00e9membre la relation plusieurs \u00e0 plusieurs entre les inventaires et les items.</p> <ul> <li>inventaire_id (cl\u00e9 \u00e9trang\u00e8re) : Relie chaque entr\u00e9e \u00e0 un inventaire sp\u00e9cifique dans la table Inventaires.</li> <li>item_id (cl\u00e9 \u00e9trang\u00e8re) : Relie chaque entr\u00e9e \u00e0 un item sp\u00e9cifique dans la table Items.</li> <li>Autres attributs possibles : Quantit\u00e9 de l'item dans l'inventaire, condition de l'item, etc.</li> </ul> </li> </ol> <p> </p>"},{"location":"modelisation/types_relations/#fonctionnement-de-la-table-de-jonction","title":"Fonctionnement de la table de jonction :","text":"<p>La table de jonction, souvent appel\u00e9e table associative, permet de stocker les informations sp\u00e9cifiques \u00e0 chaque association entre un inventaire et un item, comme la quantit\u00e9 d'un item sp\u00e9cifique dans un inventaire donn\u00e9. Chaque ligne de cette table repr\u00e9sente une occurrence unique d'un item dans un inventaire particulier, ce qui permet de g\u00e9rer efficacement les multiples instances d'un m\u00eame item.</p> <p>En utilisant des cl\u00e9s \u00e9trang\u00e8res qui pointent vers les cl\u00e9s primaires des tables Inventaires et Items, la table de jonction maintient l'int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle et simplifie les requ\u00eates qui visent \u00e0 d\u00e9terminer quels items se trouvent dans quel inventaire, ou inversement, dans quels inventaires un item particulier est pr\u00e9sent. Cette m\u00e9thode de mod\u00e9lisation est essentielle pour maintenir une base de donn\u00e9es organis\u00e9e, coh\u00e9rente et facile \u00e0 g\u00e9rer dans le contexte d'un jeu complexe avec de multiples \u00e9l\u00e9ments interactifs.</p>"},{"location":"modelisation/types_relations/#un-a-un-1-1","title":"Un \u00e0 un (1-1)","text":"<p>Dans certains cas de figure en mod\u00e9lisation de bases de donn\u00e9es, nous rencontrons des relations de type un-\u00e0-un, o\u00f9 chaque entr\u00e9e dans une table est directement li\u00e9e \u00e0 une seule entr\u00e9e dans une autre table, et vice versa. Ce type de relation est relativement rare car, dans de nombreux cas, les donn\u00e9es correspondantes pourraient simplement \u00eatre regroup\u00e9es au sein d'une seule table. Cependant, il existe des situations sp\u00e9cifiques o\u00f9 une s\u00e9paration est justifi\u00e9e.</p>"},{"location":"modelisation/types_relations/#utilisation-des-relations-un-a-un","title":"Utilisation des relations un-\u00e0-un :","text":"<ol> <li> <p>S\u00e9curit\u00e9 et confidentialit\u00e9 des donn\u00e9es : Une relation un-\u00e0-un peut \u00eatre utilis\u00e9e pour s\u00e9parer des informations sensibles ou confidentielles des autres donn\u00e9es d'un utilisateur. Par exemple, les d\u00e9tails personnels d'un usager, tels que les num\u00e9ros d'assurance sociale ou les informations bancaires, pourraient \u00eatre stock\u00e9s dans une table distincte des autres informations moins sensibles, comme le nom d'usager ou le courriel. Cette s\u00e9paration aide \u00e0 mieux s\u00e9curiser les donn\u00e9es sensibles en limitant l'acc\u00e8s uniquement aux parties de la base de donn\u00e9es qui en ont strictement besoin.</p> </li> <li> <p>Performance et optimisation : La s\u00e9paration des donn\u00e9es peut \u00e9galement \u00eatre motiv\u00e9e par des questions de performance. Si certaines donn\u00e9es sont acc\u00e9d\u00e9es ou mises \u00e0 jour plus fr\u00e9quemment que d'autres, les placer dans des tables s\u00e9par\u00e9es peut r\u00e9duire le temps de chargement et am\u00e9liorer l'efficacit\u00e9 des requ\u00eates.</p> </li> </ol>"},{"location":"modelisation/types_relations/#exemple-de-mise-en-uvre","title":"Exemple de mise en \u0153uvre :","text":"<p>Supposons une base de donn\u00e9es avec deux tables, <code>Usagers</code> et <code>Informations_Sensibles</code> :  </p> <ul> <li>Table Usagers : Contient des donn\u00e9es g\u00e9n\u00e9rales comme l'ID de l'usager, le nom, et le courriel.  </li> <li>Table Informations_Sensibles : Contient des donn\u00e9es plus d\u00e9licates, telles que les informations de paiement ou les num\u00e9ros d'assurance sociale, avec une cl\u00e9 \u00e9trang\u00e8re qui r\u00e9f\u00e9rence la cl\u00e9 primaire de la table Usagers.  </li> </ul> <p>Dans cette structure, chaque entr\u00e9e de la table <code>Usagers</code> a une correspondance unique dans la table <code>Informations_Sensibles</code>, garantissant que chaque usager a exactement un ensemble de donn\u00e9es sensibles associ\u00e9, et inversement.</p> <p>Ce mod\u00e8le offre non seulement une meilleure protection des donn\u00e9es gr\u00e2ce \u00e0 une gestion plus cibl\u00e9e des acc\u00e8s, mais il facilite \u00e9galement la maintenance et l'\u00e9volutivit\u00e9 de la base de donn\u00e9es en maintenant la s\u00e9paration logique des diff\u00e9rents types de donn\u00e9es.</p> <p> </p>"},{"location":"mysql/autorisations/","title":"Gestion des autorisations","text":"<p>Avec les privil\u00e8ges on peut d\u00e9finir pr\u00e9cis\u00e9ment ce qu'un usager peut faire ou non. On donne la permission \u00e0 l'usager d'ex\u00e9cuter tel ou tel commande SQL.</p>"},{"location":"mysql/autorisations/#ajouter-ou-enlever-des-privileges","title":"Ajouter ou enlever des privil\u00e8ges","text":"<pre><code>-- Syntaxe pour ajouter un privil\u00e8ge\nGRANT nomDuPrivilege (listeDesColonnes)\nON niveauPrivilege\nTO nomUsager_nomRole\n\n-- Syntaxe pour enlever un privil\u00e8ge\nREVOKE nomDuPrivilege\nON niveauPrivilege\nFROM nomUsager_nomRole\n</code></pre> <ul> <li>nomDuPrivilege : Le nom du privil\u00e8ge \u00e0 ajouter (SELECT, INSERT, CREATE TABLE, etc.). On peut en mettre plusieurs en les s\u00e9parant par une virgule.</li> <li>listeDesColonnes : C'est optionnel mais on peut sp\u00e9cifier les colonnes sur lesquelles le privil\u00e8ge est appliqu\u00e9. On pourrait par exemple accorder le droit \u00e0 un usager de faire un UPDATE mais seulement pour des colonnes sp\u00e9cifiques d'une table.</li> <li>niveauPrivilege : \u00c0 quel niveau s'applique le privil\u00e8ge. (Globalement, seulement pour une base de donn\u00e9es en particulier, pour une table pr\u00e9cise, etc.)</li> <li>nomUsager_nomRole: \u00c0 quel usager ou role on veut octroyer le privil\u00e8ge.</li> </ul>"},{"location":"mysql/autorisations/#exemple","title":"Exemple","text":"<pre><code>/* Octroyer \u00e0 l'usager test le droit de faire des requ\u00eates select et insert sur \n   toutes les tables de la base de donn\u00e9es credit_social\n */\nGRANT SELECT, INSERT\nON credit_social.*\nTO test@localhost;\n\n/* Octroyer \u00e0 l'usager test2 le droit de faire des requ\u00eates select uniquement sur \n   la table citoyen de la base de donn\u00e9es credit_social. De plus, seulement les \n   colonnes id, nom et prenom seront accessible pour cette table\n */\nGRANT SELECT (id, nom, prenom)\nON credit_social.citoyen\nTO test2@localhost;\n</code></pre> <p>Apr\u00e8s l'ajout ou la suppression de privil\u00e8ges, il est important de rafraichir la liste des privil\u00e8ges avec la commande :</p> <pre><code>FLUSH PRIVILEGES;\n</code></pre>"},{"location":"mysql/autorisations/#liste-des-privileges","title":"Liste des privil\u00e8ges","text":"<p>Voici une courte liste de privil\u00e8ges qu'on peut ajouter \u00e0 un usager :</p> <ul> <li>ALL, tous les privil\u00e8ges, sauf celui d'en accorder.</li> <li>USAGE, aucun privil\u00e8ges</li> <li>GRANT OPTION, accorde le droit d'ajouter des privil\u00e8ges (il n'est pas inclus quand on utilise ALL)</li> <li>SELECT, INSERT, UPDATE, DELETE, pour les requ\u00eates CRUD correspondante</li> <li>CREATE TABLE, ALTER, DROP, REFERENCES pour des op\u00e9rations sur les tables et la base de donn\u00e9es.</li> <li>CREATE ROUTINE, ALTER ROUTINE, EXECUTE, pour des op\u00e9rations sur les proc\u00e9dures stock\u00e9es, fonctions et d\u00e9clencheurs.</li> </ul> <p>Il y a beaucoup d'autres privil\u00e8ges qu'on peut octroyer, vous pouvez consulter une liste plus compl\u00e8te dans la documentation de MySQL :</p> <p>https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html </p>"},{"location":"mysql/autorisations/#niveau-des-privileges","title":"Niveau des privil\u00e8ges","text":"<p>L'indicateur du niveau de privil\u00e8ges se compose en deux sections, la ou les base de donn\u00e9es et ensuite le nom de la table ou de la proc\u00e9dure stock\u00e9e.</p> <ul> <li>. : Toutes les bases de donn\u00e9es et toutes les tables/proc\u00e9dures stock\u00e9es</li> <li>credit_social.* : Pour la base de donn\u00e9es credit_social, toutes les tables</li> <li>credit_social.classe : Pour la base de donn\u00e9es credit_social, la table classe uniquement.</li> </ul>"},{"location":"mysql/autorisations/#afficher-les-autorisations-dun-utilisateur-ou-dun-role","title":"Afficher les autorisations d'un utilisateur ou d'un r\u00f4le","text":"<pre><code>SHOW GRANTS FOR 'usager_role'@'localhost';\n</code></pre>"},{"location":"mysql/convention/","title":"Convention de nommage MySQL","text":"<p>Bien que MySQL n'a pas vraiment de convention de nommage officiel, voici certaines des r\u00e8gles les plus utilis\u00e9es.</p> <p>Ces r\u00e8gles sont obligatoires dans notre cours.</p>"},{"location":"mysql/convention/#regles-generales","title":"R\u00e8gles g\u00e9n\u00e9rales","text":"<ul> <li>Toujours \u00e9crire les noms des tables et des colonnes (champs) en minuscule. \u00c7a peut aider \u00e0 \u00e9viter les erreurs, car MySQL est sensible \u00e0 la case</li> <li>Ne jamais utiliser d'espace, la remplacer par une barre de soulignement \"_\"</li> <li>Ne jamais utiliser de caract\u00e8res accentu\u00e9s</li> <li>Utilisez seulement des lettres dans les noms, pas de nombres ni de caract\u00e8res sp\u00e9ciaux</li> <li>\u00c9vitez d'utiliser un pr\u00e9fix dans le nom, \u00e7a complique inutilement le nom et nuit \u00e0 la visibilit\u00e9 (ex.: etudiants_prenom).</li> </ul>"},{"location":"mysql/convention/#nom-des-tables","title":"Nom des tables","text":"<ul> <li>Le nom doit \u00eatre au pluriel</li> <li>Le nom doit \u00eatre en minuscules (pas de CamelCase)</li> <li>Ne pas utiliser de pr\u00e9fix sauf si c'est in\u00e9vitable.</li> <li>Le nom doit \u00eatre clair et explicite</li> <li>Ne pas utiliser d'abr\u00e9viation</li> </ul>"},{"location":"mysql/convention/#nom-des-champs","title":"Nom des champs","text":"<ul> <li>Le nom doit \u00eatre en minuscules, sans espace et sans nombres</li> <li>On doit \u00e9viter les pr\u00e9fixes</li> <li>Utilisez un nom court, sans utiliser abr\u00e9viation par contre</li> <li>Ne pas utiliser de mot r\u00e9serv\u00e9 comme nom de champs, comme date par exemple</li> <li>Le nom d'une cl\u00e9 \u00e9trang\u00e8re devrait contenir le nom de la table et de sa cl\u00e9 primaire. Une cl\u00e9 \u00e9trang\u00e8re vers la table usager dont la cl\u00e9 primaire est le champ id devrait \u00eatre nomm\u00e9e usager_id</li> </ul>"},{"location":"mysql/creation_bd/","title":"Cr\u00e9ation de base de donn\u00e9es","text":""},{"location":"mysql/creation_bd/#creer","title":"Cr\u00e9er","text":"<p>La commande cr\u00e9er une base de donn\u00e9es est CREATE DATABASE suivi du nom \u00e0 donner. On peut aussi ajouter le type de jeu de charact\u00e8re \u00e0 la base de donn\u00e9es et la collation ou laisser les valeurs par d\u00e9faut.</p>"},{"location":"mysql/creation_bd/#jeu-de-caractere","title":"Jeu de caract\u00e8re","text":"<p>D\u00e9termine les caract\u00e8res que MySQL utilise pour stocker les valeurs dans les tables. Par d\u00e9faut on utilise utf8mb4 qui repr\u00e9sente les caract\u00e8res utilis\u00e9s par la majorit\u00e9 des langues occidentales. Pour changer la valeur par d\u00e9faut on va utiliser CHARACTER SET suivi du nom du jeu de caract\u00e8re.</p> <p>On peut lister tous les jeu de caract\u00e8res avec la requ\u00eate SHOW CHARACTER SET;</p>"},{"location":"mysql/creation_bd/#collation","title":"Collation","text":"<p>La collation est une s\u00e9rie de r\u00e8gle qui va indiquer comment les caract\u00e8res sont compar\u00e9s entre eux, comme par exemple la sensibilit\u00e9 \u00e0 la case ou la fa\u00e7on de trier le texte. La valeur par d\u00e9faut utf8mb4_general_ci. Cette collation a \u00e9t\u00e9 d\u00e9velopp\u00e9 pour acc\u00e9lerer le traitement au prix de la pr\u00e9cision. Je vous conseille d'utiliser la collation utf8_unicode_520_ci. Pour changer la valeur par d\u00e9faut on va utiliser COLLATE suivi du nom de la collation.</p> <p>On peut lister tous les jeu de caract\u00e8res avec la requ\u00eate SHOW COLLATION;</p> <p>Syntaxe du create database :</p> <pre><code>    CREATE DATABASE 'nom_de_la_bd'\n    CHARACTER SET = 'utf8mb4'\n    COLLATE = 'utf8_unicode_520_ci';\n</code></pre>"},{"location":"mysql/creation_bd/#modifier","title":"Modifier","text":"<p>Pour modifier une base de donn\u00e9es on utilise la commande ALTER DATABASE. On peut utiliser aussi les m\u00eames options qu'avec le create database.</p> <p>Syntaxe du alter database :</p> <pre><code>    ALTER DATABASE 'nom_de_la_bd'\n    CHARACTER SET = 'utf8mb4'\n    COLLATE = 'utf8_unicode_520_ci';\n</code></pre>"},{"location":"mysql/creation_bd/#supprimer","title":"Supprimer","text":"<p>Nous allons utiliser la commande DROP DATABASE suivi du nom de la base de donn\u00e9es \u00e0 supprimer. Si elle n'existe pas, MySQL va g\u00e9n\u00e9rer une erreur. Pour l'eviter, on peut ajouter IF EXISTS avant le nom de la base de donn\u00e9es.</p> <pre><code>    DROP DATABASE IF EXISTS 'nom_de_la_bd';\n</code></pre>"},{"location":"mysql/creation_bd/#sources","title":"Sources","text":"<ul> <li>Documentation Create table </li> <li>Jeux de caract\u00e8re et collation</li> <li>Diff\u00e9rence entre utf8mb4_general_ci, utf8mb4_unicode_ci et utf8_unicode_520_ci</li> </ul>"},{"location":"mysql/creation_table/","title":"Cr\u00e9ation de table MySQL","text":""},{"location":"mysql/creation_table/#creer","title":"Cr\u00e9er","text":"<p>La commande pour cr\u00e9er une table est <code>CREATE TABLE</code>. On peut d\u00e9finir un paquet d'options \u00e0 cette commande, on va s'en tenir ici aux principales. Vous avez la liste de toutes les options dans la documentation que j'ai mis en lien en bas de page.</p> <p>On commence par utilisez la commande <code>CREATE TABLE</code> avec le nom de la table \u00e0 cr\u00e9er. On peut ajouter <code>\u00ccF NOT EXISTS</code> avant le nom de la table pour le cr\u00e9er uniquement si elle ne l'est pas d\u00e9j\u00e0. Ensuite entre parenth\u00e8se on va lister les colonnes avec leur nom, leur type de donn\u00e9es et d'autres attributs qu'on voudrait leur donner. On peut aussi d\u00e9finir dans ses parenth\u00e8ses les cl\u00e9 primaires, \u00e9trang\u00e8res et les contraintes. Apr\u00e8s la parenth\u00e8se on pourra ajouter des options relatives \u00e0 la table, comme le moteur de bd (engine) et la collation.</p> <p>Exemple de syntaxe</p> <pre><code>CREATE TABLE IF NOT EXISTS `nom_table` (\n    `colonne1` INT AUTO_INCREMENT,\n    `colonne2` INT,\n    `colonne3` VARCHAR(255) NOT NULL,\n    PRIMARY KEY (`colonne1`),\n    CONSTRAINT `colonne2_fk` FOREIGN KEY (`colonne2`) REFERENCES `table_destination` (`colonne_id`) ON UPDATE RESTRICT ON DELETE CASCADE\n) ENGINE=INNODB;\n</code></pre> <p>Attention</p> <p>Si vous ajouter des cl\u00e9s \u00e9trang\u00e8res dans la cr\u00e9ation de la table, vous devez vous assurez que les colonnes et les tables sont d\u00e9j\u00e0 cr\u00e9\u00e9es. Vous pouvez toujours les cr\u00e9er apr\u00e8s avoir fait la cr\u00e9ation de table en faisant une modification de table.</p>"},{"location":"mysql/creation_table/#modifier","title":"Modifier","text":"<p>Pour modifier une table on utilise la commande <code>ALTER TABLE</code>. On peut utiliser aussi les m\u00eames options qu'avec le create table.</p> <p>Syntaxe du alter table :</p> <pre><code>ALTER TABLE `nom_table`\nADD CONSTRAINT `colonne2_fk` \n    FOREIGN KEY (`colonne2`) \n    REFERENCES table_destination (`colonne_id`) \n    ON UPDATE RESTRICT ON DELETE CASCADE;\n</code></pre>"},{"location":"mysql/creation_table/#supprimer","title":"Supprimer","text":"<p>Nous allons utiliser la commande <code>DROP TABLE</code> suivi du nom de la table \u00e0 supprimer. Si elle n'existe pas, MySQL va g\u00e9n\u00e9rer une erreur. Pour l'eviter, on peut ajouter <code>IF EXISTS</code> avant le nom de la table.</p> <pre><code>DROP TABLE IF EXISTS `nom_de_la_bd`;\n</code></pre>"},{"location":"mysql/creation_table/#source","title":"Source","text":"<ul> <li>Documentation Create table</li> </ul>"},{"location":"mysql/curseurs/","title":"Les curseurs","text":"<p>Parfois on peut vouloir effectuer un traitement sur chaque lignes du r\u00e9sultat d'une requ\u00eate. Les curseurs (cursor) nous permettent justement de parcourir ligne par ligne un r\u00e9sultat, un peu \u00e0 la mani\u00e8re d'une boucle \"while\" en programmation.</p> <p>Il y a trois caract\u00e9ristiques \u00e0 savoir sur les curseurs :</p> <ul> <li>Ils sont en lecture seule, on ne peut pas modifier les valeurs du r\u00e9sultat. On ne peut que parcourir les lignes du r\u00e9sultat de la premi\u00e8re \u00e0 la derni\u00e8re et on ne peut pas sauter de ligne. Pour modifier \"l'ordre de lecture\" on doit utiliser le r\u00e9sultat avec la clause ORDER BY de la requ\u00eate qui g\u00e9n\u00e9rera le r\u00e9sultat.</li> <li>En MySQL, les donn\u00e9es du curseurs pointent vers les vrais donn\u00e9es de la base de donn\u00e9es. Ce qui veut dire que si une modification est faite durant l'utilisation du curseur, les donn\u00e9es de celui-ci seront aussi modifi\u00e9es.</li> <li>On peut utiliser les curseurs dans des proc\u00e9dures stock\u00e9es, des fonctions et des \"triggers\".</li> </ul> <p>L'utilisation des curseurs se fait en quatre \u00e9tapes :</p> <ul> <li>DECLARE : On d\u00e9clare notre curseur en lui sp\u00e9cifiant la requ\u00eate qui sera utilis\u00e9e</li> <li>OPEN : On \"ouvre\" notre curseur. On le place dans un \u00e9tat o\u00f9 il pourra recevoir les donn\u00e9es</li> <li>FETCH : On ajoute les donn\u00e9es de la ligne courante du r\u00e9sultat de la requ\u00eate. La valeur de chaque colonne de la ligne de r\u00e9sultat sera ajout\u00e9e dans une variable que l'on aura d\u00e9clar\u00e9 pr\u00e9alablement.</li> <li>CLOSE : On ferme le curseur une fois notre utilisation termin\u00e9e.</li> </ul>"},{"location":"mysql/curseurs/#declaration-du-curseur","title":"D\u00e9claration du curseur","text":"<p>La d\u00e9claration du curseur doit se faire apr\u00e8s la d\u00e9claration des autres variables sinon MySQL va g\u00e9n\u00e9rer un erreur. La syntaxe pour d\u00e9clarer un curseur est la suivante :</p> <pre><code>DECLARE mon_curseur CURSOR FOR requete_select;\n</code></pre> <p>On doit toujours utiliser une requ\u00eate SELECT pour g\u00e9n\u00e9rer le r\u00e9sultat qui va \u00eatre utilis\u00e9 par le curseur. Voici un exemple o\u00f9 l'on voudrait utiliser le matricule des employ\u00e9es qui ont \u00e9t\u00e9 embauch\u00e9 il y a 5 ans ou plus</p> <pre><code>DECLARE curseur_employe CURSOR FOR\n    SELECT matricule \n    FROM employe\n    WHERE TIMESTAMPDIFF(year,date_embauche, now()) &gt;= 5;\n</code></pre>"},{"location":"mysql/curseurs/#ouverture-du-curseur","title":"Ouverture du curseur","text":"<p>Pour ouvrir le curseur, on doit simplement utiliser la commande OPEN suivie du nom du curseur :</p> <pre><code>OPEN mon_curseur;\n</code></pre> <p>Si on reprend l'exemple plus haut, on ferais</p> <pre><code>OPEN curseur_employe;\n</code></pre>"},{"location":"mysql/curseurs/#ajout-de-donnees-au-curseur","title":"Ajout de donn\u00e9es au curseur","text":"<p>Une fois le curseur disponible, on peut y ajouter des donn\u00e9es avec la commande FETCH. On le verra plus loin mais le cette op\u00e9ration s'effectue \u00e0 l'int\u00e9rieur d'une boucle. Le r\u00e9sultat du FETCH sera les valeurs des colonnes du r\u00e9sultat pour la ligne courante. La syntaxe est la suivante :</p> <pre><code>FETCH mon_curseur INTO liste de variable;\n</code></pre> <p>Les variables doivent \u00eatre s\u00e9par\u00e9es par des espaces et correspondre au nombre de colonnes du r\u00e9sultat. Ces variables auront \u00e9t\u00e9 d\u00e9clar\u00e9es au d\u00e9but de la proc\u00e9dure comme on l'expliquait plus haut. En reprenant notre exemple, nom allons assigner la valeur du matricule de la ligne courante du r\u00e9sultat dans une variable nomm\u00e9e no_matricule :</p> <pre><code>FETCH curseur_employe INTO no_matricule;\n</code></pre> <p>Chaque fois qu'on execute la commande FETCH, MySQL essaie de lire la ligne suivante du r\u00e9sultat. S'il n'y a plus d'enregistrement (qu'on est \u00e0 la derni\u00e8re ligne), une exception sera lev\u00e9e. On doit g\u00e9rer cette exception si on veut que tout se d\u00e9roule bien. Pour se faire, on va ajouter un HANDLER. Sa d\u00e9claration se fera apr\u00e8s la d\u00e9claration du curseur (on va voir plus loin l'ordre en d\u00e9tail avec un exemple).</p> <pre><code>DECLARE CONTINUE HANDLER FOR NOT FOUND SET fin_enregistrement = 1;\n</code></pre> <p>En r\u00e9sum\u00e9, on indique \u00e0 MySQL que si il rencontre l'exception NOT FOUND de continuer le traitement (CONTINUE) et d'assigner \u00e0 la variable fin_enregistrement la valeur 1. La variable fin_enregistrement aura \u00e9t\u00e9 d\u00e9clar\u00e9 plus haut.</p>"},{"location":"mysql/curseurs/#fermeture-du-curseur","title":"Fermeture du curseur","text":"<p>Finalement, une fois notre traitement termin\u00e9, il nous reste qu'\u00e0 fermer le curseur.</p> <pre><code>CLOSE mon_curseur;\n</code></pre> <p>ou avec notre exemple</p> <pre><code>CLOSE curseur_employe;\n</code></pre>"},{"location":"mysql/curseurs/#exemple-dune-procedure-utilisant-un-curseur","title":"Exemple d'une proc\u00e9dure utilisant un curseur","text":"<p>Une entreprise veut cr\u00e9er deux listes de diffusion pour ses employ\u00e9es, une premi\u00e8re pour les employ\u00e9es qui compte moins de x ann\u00e9es d'anciennet\u00e9s et une pour les autres (le nombre d'ann\u00e9es sera re\u00e7u en param\u00eatre). La liste comportera le nom et pr\u00e9nom de l'employ\u00e9 ainsi que son adresse courriel. Dans la base de donn\u00e9es il y a d\u00e9j\u00e0 deux tables qui ont \u00e9t\u00e9 cr\u00e9\u00e9 pour recevoir ces listes : employe_moins et employe_plus. En r\u00e9alit\u00e9 il y aurait plus d'\u00e9tapes en mettre en place dans notre proc\u00e9dure pour s'assurer de l'int\u00e9grit\u00e9 de nos donn\u00e9es (utiliser une transaction, vider les tables avant l'ajout, \"attraper\" les erreurs, etc...). Pour simplifier les choses prenons pour acquis que les tables sont vides et que tout va se d\u00e9rouler sans erreurs comme par magie.</p> <pre><code>DELIMITER $$\nCREATE PROCEDURE generer_liste_employe (IN nombre_annee)\nBEGIN\n    -- D\u00e9claration de la variable utilis\u00e9e dans le handler \"NOT FOUND\"\n    DECLARE fin_enregistrement INTEGER DEFAULT 0;\n    -- D\u00e9claration des variables utilis\u00e9es dans le fetch du curseur\n    DECLARE nom varchar(30) DEFAULT \"\";\n    DECLARE prenom varchar(30) DEFAULT \"\";\n    DECLARE courriel varchar(255) DEFAULT \"\";\n    DECLARE calcul_anciennete INT DEFAULT 0;\n\n    -- D\u00e9claration du curseur des employ\u00e9es\n    DEClARE curseur_employe CURSOR FOR \n        SELECT nom, prenom, email, TIMESTAMPDIFF(year,date_embauche, now()) \n        FROM employees;\n\n    -- D\u00e9claration du handler NOT FOUND\n    DECLARE CONTINUE HANDLER FOR NOT FOUND SET fin_enregistrement = 1;\n\n    -- Ouverture du curseur\n    OPEN curseur_employe;\n\n    -- D\u00e9but de la boucle\n    liste_employee: LOOP\n        -- On assigne les valeurs de la ligne du r\u00e9sultat aux variables\n        FETCH curseur_employe INTO nom, prenom, courriel, calcul_anciennete;\n        -- On s'assure qu'on n'a pas atteind la fin des enregistrements avant de continuer\n        IF fin_enregistrement = 1 THEN \n            LEAVE liste_employee;\n        END IF;\n\n        -- En utilisant la variable calcul_anciennete utilis\u00e9e dans le fetch et le param\u00eatre\n        -- nombre_annee, on valide avec un si dans quelle tables ajout\u00e9es les donn\u00e9es\n        IF  calcul_anciennete &lt; nombre_annee THEN\n            INSERT INTO employe_moins(nom, prenom, courriel) VALUES (nom, prenom, courriel)\n        ELSE\n            INSERT INTO employe_plus(nom, prenom, courriel) VALUES (nom, prenom, courriel)\n        END IF;\n\n    END LOOP liste_employee;\n\n    -- Fermeture du curseur\n    CLOSE curseur_employe;\n\nEND$$\nDELIMITER ;\n</code></pre>"},{"location":"mysql/curseurs/#sources-et-documentation-supplementaire","title":"Sources et documentation suppl\u00e9mentaire","text":"<ul> <li>https://dev.mysql.com/doc/refman/8.0/en/cursors.html</li> <li>https://www.mysqltutorial.org/mysql-cursor/</li> </ul>"},{"location":"mysql/declencheurs/","title":"D\u00e9clencheurs (triggers)","text":"<p>Un d\u00e9clencheur (trigger)) est une routine, une s\u00e9rie d'instruction enregistr\u00e9e, qui est reli\u00e9 \u00e0 une table de la base de donn\u00e9es. Les instructions seront ex\u00e9cut\u00e9es automatiquement lors d'une insertion, d'une mise \u00e0 jour ou d'une suppression dans la table \u00e0 laquelle le d\u00e9clencheur est attach\u00e9 et \u00e7a pour chacune des lignes affect\u00e9es par la requ\u00eate. On doit aussi sp\u00e9cifier \u00e0 quel moment il sera d\u00e9clench\u00e9, avant l'instruction SQL ou apr\u00e8s. On peut donc d\u00e9finir jusqu'\u00e0 6 d\u00e9clencheurs par table : avant ou apr\u00e8s une insertion, avant ou apr\u00e8s une mise \u00e0 jour, avant ou apr\u00e8s une suppression.</p> <p>Il est possible d'utiliser un d\u00e9clencheur pour modifier et ins\u00e9rer des donn\u00e9es dans n'importe quel table de la base de donn\u00e9es \u00e0 l'exception des tables utilis\u00e9es dans la requ\u00eate qui l'a d\u00e9clench\u00e9. Si on veut travailler sur la table \u00e0 laquelle le d\u00e9clencheur est attach\u00e9, on n'a acc\u00e8s qu'\u00e0 la ligne qu'on est en train de traiter.</p> <p>Pourquoi utiliser des d\u00e9clencheurs ?</p> <ul> <li>S'assurer de la validit\u00e9 des donn\u00e9es avant leur insertion ou leur modification.</li> <li>Pour pouvoir utiliser des traitements plus complexe lors d'op\u00e9ration qui affectent plusieurs tables. Par exemple si on veut supprimer des donn\u00e9es qui sont reli\u00e9es \u00e0 d'autres tables par des cl\u00e9s \u00e9trang\u00e8res et que les options offerte ne nous suffise pas.</li> <li>Pour garder une trace des op\u00e9rations effectu\u00e9es dans la base de donn\u00e9es.</li> <li>Mettre \u00e0 jour des informations qu'on utilise r\u00e9guli\u00e8rement pour pouvoir les retrouver facilement, comme par exemple le solde actif d'un compte client. Syntaxe</li> </ul> <p>On utilise la commande <code>CREATE TRIGGER</code> pour la cr\u00e9ation d'un d\u00e9clencheur. Le nom du d\u00e9clencheur doit \u00eatre unique dans la base de donn\u00e9es. Il est d'usage de nommer le d\u00e9clencheur avec le nom de la table associ\u00e9e, du moment de son d\u00e9clenchement et de l'op\u00e9ration effectu\u00e9e. Par exemple :  un d\u00e9clencheur sur la table usagers qui se d\u00e9clenchera avant une insertion, sera nomm\u00e9 usagers_before_insert.</p> <pre><code>CREATE TRIGGER nomTrigger \n    momentDuDeclenchement operationSQL ON nomTable\n    FOR EACH ROW\n    corpsDuTrigger;\n</code></pre> <ul> <li>Le moment du d\u00e9clenchement est BEFORE ou AFTER</li> <li>L'op\u00e9ration SQL est soit INSERT, UPDATE ou DELETE</li> </ul> <p>Si le corps du trigger contient plus d'une requ\u00eate et/ou op\u00e9ration, on doit les englober par un BEGIN END.</p>"},{"location":"mysql/declencheurs/#new-et-old","title":"NEW et OLD","text":"<p>On peut utiliser les mots cl\u00e9s dans le corps du d\u00e9clencheur pour acc\u00e9der aux donn\u00e9es avant ou apr\u00e8s leur modification.</p> <p>OLD repr\u00e9sente les donn\u00e9es avant qu'elles ne soient modifi\u00e9es par la requ\u00eate. Ces donn\u00e9es ne peuvent pas \u00eatre modifi\u00e9es. OLD est disponible pour les UPDATE et DELETE.</p> <p>NEW repr\u00e9sente les donn\u00e9es apr\u00e8s qu'elles aient \u00e9t\u00e9 modifi\u00e9es. Ces donn\u00e9es peuvent \u00eatre lues et modifi\u00e9es. NEW est disponible pour les INSERT et UPDATE.</p> Requ\u00eate OLD NEW INSERT - OUI UPDATE OUI OUI DELETE OUI -"},{"location":"mysql/declencheurs/#erreur-dans-un-declencheur","title":"Erreur dans un d\u00e9clencheur","text":"<p>Si un d\u00e9clencheur ex\u00e9cut\u00e9 avant (BEFORE) une requ\u00eate cause une erreur, la requ\u00eate ne sera pas ex\u00e9cut\u00e9e. Les d\u00e9clencheurs ex\u00e9cut\u00e9s apr\u00e8s (AFTER) une requ\u00eate qui g\u00e9n\u00e8re une erreur feront \u00e9chouer celle-ci. Il est donc important de bien concevoir les d\u00e9clencheurs et d'inclure une gestion des erreurs dans notre traitement.</p>"},{"location":"mysql/declencheurs/#supprimer-un-declencheur","title":"Supprimer un d\u00e9clencheur","text":"<p>Pour supprimer un d\u00e9clencheur, on utilise la commande <code>DROP TRIGGER</code> suivie du nom du d\u00e9clencheur. Si on supprimer une table, tous les d\u00e9clencheurs qui lui sont associ\u00e9s seront aussi supprim\u00e9s.</p> <pre><code>DROP TRIGGER before_insert_usager;\n</code></pre>"},{"location":"mysql/declencheurs/#gestion-derreurs-dans-un-declencheur","title":"Gestion d'erreurs dans un d\u00e9clencheur","text":"<p>MySQL g\u00e8re les erreurs dans les d\u00e9clencheurs de la fa\u00e7on suivante :</p> <ul> <li>Si un d\u00e9clencheur de type BEFORE \u00e9choue, l'op\u00e9ration sur la ligne correspondante ne sera pas effectu\u00e9e.</li> <li>Un d\u00e9clencheur BEFORE est activ\u00e9 par l'essaie d'ins\u00e9rer ou de modifier la ligne, m\u00eame s'il y a \u00e9chec de l'op\u00e9ration.</li> <li>Un d\u00e9clencheur AFTER est ex\u00e9cut\u00e9 seulement apr\u00e8s qu'un d\u00e9clencheur BEFORE et l'op\u00e9ration sur la ligne soient r\u00e9ussis.</li> <li>Une erreur dans un d\u00e9clencheur BEFORE et AFTER cause l'\u00e9chec de toute l'op\u00e9ration.</li> </ul> <p>On peut aussi g\u00e9rer les erreurs, les exceptions et m\u00eame les contraintes \u00e0 l'aide de HANDLER ou de la commande SIGNAL. Voir les notes sur la gestions des erreurs</p> <p>Voici un court exemple de gestion avec SIGNAL. On a une table compte avec un champ solde qui ne peut \u00eatre initialis\u00e9 \u00e0 une valeur inf\u00e9rieur \u00e0 0.</p>"},{"location":"mysql/declencheurs/#exemple-gestion-dexceptions","title":"Exemple gestion d'exceptions","text":"<pre><code>DELIMITER $$\n\nCREATE TRIGGER compte_before_insert\n    BEFORE INSERT\n    ON compte FOR EACH ROW\n    BEGIN\n\n        IF NEW.solde &lt; 0 THEN \n            SIGNAL SQLSTATE '45000' \n            SET MESSAGE_TEXT = 'Le solde du nouveau compte ne peut \u00eatre n\u00e9gatif';\n        END IF;\n\n    END $$\n\nDELIMITER ;\n</code></pre>"},{"location":"mysql/declencheurs/#restrictions","title":"Restrictions","text":"<ul> <li> <p>On en peut pas utiliser de transaction dans un d\u00e9clencheur, START TRANSACTION, COMMIT ou ROLLBACK</p> </li> <li> <p>On peut utiliser une proc\u00e9dure stock\u00e9e mais avec les restrictions suivantes :</p> <ul> <li>La proc\u00e9dure ne peut pas retourner d'informations, \u00e0 part en utilisant un param\u00e8tre OUT ou IN/OUT.</li> <li>La proc\u00e9dure ne doit pas utiliser de transaction.</li> </ul> </li> <li>On ne peut pas modifier les donn\u00e9es d'une table qui est utilis\u00e9e dans la requ\u00eate qui d\u00e9clenche le trigger. \u00c7a compte pour toutes les tables de la requ\u00eate et non seulement la table associ\u00e9e au trigger.</li> <li>Une suppression ou modification de donn\u00e9es d\u00e9clench\u00e9e par une cl\u00e9 \u00e9trang\u00e8re ne provoquera pas l'ex\u00e9cution du trigger associ\u00e9 \u00e0 cette table.</li> </ul>"},{"location":"mysql/declencheurs/#exemple-de-declencheur","title":"Exemple de d\u00e9clencheur","text":"<p>Prenons par exemple une table joueurs, un table guildes et une table joueurs_guildes_log. Dans la table joueurs il y a un champ guilde_id qui fait r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire de la table guildes. Quand on modifie la guilde d'un joueur, il faudrait sauvegarder les informations dans une autre table (le id du joueur, l'id de son ancienne guile, l'id de la nouvelle guilde et la date de la modification). Il se doit de cr\u00e9er un d\u00e9clencheur AFTER sur la table joueur. Il faut  aussi valider que la colonne guilde_id a \u00e9t\u00e9 modifi\u00e9e avant d'ajouter les informations dans la table joueurs_guildes_log.</p> <pre><code>DELIMITER $$\n\nCREATE TRIGGER joueur_after_update\n    AFTER UPDATE\n    ON joueur FOR EACH ROW\n    BEGIN\n\n        IF OLD.guilde_id &lt;&gt; NEW.guilde_id THEN \n            INSERT INTO joueur_guild_log (joueur_id, \n                                          old_guild_id, \n                                          new_guild_id, \n                                          mod_date)\n            VALUES (old.id, \n                    old.guilde_id, \n                    new.guilde_id, \n                    NOW());\n        END IF;\n\n    END $$\n\nDELIMITER ;\n</code></pre>"},{"location":"mysql/declencheurs/#documentation","title":"Documentation","text":"<ul> <li>https://www.mysqltutorial.org/mysql-triggers/</li> <li>https://www.javatpoint.com/mysql-trigger </li> <li>https://dev.mysql.com/doc/refman/8.0/en/trigger-syntax.html</li> </ul>"},{"location":"mysql/fonctions/","title":"Les fonctions","text":"<p>Une fonction est une petite routine qui retourne une valeur unique et qui peut \u00eatre r\u00e9utilis\u00e9e. MySQL comporte d\u00e9j\u00e0 plusieurs fonctions (NOW(), CONCAT()) mais il est aussi possible d'en cr\u00e9er de nouvelles.</p>"},{"location":"mysql/fonctions/#creation-dune-fonction","title":"Cr\u00e9ation d'une fonction","text":"<p>Voici la syntaxe de cr\u00e9ation d'une fonction</p> <pre><code>DELIMITER $$\n\nCREATE FUNCTION [IF NOT EXISTS] nom_fonction(\n    param\u00e8tre1,\n    param\u00e8tre2,\u2026\n)\nRETURNS type_de_donn\u00e9e\n[NOT] DETERMINISTIC\nBEGIN\n -- Le traitement\nEND $$\n\nDELIMITER ;\n</code></pre>"},{"location":"mysql/fonctions/#parametres","title":"Param\u00e8tres","text":"<ul> <li>Les param\u00e8tres sont d\u00e9finis par un nom et un type de donn\u00e9es </li> <li>Chaque param\u00eatre est s\u00e9par\u00e9 par une virgule.</li> </ul>"},{"location":"mysql/fonctions/#type-de-retour","title":"Type de retour","text":"<p>Apr\u00e8s le mot-cl\u00e9 RETURNS on indique le type de donn\u00e9es de la valeur de retour de la fonction. \u00c7a peut \u00eatre n'importe quel type MySQL valide (INTEGER, VARCHAR(), TINYINT(1))</p>"},{"location":"mysql/fonctions/#deterministic-vs-not-deterministic","title":"DETERMINISTIC vs NOT DETERMINISTIC","text":"<p>Une fonction DETERMINISTIC va toujours retourner la m\u00eame valeur si on lui donne les m\u00eames param\u00e8tres. Une fonction NOT DETERMINISTIC peut retourner un r\u00e9sultat diff\u00e9rent m\u00eame si on lui donne les m\u00eames param\u00e8tres. C'est une valeur \"indicative\" et MySQL fait confiance au d\u00e9veloppeur quand \u00e0 la v\u00e9racit\u00e9 de l'affimation. Par contre pour une question d'optimisation et de performance il est pr\u00e9f\u00e9rable d'indiquer le bon type. Par d\u00e9faut la fonction sera NOT DETERMINISTIC.</p> <p>Truc du m\u00e9tier</p> <p>Il est commun de qualifier une fonction NOT DETERMINISTIC lorsque la fonctions retourne des donn\u00e9es d\u00e9riv\u00e9es d'une ou de plusieurs tables.</p>"},{"location":"mysql/fonctions/#le-traitement","title":"Le traitement","text":"<p>Habituellement dans le traitment on va d\u00e9clarer une variable au tout d\u00e9but qui sera utilis\u00e9e pour contenir le r\u00e9sultat de retour de la fonction.</p> <p>Le traitement doit absolument contenir un instruction RETURN qui marque la fin de la fonction et retourne la valeur.</p> <p>On peut utiliser des HANDLERs dans une fonction pour controller les erreurs et le traitement.</p> <p>Exemple d'une fonction qui re\u00e7oit en param\u00e8tre une note et qui retourne un commentaire selon la note.</p> <pre><code>DELIMITER $$\n\nCREATE FUNCTION note_commentaire(resultat INTEGER)\nRETURNS VARCHAR(20)\nDETERMINISTIC\nBEGIN\n    DECLARE commentaire VARCHAR(20);\n\n    IF resultat &gt;= 60 THEN\n        SET commentaire = \"R\u00e9ussite\";\n    ELSE\n        SET commentaire = \"\u00c9chec\";\n    END IF;\n\n    RETURN commentaire;\n\nEND$$\n\nDELIMITER ;\n</code></pre>"},{"location":"mysql/fonctions/#utilisation-dune-fonction","title":"Utilisation d'une fonction","text":"<p>On peut utiliser la fonction dans n'importe quelle instruction MySQL ou proc\u00e9dure stock\u00e9e.</p> <pre><code>SELECT note_commentaire(r.note)\nFROM resultats AS r\nWHERE r.etudiant_id = 1234; \n</code></pre>"},{"location":"mysql/fonctions/#modification-dune-fonction","title":"Modification d'une fonction","text":"<p>On ne peut pas modifier le traitement d'une fonction. Si des modifications doivent \u00eatre apport\u00e9es, il faut supprimer la fonction et la recr\u00e9er.</p>"},{"location":"mysql/fonctions/#suppression-dune-fonction","title":"Suppression d'une fonction","text":"<p>Syntaxe <pre><code>DROP FUNCTION [IF EXISTS] function_name;\n</code></pre></p>"},{"location":"mysql/gestion_erreurs/","title":"Gestion des erreurs","text":"<p>Pour intercepter les erreurs dans un script, une proc\u00e9dure stock\u00e9e ou un d\u00e9clencheur, on va utiliser des handlers. On peut aussi g\u00e9n\u00e9rer une erreur avec la commande SIGNAL.</p>"},{"location":"mysql/gestion_erreurs/#handler","title":"HANDLER","text":"<p>La syntaxe de d\u00e9claration d'un handler est la suivante : <pre><code>DECLARE handler_action HANDLER FOR condition_value statement;\nhandler_action\n</code></pre></p> <p>De quelle fa\u00e7on l'ex\u00e9cution des instructions va \u00eatre affect\u00e9e lorsque l'erreur survient.</p> <ul> <li>CONTINUE : L'ex\u00e9cution des instructions va se continuer.</li> <li>EXIT : L'ex\u00e9cution des instructions comprisent \u00e0 l'int\u00e9rieur du bloc BEGIN ... END d'o\u00f9 l'erreur est survenue se termine.</li> </ul> <p>condition_value</p> <p>Quelle est l'erreur qu'on veut intercepter avec le handler</p> <p>mysql_error_code : Un code d'erreur MySQL. En voici la liste ici </p> <p>SQLSTATE [VALUE] : O\u00f9 VALUE repr\u00e9sente un code de 5 caract\u00e8re qui repr\u00e9sente un code d'\u00e9tat MySQL. Tr\u00e8s similaire \u00e0 mysql_error_code. Vous pouvez consulter la liste ici </p> <p>condition_name : On peut d\u00e9finir un nom de condition qui est associ\u00e9 \u00e0 un code d'erreur ou d'\u00e9tat et l'utiliser ensuite dans le handler.</p> <pre><code>DECLARE no_such_table CONDITION FOR 1051;\nDECLARE CONTINUE HANDLER FOR no_such_table\n  BEGIN\n    -- body of handler\n  END;\n</code></pre> <p>SQLWARNINGS : Un raccourci pour les code d'\u00e9tat SQLSTATE qui commence par 01, le plus souvent des messages d'avertissements</p> <p>NOT FOUND: On l'a vue dans notre utilisation des cursors. Se d\u00e9clenche quand le curseur arrive \u00e0 la fin de ses r\u00e9sultats</p> <p>SQLEXCEPTION: Un raccourci pour les code d'\u00e9tat SQLSTATE qui ne commence pas par 00, 01 ou 02.</p>"},{"location":"mysql/gestion_erreurs/#exemple","title":"Exemple","text":"<p>Quand ma proc\u00e9dure stock\u00e9e provoque une erreur, je veux annuler les op\u00e9rations d\u00e9j\u00e0 effectu\u00e9es et quitter le traitement en affichant un message d'erreur. On va utiliser ROLLBACK pour annuler les op\u00e9rations et SELECT avec notre message d'erreur.</p> <pre><code>CREATE PROCEDURE exemplebd.test_error(valeur INT)\nBEGIN\n\n    DECLARE EXIT HANDLER FOR SQLEXCEPTION\n    BEGIN\n        ROLLBACK;\n        SELECT 'Une erreur est survenue, les op\u00e9rations ont \u00e9t\u00e9 annul\u00e9es.';\n    END;\n\n    START TRANSACTION;\n\n    ...\n\n    COMMIT;\nEND\n</code></pre>"},{"location":"mysql/gestion_erreurs/#signal","title":"SIGNAL","text":"<p>Avec SIGNAL on va pouvoir g\u00e9r\u00e9ner une erreur qui va stopper l'\u00e9x\u00e9cution du script. On peut aussi jumeler SIGNAL avec un HANDLER</p> <p>La syntaxe de d\u00e9claration de SIGNAL est la suivante :</p> <pre><code>SIGNAL condition_value SET signal_information_item;\n</code></pre>"},{"location":"mysql/gestion_erreurs/#condition_value","title":"condition_value","text":"<p>Comme pour le HANDLER, on va utiliser un SQLSTATE ou une condition qu'on aura d\u00e9fini auparavant. Le plus souvent on va utiliser SQLSTATE = '45000' qui indique une erreur d\u00e9finie par l'utilisateur.</p>"},{"location":"mysql/gestion_erreurs/#signal_information_item","title":"signal_information_item","text":"<p>On peut ensuite d\u00e9finir des valeurs \u00e0 des variables pr\u00e9d\u00e9finis associ\u00e9s \u00e0 SIGNAL. Une de cess variables est MESSAGE_TEXT qui nous permet de retourner un message d'erreur. La liste compl\u00eate est ici.</p>"},{"location":"mysql/gestion_erreurs/#exemple_1","title":"Exemple","text":"<p>Dans une proc\u00e9dure je veux arr\u00eater l'\u00e9x\u00e9cution si la valeur de la variable nombre est inf\u00e9rieur \u00e0 0</p> <pre><code>CREATE PROCEDURE exemplebd.test_error(nombre INT)\nBEGIN\n    IF (nombre &lt; 0) THEN\n        SIGNAL SQLSTATE SET MESSAGE_TEXT = \"La valeur doit \u00eatre sup\u00e9rieure \u00e0 0\";\n    END IF;\n\n    SELECT nombre;\n\nEND\n</code></pre>"},{"location":"mysql/gestion_erreurs/#resultat","title":"r\u00e9sultat","text":"<pre><code>mysql&gt;\u00a0CALL test_error(-2);\nERROR 1644 (45000): La valeur doit \u00eatre sup\u00e9rieure \u00e0 0\n</code></pre> <p>Le m\u00eame exemple avec un HANDLER.</p> <pre><code>CREATE PROCEDURE exemplebd.test_error(nombre INT)\nBEGIN\n\n    DECLARE EXIT HANDLER FOR SQLSTATE '45000' \n    BEGIN \n        SELECT \"La valeur doit \u00eatre sup\u00e9rieure \u00e0 0\" AS message_erreur;\n    END;\n\n    IF (nombre &lt; 0) THEN\n        SIGNAL SQLSTATE '45000';\n    END IF;\n\n    SELECT nombre;\n\nEND\n</code></pre>"},{"location":"mysql/gestion_erreurs/#resultat_1","title":"r\u00e9sultat","text":"<pre><code>mysql&gt;\u00a0CALL test_error(-2);\n+------------------------------------+\n| message_erreur                     |\n+------------------------------------+\n| La valeur doit \u00eatre sup\u00e9rieure \u00e0 0 |\n+------------------------------------+\n1 row in set (0.00 sec)\n\nQuery OK, 0 rows affected (0.00 sec)\n</code></pre> <p>L'avantage d'utiliser le handler est qu'on pourrait \u00e9x\u00e9cuter un traitement lors de l'erreur alors qu'avec signal on ne peut pas. La m\u00e9thode pour r\u00e9cup\u00e9rer l'erreur dans notre code ne sera pas la m\u00eame selon ce qu'on utilise.</p> <p>Avec le handler, c'est selon le traitement utilis\u00e9. Dans notre exemple plus haut, quand on lance la proc\u00e9dure on s'attend \u00e0 recevoir un r\u00e9sultat de requ\u00eate. Si une erreur est retourn\u00e9e, on pourrait v\u00e9rifier qu'il y a un champ message_erreur dans le r\u00e9sultat et l'afficher.</p> <p>Avec signal uniquement, on va devoir r\u00e9cup\u00e9rer l'exception avec un try .. catch. </p> <p>Voici un exemple en Python avec MySQL Connector</p> <pre><code>def TestError():\n\n    result = []\n    try:\n        connection = mysql.connect(**db_config)\n        cursor = connection.cursor()\n        cursor.callproc('test_error', (12,))\n        for result in cursor.stored_results():\n            # Si j'utilise un handler avec le signal\n            # mon message d'erreur se retrouvera ici\n            print(result.fetchall())\n\n    except mysql.Error as erreur:\n        # Le message d'erreur avec signal est ici\n        print(erreur.msg)\n    finally:\n        cursor.close()\n        connection.close()\n</code></pre>"},{"location":"mysql/gestion_erreurs/#source","title":"Source","text":"<ul> <li>https://dev.mysql.com/doc/refman/8.0/en/declare-handler.html </li> <li>https://dev.mysql.com/doc/refman/8.0/en/signal.html </li> <li>https://www.mysqltutorial.org/mysql-error-handling-in-stored-procedures/</li> </ul>"},{"location":"mysql/insertion/","title":"Insertion de donn\u00e9es","text":"<p>La commande <code>INSERT</code> est utilis\u00e9e pour ajouter des enregistrements dans une table.</p>"},{"location":"mysql/insertion/#syntaxe-de-base","title":"Syntaxe de base","text":""},{"location":"mysql/insertion/#la-methode-la-plus-simple","title":"La m\u00e9thode la plus simple","text":"<pre><code>INSERT INTO ma_table\nVALUES (valeur1, valeur2, valeur3);\n</code></pre>"},{"location":"mysql/insertion/#avantages","title":"Avantages","text":"<ul> <li>Requ\u00eate plus courte </li> <li>Si on modifie les noms de colonnes, pas besoin de modifier la requ\u00eate.</li> </ul>"},{"location":"mysql/insertion/#inconvenients","title":"Inconv\u00e9nients","text":"<ul> <li>Possibilit\u00e9 d'erreurs plus grande, il faut que les valeurs concordent avec le nombre de colonnes et leur position.</li> </ul>"},{"location":"mysql/insertion/#la-methode-la-plus-precise","title":"La m\u00e9thode la plus pr\u00e9cise","text":"<pre><code>INSERT INTO ma_table (colonne1, colonne2, colonne3)\nVALUES (valeur1, valeur2, valeur3);\n</code></pre>"},{"location":"mysql/insertion/#avantages_1","title":"Avantages","text":"<ul> <li>Plus de pr\u00e9cisions dans la requ\u00eate </li> <li>On n'est pas forc\u00e9 de suivre l'ordre des colonnes ni d'ajouter une valeur pour chacune d'entre elles.</li> </ul>"},{"location":"mysql/insertion/#inconvenient","title":"Inconv\u00e9nient","text":"<ul> <li>Les requ\u00eates sont plus longues \u00e0 \u00e9crire.</li> <li>Au niveau de la maintenance, si on modifie un nom de colonne, il faut modifier toutes les requ\u00eates ajoutant des valeurs dans cette colonne.</li> </ul>"},{"location":"mysql/insertion/#inserer-des-donnees-seulement-dans-certaines-colonnes","title":"Ins\u00e9rer des donn\u00e9es seulement dans certaines colonnes","text":"<pre><code>INSERT INTO ma_table (colonne1)\nVALUES (valeur1);\n</code></pre> <p>Les autres champs non sp\u00e9cifi\u00e9s prendront la valeur par d\u00e9faut si elle est d\u00e9fini ou NULL sinon.</p>"},{"location":"mysql/insertion/#inserer-plusieurs-lignes-dans-la-meme-requete","title":"Ins\u00e9rer plusieurs lignes dans la m\u00eame requ\u00eate","text":"<p>La syntaxe est la m\u00eame, on doit seulement s\u00e9parer les s\u00e9ries de valeurs par une virgule :</p> <pre><code>INSERT INTO ma_table\nVALUES  (valeur_a1, valeur_a2, valeur_a3),\n        (valeur_b1, valeur_b2, valeur_b3),\n        (valeur_c1, valeur_c2, valeur_c3),\n        (valeur_d1, valeur_d2, valeur_d3);\n</code></pre> <pre><code>INSERT INTO ma_table (colonne1, colonne2, colonne3)\nVALUES  (valeur_a1, valeur_a2, valeur_a3),\n        (valeur_b1, valeur_b2, valeur_b3),\n        (valeur_c1, valeur_c2, valeur_c3),\n        (valeur_d1, valeur_d2, valeur_d3);\n</code></pre>"},{"location":"mysql/insertion/#inserer-des-valeurs-provenant-dune-autre-table","title":"Ins\u00e9rer des valeurs provenant d'une autre table","text":"<p>On peut ins\u00e9rer les valeurs d'autres tables en utilisant une sous-requ\u00eate de s\u00e9lection au lieu de sp\u00e9cifier les valeurs dans la section VALUES.</p> <pre><code>INSERT INTO ma_table (colonne1, colonne2, colonne3)\n    SELECT valeur1, valeur2, valeur3\n    FROM table_source;\n</code></pre> <p>La requ\u00eate SELECT n'a pas de contraintes et peut contenir plusieurs jointures, des conditions WHERE et HAVING, d'autres sous-requ\u00eate, etc.</p> <p>Si on veut ins\u00e9rer tout le contenu d'une table dans une autre, on peut utiliser l'instruction TABLE et le nom de la table d'o\u00f9 proviennent les donn\u00e9es \u00e0 ins\u00e9rer.</p> <pre><code>INSERT INTO ma_table TABLE table_source\n</code></pre>"},{"location":"mysql/insertion/#les-colonnes-de-type-auto-increment","title":"Les colonnes de type auto-incr\u00e9ment","text":"<p>Ce type de colonne est incr\u00e9ment\u00e9e automatiquement lors d'une insertion de donn\u00e9es, on ne doit pas les ajouter dans nos requ\u00eates d'insertion.</p>"},{"location":"mysql/insertion/#recuperer-la-valeur-dune-colonne-auto-increment","title":"R\u00e9cup\u00e9rer la valeur d'une colonne auto-incr\u00e9ment","text":"<p>On peut r\u00e9cup\u00e9rer la premi\u00e8re valeur provenant d'un champ auto-incr\u00e9ment qui a \u00e9t\u00e9 ins\u00e9rer avec succ\u00e8s en utilisant la fonction <code>last_insert_id()</code>.</p> <pre><code>INSERT INTO ma_table (colonne1) \nVALUES (valeur1);\n</code></pre> <pre><code>SELECT last_insert_id();\n</code></pre>"},{"location":"mysql/procedures/","title":"Proc\u00e9dures stock\u00e9es","text":"<p>Une proc\u00e9dure stock\u00e9e nous permet d'enregistrer sur le serveur MySQL une s\u00e9rie d'instructions qu'on pourra r\u00e9utiliser \u00e0 notre guise. \u00c0 la diff\u00e9rence de la fonction, la proc\u00e9dure stock\u00e9e peut retourner un jeu de r\u00e9sultat.</p>"},{"location":"mysql/procedures/#creation-dune-procedure","title":"Cr\u00e9ation d'une proc\u00e9dure","text":"<pre><code>DELIMITER $$\n\nCREATE PROCEDURE nom_procedure()\nBEGIN\n  traitement\nEND $$\n\nDELIMITER ;\n</code></pre>"},{"location":"mysql/procedures/#parametres","title":"Param\u00e8tres","text":"<ul> <li>Les param\u00e8tres sont d\u00e9finis par un nom, un type de donn\u00e9es et un indicateur IN, OUT ou INOUT.</li> <li>IN indique que le param\u00eatre est en entr\u00e9e, OUT en sortie et INOUT pour les deux. La valeur d'un param\u00eatre IN est \"pass\u00e9e\" dans la fonction et utilis\u00e9e dans celle-ci. </li> <li>Pour un param\u00eatre OUT on peut r\u00e9cup\u00e9rer sa valeur \u00e0 la sortie de la fonction. Ce n'est pas la m\u00eame valeur que le retour de la fonction, on peut donc s'en servir pour retourner plus d'une valeur \u00e0 la fonction. </li> <li>INOUT permet les deux. Par d\u00e9faut et si on ne l'indique pas le param\u00eatre sera IN.</li> <li>Chaque param\u00eatre est s\u00e9par\u00e9 par une virgule.</li> </ul>"},{"location":"mysql/procedures/#le-traitement","title":"Le traitement","text":"<ul> <li>La proc\u00e9dure n'est pas tenue de retourner une valeur. On pourrait par exemple faire une proc\u00e9dure qui supprimerait les enregistrements d'une table selon certain crit\u00e8res.</li> <li>Par contre il est pr\u00e9f\u00e9rable de toujours retourner une valeur, comme un indicateur de succ\u00e8s pour l'exemple pr\u00e9c\u00e9dent.</li> <li>On peut utiliser des HANDLERs dans une proc\u00e9dure pour controller le traitement.</li> </ul>"},{"location":"mysql/procedures/#utilisation-de-variables","title":"Utilisation de variables","text":"<p>Les variables sont d\u00e9clar\u00e9es de la fa\u00e7on suivante :</p> <pre><code>DECLARE nom_variable type_de_donnee [DEFAULT valeur_default]\n</code></pre> <p>La section DEFAULT est optionnelle et sert \u00e0 assigner une valeur par d\u00e9faut \u00e0 la variable.</p> <pre><code>DECLARE prenom VARCHAR(50) DEFAULT 'Mathieu';\n</code></pre> <p>On peut ensuite assigner une valeur \u00e0 la variable avec SET ou un SELECT ... INTO ma_variable FROM .... Si on utilise le Select le r\u00e9sultat doit \u00eatre une valeur unique.</p> <pre><code>SET prenom = \"Alexandre\";\n\nSELECT u.prenom \nINTO prenom\nFROM usager u\nWHERE u.id = 1234;\n</code></pre>"},{"location":"mysql/procedures/#suppression-dune-procedure","title":"Suppression d'une procedure","text":"<pre><code>DROP PROCEDURE [IF EXISTS] nom_procedure;\n</code></pre> <p>Ressources</p> <ul> <li>Documentation officielle </li> <li>MySQL Tutorial</li> </ul>"},{"location":"mysql/roles/","title":"Gestion des r\u00f4les","text":"<p>Un r\u00f4le est une regroupement nomm\u00e9 de privil\u00e8ges qu'on peut accorder \u00e0 un ou plusieurs utilisateurs. On retrouve le m\u00eame fonctionnement qu'avec l'utilisateur : on va cr\u00e9er un r\u00f4le et ensuite lui octroyer des privil\u00e8ges.</p>"},{"location":"mysql/roles/#creer-un-role","title":"Cr\u00e9er un r\u00f4le","text":"<p>On va cr\u00e9er un ou plusieurs r\u00f4les avec la commande CREATE ROLE suivi du nom du r\u00f4le. On peut cr\u00e9er plus d'un r\u00f4le \u00e0 la fois en s\u00e9parant chaque nom de r\u00f4le par une virgule.</p> <pre><code>CREATE ROLE IF NOT EXISTS 'nomRole1', 'nommRole2';\n</code></pre>"},{"location":"mysql/roles/#ajouter-ou-enlever-des-privileges-a-un-role","title":"Ajouter ou enlever des privil\u00e8ges \u00e0 un r\u00f4le","text":"<p>Voir la section autorisations pour plus d'informations sur les privil\u00e8ges.</p>"},{"location":"mysql/roles/#accorder-un-role-a-un-utilisateur","title":"Accorder un r\u00f4le \u00e0 un utilisateur","text":"<p>Pour accorder un r\u00f4le \u00e0 un utilisateur on utilise la commande GRANT suivi du nom du r\u00f4le et du nom d'un ou plusieurs utilisateur. (Attention il faut ajouter l'h\u00f4te de l'utilisateur si celui-ci est diff\u00e9rent de %)</p> <pre><code>GRANT 'nomRole1' TO 'user1', 'user2'@'192.168.1.%';\n</code></pre>"},{"location":"mysql/roles/#revoquer-un-role-a-un-utilisateur","title":"R\u00e9voquer un r\u00f4le \u00e0 un utilisateur","text":"<p>Pour r\u00e9voquer un r\u00f4le d'un utilisateur on utilise la commande REVOKE suivi du nom du r\u00f4le et du nom d'un ou plusieurs utilisateurs. (Attention il faut ajouter l'h\u00f4te de l'utilisateur si celui-ci est diff\u00e9rent de %)</p> <pre><code>REVOKE 'nomRole1' FROM 'user1', 'user2'@'192.168.1.%';\n</code></pre>"},{"location":"mysql/roles/#supprimer-un-role","title":"Supprimer un r\u00f4le","text":"<pre><code>DROP ROLE 'nomRole1';\n</code></pre>"},{"location":"mysql/roles/#activer-un-role","title":"Activer un r\u00f4le","text":"<p>Une fois le r\u00f4le cr\u00e9\u00e9, il faut qu'il soit activ\u00e9 pour qu'il puisse \u00eatre appliqu\u00e9. Attention un usager ne peut avoir qu'un role d'activ\u00e9 \u00e0 la fois. On doit \u00eatre connect\u00e9 \u00e0 l'usager pour activer son r\u00f4le.</p> <pre><code>SET ROLE nomRole\n</code></pre>"},{"location":"mysql/roles/#afficher-le-role-qui-est-actif","title":"Afficher le r\u00f4le qui est actif","text":"<p>On peut conna\u00eetre le r\u00f4le pr\u00e9sentement activ\u00e9 pour l'utilisateur de cette fa\u00e7on. Le r\u00e9sultat sera null si aucun r\u00f4le n'est activ\u00e9.</p> <pre><code>SELECT current_role();\n</code></pre>"},{"location":"mysql/roles/#definir-un-role-par-defaut","title":"D\u00e9finir un r\u00f4le par d\u00e9faut","text":"<p>Lors de la connexion, le r\u00f4le d\u00e9fini de cette fa\u00e7on sera automatiquement activ\u00e9.</p> <pre><code>SET DEFAULT ROLE nomRole FOR nomUsager\n</code></pre>"},{"location":"mysql/transactions/","title":"Transactions","text":"<p>En SQL, une transaction est une s\u00e9rie d'instructions ou de requ\u00eates qui doivent \u00eatre ex\u00e9cut\u00e9 en un seul bloc. Cette s\u00e9rie d'op\u00e9rations peut \u00eatre accept\u00e9e (COMMIT) ou refus\u00e9e (ROLLBACK). C'est une pratique qui est essentielle quand on veut lancer une s\u00e9rie d'op\u00e9rations et s'assurer de l'int\u00e9grit\u00e9 de notre base de donn\u00e9es. \u00c7a nous prot\u00e8ge \u00e0 la fois des erreurs humaines (erreur dans le code, mauvaise manipulation des donn\u00e9es, etc.) et des erreurs externes (pannes de serveur durant un traitement par exemple).</p>"},{"location":"mysql/transactions/#demarrer-une-transaction","title":"D\u00e9marrer une transaction","text":""},{"location":"mysql/transactions/#autocommit","title":"AUTOCOMMIT","text":"<p>Par d\u00e9faut MySQL n'utilise pas les transactions et toutes les requ\u00eates sont automatiquement valid\u00e9es. On peut modifier ce comportement en changeant la valeur de la variable syst\u00e8me autocommit. Attention, la variable autocommit est une variable de session, c'est-\u00e0-dire que la modification qu'on y fait n'est valide que pour la session en cours et qu'elle reprendra sa valeur par d\u00e9faut \u00e0 la session suivante.</p> <pre><code>-- Modification pour que les requ\u00eates ne soit plus automatiquement \"commit\u00e9\"\nSET autocommit = 0;\n\n-- Insertion d'un enregistrement\ninsert into athlete (nom, prenom) \nvalues ('Fr\u00e9chette', 'Mathieu');\n\n-- \u00c9tant donn\u00e9 que la variable autocommit est maintenant \u00e0 false, \n-- l'insertion ne sera permanente qu'apr\u00e8s avoir valid\u00e9 la transaction\nSTART TRANSACTION\n</code></pre> <p>La fa\u00e7on la plus courante de d\u00e9marrer une transaction est d'utiliser la commande START TRANSACTION. Une fois la commande lanc\u00e9e, toutes les requ\u00eates suivantes seront \"en attente\" tant que la transaction ne sera pas valid\u00e9e.</p> <pre><code>-- Pour l'exemple, je m'assure que la valeur de la variable autocommit est bien \u00e0 TRUE.\n-- C'est la valeur par d\u00e9faut, on n'est pas oblig\u00e9 de le sp\u00e9cifi\u00e9 en temps normal.\nSET autocommit = 1;\n-- D\u00e9but de la transaction\nSTART TRANSACTION;\n\n-- Insertion d'un enregistrement\ninsert into athlete (nom, prenom) \nvalues ('Fr\u00e9chette', 'Mathieu');\n\n-- \u00c9tant donn\u00e9 qu'on a d\u00e9but\u00e9 une transaction, l'insertion ne sera permanente \n-- qu'apr\u00e8s l'avoir valid\u00e9e ou annul\u00e9e.\n</code></pre>"},{"location":"mysql/transactions/#terminer-une-transaction","title":"Terminer une transaction","text":""},{"location":"mysql/transactions/#commit","title":"COMMIT","text":"<p>Si toutes les requ\u00eates se sont bien ex\u00e9cut\u00e9es et qu'on veut confirmer les changements, on va utiliser la commande COMMIT. Les modifications apport\u00e9es seront maintenant permanentes et la transaction va se terminer.</p> <pre><code>START TRANSACTION;\n-- Op\u00e9rations \u00e0 effectuer\n...\n\n-- Valider la transaction et rendre les op\u00e9rations permanentes.\nCOMMIT;\n</code></pre>"},{"location":"mysql/transactions/#rollback","title":"ROLLBACK","text":"<p>Pour terminer la transaction en annulant TOUTES les modifications effectu\u00e9es, on va utiliser la commande ROLLBACK.</p> <pre><code>START TRANSACTION;\n-- Op\u00e9rations \u00e0 effectuer\n...\n\n-- Annuler toutes les op\u00e9rations depuis le d\u00e9but de la transaction\nROLLBACK;\n</code></pre>"},{"location":"mysql/transactions/#utiliser-des-points-de-sauvegarde","title":"Utiliser des points de sauvegarde","text":"<p>On ne peut pas d\u00e9buter une seconde transaction \"\u00e0 l'int\u00e9rieur\" d'une transaction d\u00e9j\u00e0 d\u00e9but\u00e9e, \u00e7a va causer la validation de la premi\u00e8re et lancer la seconde. Par contre on peut cr\u00e9er des points de sauvegarde qui nous permettront d'annuler uniquement les op\u00e9rations effectu\u00e9es depuis un point de sauvegarde.</p>"},{"location":"mysql/transactions/#savepoint","title":"SAVEPOINT","text":"<p>Pour cr\u00e9er un point de sauvegarde, on va utiliser la commande SAVEPOINT. On peut d\u00e9finir plusieurs point de sauvegarde \u00e0 l'int\u00e9rieur d'une m\u00eame transaction.</p> <pre><code>SAVEPOINT nom_du_savepoint\nROLLBACK TO SAVEPOINT\n</code></pre> <p>Une fois le point de sauvegarde cr\u00e9\u00e9, on peut annuler uniquement les transactions effectu\u00e9es depuis celui-ci.</p> <pre><code>-- D\u00e9but de la transaction\nSTART TRANSACTION;\n\n-- Insertion d'un enregistrement\ninsert into athlete (nom, prenom) \nvalues ('Fr\u00e9chette', 'Mathieu');\n\n-- Cr\u00e9ation d'un point de sauvegarde\nSAVEPOINT save_Math;\n\n-- Insertion d'un second enregistrement\ninsert into athlete (nom, prenom) \nvalues ('Fr\u00e9chette', 'Marianne');\n\n-- Annulation jusqu'au savepoint save_Math\nROLLBACK TO SAVEPOINT save_Math;\n\n-- Validation de la transaction\nCOMMIT;\n\n-- L'athl\u00e8te Mathieu Fr\u00e9chette sera ins\u00e9r\u00e9 dans la base de donn\u00e9es mais pas Marianne Fr\u00e9chette.\n</code></pre>"},{"location":"mysql/transactions/#commandes-qui-terminent-automatiquement-une-transaction","title":"Commandes qui terminent automatiquement une transaction","text":"<p>Attention, certaines commandes SQL vont cl\u00f4turer automatiquement une transaction et aussi valider toutes les op\u00e9rations, comme si on aurait utilis\u00e9 la commande COMMIT. </p> <p>Voici une liste de ces commandes</p> <ul> <li>Toutes les commandes qui apportent une modification \u00e0 la structure de la base de donn\u00e9es vont valider une transaction</li> <li>La cr\u00e9ation ou suppression d'une base de donn\u00e9es</li> <li>Toutes les modifications apport\u00e9es aux tables, cr\u00e9ation, modification, etc...</li> <li>La cr\u00e9ation ou suppression d'un index.</li> <li>La cr\u00e9ation de proc\u00e9dures stock\u00e9es, de fonctions ou de vues.</li> <li>La cr\u00e9ation, suppression ou modification d'un utilisateur.</li> <li>Le d\u00e9but d'une nouvelle transaction sans avoir termin\u00e9 la premi\u00e8re.</li> <li>Changer la valeur de la variable autocommit \u00e0 TRUE.</li> <li>La cr\u00e9ation ou suppression d'un LOCK sur une table.</li> </ul>"},{"location":"mysql/transactions/#sources","title":"Sources","text":"<ul> <li>https://dev.mysql.com/doc/refman/8.0/en/sql-transactional-statements.html</li> <li>https://www.javatpoint.com/mysql-transaction</li> <li>https://www.mysqltutorial.org/mysql-transaction.aspx</li> </ul>"},{"location":"mysql/types_jointures/","title":"Jointures","text":""},{"location":"mysql/types_jointures/#base-de-donnees-exemples","title":"Base de donn\u00e9es exemples","text":"<p>J'ai un syst\u00e8me de deux tables, l'une de joueurs et l'autre de guilde. Les joueurs peuvent ou non faire partie d'une guilde et chaque guilde peut avoir de 0 \u00e0 plusieurs joueurs.</p> <p></p> DBML <pre><code>Table guildes {\n    id int [pk]\n    nom varchar(30)\n}\n\nTable joueurs {\n    id int [pk]\n    guilde_id int\n    nom varchar(50)\n    prenom varchar(50)\n}\nRef: joueur.guilde_id &gt; guilde.id\n</code></pre> <p>Voici un script de cr\u00e9ation si vous voulez r\u00e9aliser les exemples</p> <pre><code>CREATE DATABASE IF NOT EXISTS bd2_exemple  \nCOLLATE = 'utf8_unicode_520_ci';  \n\n\nUSE bd2_exemple;  \n\nDROP TABLE IF EXISTS guilde;\nCREATE TABLE guildes (\n    id INT AUTO_INCREMENT,\n    nom VARCHAR(30),\n    PRIMARY KEY (id)\n);\n\n\nINSERT INTO guildes (nom) \nVALUES ('SqlIsGod'), \n    ('Error404'), \n    ('IsNobodyHere');\n\nDROP TABLE IF EXISTS joueurs;\nCREATE TABLE joueurs (\n    id INT AUTO_INCREMENT,\n    guilde_id INT NULL,\n    nom VARCHAR(50),\n    prenom VARCHAR(50),\n    PRIMARY KEY (id),\n    CONSTRAINT guilde_fk FOREIGN KEY (guilde_id) \n        REFERENCES guilde (id) \n        ON UPDATE RESTRICT ON DELETE CASCADE\n);\n\nINSERT INTO joueurs (guilde_id, nom, prenom) \nVALUES (1, 'Fr\u00e9chette', 'Mathieu'), \n    (1, 'Ouellet', 'Alexandre'), \n    (2, 'Tousignant', 'Simon'),\n    (null, 'Rivard', 'Etienne');\n</code></pre>"},{"location":"mysql/types_jointures/#inner-join","title":"INNER JOIN","text":"<p>Une jointure <code>INNER JOIN</code> retournera tous les enregistrements correspondants entre deux tables.</p>"},{"location":"mysql/types_jointures/#exemple","title":"Exemple","text":"<pre><code>SELECT j.nom, j.prenom, g.nom AS guilde\nFROM joueurs j \n    INNER JOIN guildes g ON g.id = j.guilde_id;\n</code></pre>"},{"location":"mysql/types_jointures/#resultats","title":"R\u00e9sultats","text":"nom prenom guilde Fr\u00e9chette Mathieu SqlIsGod Ouellet Alexandre SqlIsGod Tousignant Simon Error404"},{"location":"mysql/types_jointures/#left-join","title":"LEFT JOIN","text":"<p>Une jointure <code>LEFT JOIN</code> retournera tous les enregistrements de la table de gauche et seulement les enregistrements correspondant de la table de droite.</p>"},{"location":"mysql/types_jointures/#exemple_1","title":"Exemple","text":"<pre><code>SELECT j.nom, j.prenom, g.nom AS guilde\nFROM joueurs j \n    LEFT JOIN guildes g ON g.id = j.guilde_id;\n</code></pre>"},{"location":"mysql/types_jointures/#resultats_1","title":"R\u00e9sultats","text":"nom prenom guilde Fr\u00e9chette Mathieu SqlIsGod Ouellet Alexandre SqlIsGod Tousignant Simon Error404 Rivard Etienne NULL"},{"location":"mysql/types_jointures/#right-join","title":"RIGHT JOIN","text":"<p>Une jointure <code>RIGHT JOIN</code> retournera tous les enregistrements de la table de droite et seulement les enregistrements correspondant de la table de gauche.</p>"},{"location":"mysql/types_jointures/#exemple_2","title":"Exemple","text":"<pre><code>SELECT j.nom, j.prenom, g.nom AS guilde\nFROM joueurs j \n    RIGHT JOIN guildes g ON g.id = j.guilde_id;\n</code></pre>"},{"location":"mysql/types_jointures/#resultats_2","title":"R\u00e9sultats","text":"nom prenom guilde Fr\u00e9chette Mathieu SqlIsGod Ouellet Alexandre SqlIsGod Tousignant Simon Error404 NULL NULL IsNobodyHere"},{"location":"mysql/types_jointures/#union","title":"UNION","text":"<p>L'op\u00e9rateur <code>UNION</code> est utilis\u00e9 pour combiner les r\u00e9sultats de deux ou plusieurs requ\u00eates <code>SELECT</code>. On doit par contre respecter les trois r\u00e8gles suivantes :</p> <ul> <li>Toutes les requ\u00eates SELECT doivent comporter le m\u00eame nombre de colonnes.  </li> <li>Les colonnes correspondantes doivent avoir un type de donn\u00e9es similaire.  </li> <li>Les colonnes doivent aussi \u00eatre dans le m\u00eame ordre.  </li> </ul>"},{"location":"mysql/types_jointures/#syntaxe","title":"Syntaxe","text":"<pre><code>SELECT colonne1, colonne2 FROM table1\nUNION\nSELECT colonne1, colonne2 FROM table2;\n</code></pre> <p>Par d\u00e9faut l'op\u00e9rateur <code>UNION</code> conservera que les valeurs uniques des multiples requ\u00eates. Si ont veut conserver les doublons, on doit ajouter ALL.</p> <pre><code>SELECT colonne1, colonne2 FROM table1\nUNION ALL\nSELECT colonne1, colonne2 FROM table2;\n</code></pre> <p>Le nom des colonnes du r\u00e9sultat sera le nom des colonnes d\u00e9finies dans la premi\u00e8re requ\u00eate.</p>"},{"location":"mysql/types_jointures/#outer-join","title":"OUTER JOIN","text":"<p>Une jointure <code>OUTER JOIN</code> retournera tous les enregistrements des deux tables. On ne peux pas utiliser la commande <code>OUTER JOIN</code> en MySQL mais on peut arriver au m\u00eame r\u00e9sultat en faisant une premi\u00e8re requ\u00eate avec un <code>LEFT JOIN</code> unis \u00e0 une deuxi\u00e8me requ\u00eate avec un <code>RIGHT JOIN</code>.  </p>"},{"location":"mysql/types_jointures/#exemple_3","title":"Exemple","text":"<pre><code>SELECT j.nom, j.prenom, g.nom AS guilde\nFROM joueurs j \n    LEFT JOIN guildes g ON g.id = j.guilde_id\n\nUNION\n\nSELECT j.nom, j.prenom, g.nom AS guilde\nFROM joueurs j \n    RIGHT JOIN guildes g ON g.id = j.guilde_id;\n</code></pre>"},{"location":"mysql/types_jointures/#resultats_3","title":"R\u00e9sultats","text":"nom prenom guilde Fr\u00e9chette Mathieu SqlIsGod Ouellet Alexandre SqlIsGod Tousignant Simon Error404 Rivard Etienne NULL NULL NULL IsNobodyHere"},{"location":"mysql/utilisateurs/","title":"Gestion des utilisateurs","text":"<p>Pour se connecter \u00e0 MySQL on doit avoir en main un utilisateur et un mot de passe. Chaque utilisateur \u00e0 ses propres privil\u00e8ges sur ce qui peut faire ou ne pas faire dans la base de donn\u00e9es. Les informations sur les utilisateurs et leur privil\u00e8ges sont stock\u00e9s dans les tables suivantes de la base de donn\u00e9es mysql :</p> <ul> <li>user : les informations sur les utilisateurs.</li> <li>db, tables_priv, columns_priv et proc_priv : les privil\u00e8ges de l'utilisateur.</li> </ul> <p>On peut modifier les valeurs de ces tables mais il est pr\u00e9f\u00e9rable de ne pas le faire directement dans ces tables, il y a des commandes appropri\u00e9es qu'on va voir.</p>"},{"location":"mysql/utilisateurs/#creer-un-utilisateur","title":"Cr\u00e9er un utilisateur","text":"<p>On utilise la commande CREATE USER en sp\u00e9cifiant un nom d'utilisateur, un h\u00f4te et un mot de passe. L'h\u00f4te est optionnel et repr\u00e9sente l'adresse \u00e0 partir de laquelle l'utilisateur va se connecter. On utilise souvent localhost ou 127.0.0.1, ce qui veut dire que l'utilisateur pourra se connecter \u00e0 partir de la machine o\u00f9 est situ\u00e9 le serveur. Si on ne sp\u00e9cifie pas d'h\u00f4te, l'utilisateur pourra se connecter depuis n'importe quel h\u00f4te.</p> <pre><code>CREATE USER IF NOT EXISTS 'nomUtilisateur'@'hote' IDENTIFIED BY 'motDePasse';\n\n-- Exemple\nCREATE USER IF NOT EXISTS 'math'@'localhost' IDENTIFIED BY 'qwerty4ever';\nCREATE USER IF NOT EXISTS 'math2' IDENTIFIED BY 'qwerty4ever';\nCREATE USER IF NOT EXISTS 'patate'@'156.20.12.2' IDENTIFIED BY 'qwerty4ever';\n</code></pre> <p>On peut utiliser le joker % pour permettre la cr\u00e9ation d'un utilisateur qui va pouvoir se connecter depuis une plage d'h\u00f4tes :</p> <pre><code>-- L'utilisateur va pourvoir se connecter depuis n'importe quel h\u00f4te dont \n-- l'adresse ip commence par 156.20.12\nCREATE USER IF NOT EXISTS 'math'@'156.20.12.%' IDENTIFIED BY 'qwerty4ever';\n\n-- L'utilisateur va pouvoir se connecter depuis n'importe quel h\u00f4te\nCREATE USER IF NOT EXISTS 'math'@'%' IDENTIFIED BY 'qwerty4ever';\n</code></pre>"},{"location":"mysql/utilisateurs/#modifier-le-nom-dun-utilisateur","title":"Modifier le nom d'un utilisateur","text":"<p>Pour modifier le nom d'un utilisateur, on utilise la commande RENAME USER :</p> <pre><code>RENAME USER 'Math'@'localhost' TO 'Mathieu'@'localhost';\n</code></pre>"},{"location":"mysql/utilisateurs/#supprimer-un-utilisateur","title":"Supprimer un utilisateur","text":"<p>Pour supprimer un utilisateur, on va utiliser DROP USER :</p> <pre><code>DROP USER 'Math'@'localhost'\n</code></pre>"},{"location":"mysql/utilisateurs/#afficher-la-liste-des-utilisateurs","title":"Afficher la liste des utilisateurs","text":"<p>En mysql il n'y a pas de commande SHOW USERS pour nous afficher la liste de tous les utilisateurs. On a vu plus haut que les informations de l'utilisateur \u00e9tait stock\u00e9 dans la table user de la base de donn\u00e9es mysql. On peut donc avec une requ\u00eate SELECT sur cette table afficher la liste des utilisateurs. Les usagers et les r\u00f4les sont stock\u00e9s ensemble dans cette table. </p> <pre><code>-- Affiche tout les usagers et les r\u00f4les\nSELECT * FROM mysql.user;\n</code></pre>"},{"location":"mysql/vues/","title":"Vues (Views)","text":"<p>En SQL, on peut enregistrer une requ\u00eate qu'on utilise r\u00e9guli\u00e8rement et la r\u00e9utiliser facilement dans d'autres requ\u00eates. Pour ce faire on cr\u00e9e ce qu'on appelle une vue (VIEW) .</p>"},{"location":"mysql/vues/#avantages-de-creer-une-vue","title":"Avantages de cr\u00e9er une vue","text":"<ul> <li>Simplification des requ\u00eates</li> <li>S\u00e9curiser des donn\u00e9es sensibles</li> <li>Faciliter la maintenance</li> </ul> <p>Il faut se rappeler qu'une vue n'est pas une fa\u00e7on d'optimiser nos requ\u00eates. Quand une vue est utilis\u00e9 dans une requ\u00eate, la requ\u00eate de la vue est ex\u00e9cut\u00e9 en premier lieu et ensuite la requ\u00eate principale. On pourrait voir \u00e7a comme une sous-requ\u00eate qui est plus simple \u00e0 utiliser pour le programmeur.</p>"},{"location":"mysql/vues/#creer-une-vue","title":"Cr\u00e9er une vue","text":"<p>Pour cr\u00e9er une vue, on utilise la d\u00e9claration <code>CREATE VIEW</code> :</p> <pre><code>CREATE [OR REPLACE] VIEW [nom_bd.]nom_view [(liste_colonne)]\nAS\nrequ\u00eate_select;\n</code></pre> <p>Le nom de la vue doit \u00eatre unique dans la base de donn\u00e9es, aucune autre vue ni table ne doit avoir le m\u00eame nom. Si on ajoute l'option OR REPLACE et que la vue existe d\u00e9j\u00e0, la nouvelle vue va remplacer l'ancienne, sinon \u00e7a n'aura aucun effet. On peut d\u00e9finir optionnellement les noms de colonnes de la vue, sinon les noms de colonnes seront celle de la requ\u00eate select. Pour terminer, on ajoute une requ\u00eate select. La requ\u00eate peut interroger des tables et d'autres vues.</p>"},{"location":"mysql/vues/#exemple","title":"Exemple","text":"<pre><code>CREATE OR REPLACE VIEW etudiants_informatique (nom_complet, da)\nAS \n    SELECT CONCAT(e.nom, ', ', e.prenom),\n           e.da\n    FROM etudiants e\n        INNER JOIN etudiants_concentration ec ON ec.etudiant_id = e.id\n            INNER JOIN concentrations c ON c.id = ec.concentration\n    WHERE c.description = \"Technique informatique\";\n</code></pre> <p>Ensuite pour se servir de la vue, on n'a qu'\u00e0 utiliser la vue comme une table :</p> <pre><code>SELECT * \nFROM etudiants_informatique\nORDER BY da;\n</code></pre>"},{"location":"mysql/vues/#modifier-une-vue","title":"Modifier une vue","text":"<p>Pour modifier une vue, on peut utiliser la d\u00e9claration <code>CREATE OR REPLACE VIEW</code> ou bien <code>ALTER VIEW</code>. Les deux m\u00e9thodes sont similaires dans leur r\u00e9sultat. On a d\u00e9j\u00e0 vu la syntaxe du <code>CREATE OR REPLACE VIEW</code>. Voici un exemple pour le <code>ALTER VIEW</code> :</p> <pre><code>ALTER VIEW nom_view [(liste_colonne)]\nAS requ\u00eate_select;;\n</code></pre> <p>On ne peut pas modifier le nom de la vue par ces m\u00e9thodes, pour se faire, on doit utiliser la d\u00e9claration <code>RENAME TABLE</code></p> <p>Renommer une vue</p> <pre><code>RENAME TABLE vue \nTO nouveau_nom_vue;\n</code></pre>"},{"location":"mysql/vues/#supprimer-une-vue","title":"Supprimer une vue","text":"<pre><code>DROP VIEW [IF EXISTS] nom_vue;\n</code></pre> <p>Source</p> <ul> <li>https://dev.mysql.com/doc/refman/8.0/en/create-view.html</li> <li>https://www.mysqltutorial.org/mysql-views-tutorial.aspx</li> </ul>"},{"location":"outils/dbeaver/","title":"DBeaver","text":"<p>DBeaver est un outil de gestion de base de donn\u00e9es que nous utiliserons pour le cours. Il est gratuit, multiplateforme et supporte beaucoup de type de base de donn\u00e9es. </p> <ul> <li>T\u00e9l\u00e9chargez l'installateur ici : https://dbeaver.io</li> </ul>"},{"location":"outils/dbeaver/#creer-une-connexion-vers-mysql-avec-dbeaver","title":"Cr\u00e9er une connexion vers mysql avec DBeaver","text":"<p>Vous devez tout d'abord vous assurer que AMPPS est bien lanc\u00e9. </p> <p></p> <ol> <li>Ouvrez DBeaver</li> <li>Cliquez sur Database -&gt; New Database Connection</li> <li>S\u00e9lectionnez MySQL dans la liste</li> <li>Cliquez sur Next</li> <li>Dans le champ Host entrez <code>localhost</code></li> <li>Dans le champ Port entrez <code>3306</code></li> <li>Dans le champ Database entrez <code>mysql</code></li> <li>Dans le champ User name entrez <code>root</code></li> <li>Dans le champ Password entrez <code>mysql</code></li> <li>Cliquer sur Test Connection pour v\u00e9rifier que la connexion fonctionne</li> <li>Cliquez sur Finish</li> </ol>"},{"location":"outils/drawio/","title":"Draw.io","text":"<p>Draw.io est un logiciel de cr\u00e9ation de diagramme. Il en existe une version en ligne et desktop, je vous conseille d'installer la version desktop.</p> <ul> <li>Version en ligne : https://app.diagrams.net/</li> <li>Version desktop : https://www.drawio.com/</li> </ul>"},{"location":"python/installation/","title":"Installation de Python","text":"<p>T\u00e9l\u00e9chardez la derni\u00e8re version de Python disponible pour votre syst\u00e8me \u00e0 cette adresse https://www.python.org/downloads/.</p> <p>Ex\u00e9cutez le fichier t\u00e9l\u00e9charg\u00e9 et au premier \u00e9cran de l'installateur assurez-vous de bien cocher l'option ==\"Add python.exe to PATH\"== dans le bas.</p> <p></p> <p>Ouvrez ensuite un terminal et entrez la commande suivante pour v\u00e9rifier que Python est bien install\u00e9 : </p> <pre><code>py --version\n</code></pre> <p>Vous pouvez aussi voir la liste de toutes les versions install\u00e9es ainsi que leur r\u00e9pertoire d'installation avec la commande :</p> <pre><code>py -0p\n</code></pre> <p>Dans cet exemple j'ai deux version d'install\u00e9e et on voit que la 3.12 est la version active.</p> <p></p>"},{"location":"python/installation/#executer-votre-premier-programme-python","title":"Ex\u00e9cuter votre premier programme Python","text":"<p>Pour lancer un programme Python il suffit de faire la commande py suivie du nom du fichier dans un terminal. Si vous codez avec vsCode je vous conseille d'installer les extensions suivantes : </p> <ul> <li>Python par Microsoft : https://marketplace.visualstudio.com/items?itemName=ms-python.python</li> <li>Pylance par Microsoft : https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance</li> </ul> <p>Cr\u00e9er un fichier nomm\u00e9 hello.py et copiez-y le code suivant : </p> hello.py<pre><code>print(\"Hello\")\n</code></pre> <p>Tentez de l'ex\u00e9cuter depuis la console et ensuite depuis vsCode en cliquant sur l'icone Play en haut \u00e0 droite de la fen\u00eatre du fichier.</p>"},{"location":"python/installation/#supprimer-python","title":"Supprimer Python","text":"<p>On peut supprimer une version de Python facilement en passant par la suppression des programmes Windows, elle va \u00eatre dans la liste des programmes install\u00e9s. Parcontre vous devriez aussi aller v\u00e9rifier ensuite dans les variables d'environnement car Python y ajoute des r\u00e9f\u00e9rences qui ne sont pas toujours supprim\u00e9es.</p>"},{"location":"python/libpyqt/","title":"pyQT5","text":"<p>C'est une librairie qui va nous servir \u00e0 cr\u00e9er des interfaces graphiques pour nos programmes python</p>"},{"location":"python/libpyqt/#installation","title":"Installation","text":"<p>En ligne de commande </p> <pre><code>pip install PyQt5\n</code></pre>"},{"location":"python/libpyqt/#documentation","title":"Documentation","text":""},{"location":"python/libpyqt/#tutoriel","title":"Tutoriel","text":"<ul> <li>https://www.pythonguis.com/courses/start/</li> <li>https://www.tutorialspoint.com/pyqt5/index.html</li> <li>https://build-system.fman.io/pyqt5-tutorial</li> </ul>"},{"location":"python/libpyqt/#disposition-de-notre-application","title":"Disposition de notre application","text":"<ul> <li>https://www.pythonguis.com/tutorials/pyqt-layouts/</li> <li>Le gridLayout plus en d\u00e9tail : https://www.pythontutorial.net/pyqt/pyqt-qgridlayout/</li> </ul>"},{"location":"python/libpyqt/#les-widgets","title":"Les Widgets","text":"<ul> <li>https://www.tutorialspoint.com/pyqt/pyqt_basic_widgets.htm</li> <li>https://www.pythonguis.com/tutorials/pyqt-basic-widgets/</li> </ul>"},{"location":"python/mysql_connector/","title":"MySQL Connector pour python","text":"<p>Pour nous permettre de communiquer avec notre base de donn\u00e9es MySQL depuis nos programmes Python on va utiliser la librairie MySQL Connector.</p>"},{"location":"python/mysql_connector/#installation","title":"Installation","text":"<p>En ligne de commande </p> <pre><code>pip install mysql-connector-python\n</code></pre>"},{"location":"python/mysql_connector/#utilisation","title":"Utilisation","text":"<p>Premi\u00e8rement on doit importer la librairie MySQL Connector. Ensuite on cr\u00e9e une connexion vers la base de donn\u00e9es dans laquelle on veut travailler. On va aussi d\u00e9clarer un curseur qui va s'occuper d'ex\u00e9cuter les requ\u00eates. Finalement on doit refermer le curseur et la connexion \u00e0 la base de donn\u00e9es. </p> <p>Voici un petit exemple de programme Python qui ex\u00e9cute une requ\u00eate SELECT et qui affiche ensuite \u00e0 la console le r\u00e9sultat obtenue.</p> select_exemple.py<pre><code># Importation de la librairie mysql.connector\nimport mysql.connector\n\n# Cr\u00e9ation de la connexion \u00e0 la base de donn\u00e9es\ncnx = mysql.connector.connect(\n    user='root', \n    password='********',\n    host='localhost',\n    database='bd2_ex10')\n\n# Cr\u00e9ation du curseur\n# Le param\u00eatre dictionary=True permet de faire \n# r\u00e9f\u00e9rence aux champs du r\u00e9sultat par leur nom\ncursor = cnx.cursor(dictionary=True)\n\n# Stockage de la requ\u00eate dans une variable\nquery = \"SELECT nom FROM houblon h ORDER BY nom;\"\n\n# Ex\u00e9cution de la requ\u00eate\ncursor.execute(query)\n\n# Affichage des r\u00e9sultats\nfor (ligne) in cursor:\n    print(ligne[\"nom\"])\n\n# Fermeture du curseur et de la connexion\ncursor.close()\ncnx.close()\n</code></pre> <p>Le r\u00e9sultat contenu dans le curseur est un tableau de toutes les lignes du r\u00e9sultat dont chaque \u00e9l\u00e9ment est aussi un tableau qui contient chaque colonne de la ligne. Dans l'exemple plus haut chaque \u00e9l\u00e9ment du tableau est un tableau d'un item, la colonne nom.</p> <p>Note</p> <p>Quand vous ex\u00e9cutez une requ\u00eate INSERT, UPDATE ou DELETE vous devez faire un commit pour que les modifications soit sauvegard\u00e9es. Utilisez la fontion commit() de votre objet connexion.</p> <p>Voici un autre exemple qui supprime un \u00e9l\u00e9ment d'une table. Dans cet exemple on voit comment passer des param\u00e8tres \u00e0 la requ\u00eate et faire une gestion d'erreurs avec un try ... catch.</p> delete_exemple.py<pre><code>import mysql.connector\n\nhoulon_id = 1;\n\nhoublonDelete = False\nrequete = \"DELETE FROM houblon WHERE id = %(houblon_id)s\"\nparametres = {'houblon_id' : houlon_id}\n\ntry:\n    connexion = mysql.connector.connect(\n      user='root', \n      password='r00t_bd2',\n      host='localhost',\n      database='bd2_ex10')\n    cursor = connexion.cursor()\n\n    # Ex\u00e9cution de la requ\u00eate avec passage de param\u00e8tres\n    cursor.execute(requete, parametres)\n    # Validation de la transaction\n    connexion.commit()\n\n    houblonDelete = True\nexcept mysql.Error as erreur:\n    print(erreur)\nfinally:\n    cursor.close()\n    connexion.close()\n</code></pre>"},{"location":"python/mysql_connector/#documentation","title":"Documentation","text":"<ul> <li>Documentation officielle</li> <li>Documentation sur W3Schools</li> </ul>"},{"location":"python/qtdesigner/","title":"Qt Designer","text":"<p>Qt Designer est un \u00e9diteur graphique qui nous permet de cr\u00e9er visuellement des interfaces graphiques en pyQt. Les interfaces seront ensuite export\u00e9 en fichier python que nous pourront utiliser dans nos programme.</p>"},{"location":"python/qtdesigner/#installation","title":"Installation","text":"<p>Directement en ligne de commande</p> <pre><code>pip install pip install PyQt5Designer\n</code></pre> <p>Ou bien depuis le site officiel : https://www.qt.io/download-qt-installer, vous allez devoir vous cr\u00e9er un compte pour l'installation.</p>"},{"location":"python/qtdesigner/#lancer-qt-designer","title":"Lancer Qt Designer","text":"<p>En ligne de commande, utilisez la commande designer</p> <pre><code>designer\n</code></pre>"},{"location":"python/qtdesigner/#convertir-un-fichier-ui-en-python","title":"Convertir un fichier ui en python","text":"<p>Les interfaces que vous allez cr\u00e9er avec Qt Designer seront enregistr\u00e9es dans des fichiers avec l'extension ui. Pour les utiliser dans vos programme python on va devoir les convertir. On peut le faire directement en ligne de commande et utilisant la commande pyuic5 suivi du nom du fichier source, de l'argument -o et du nom du fichier de destination. Le fichier de destination n'est pas oblig\u00e9 d'exister au moment d'ex\u00e9cuter la commande mais il doit porter l'extension py.</p> <pre><code>pyuic5 masuperfenetre.ui -o MaSuperFenetre.py\n</code></pre>"},{"location":"python/qtdesigner/#exemple","title":"Exemple","text":"<p>Au d\u00e9marrage de l'application Qt Designer la fen\u00eatre nouveau formulaire va s'afficher. S\u00e9lectionnez Main Window dans la section templatesforms et cliquez sur cr\u00e9er.</p> <p></p> <p>Une fen\u00eatre vide va \u00eatre cr\u00e9\u00e9 avec une barre de menu dans le haut et une barre de statut dans le bas. Enregistrez cette fen\u00eatre dans le r\u00e9pertoire de votre application. (Dans mon exemple j'ai nomm\u00e9 mon fichier exemple.ui). Vous voil\u00e0 pr\u00eat \u00e0 cr\u00e9er votre interface. On cr\u00e9er une interface o\u00f9 on pourra saisir un id et en cliquant sur un bouton de l'information va s'afficher \u00e0 l'\u00e9cran.</p> <p></p> <p>Commencez par supprimer le menu et la barre de statut. Dans l'inspecteur d'objet s\u00e9lectionnez menubar et statusbar et avec un clique droit choisissez supprimer.</p> <p></p> <p>Dans la section de gauche vous avez une liste de widgets \u00e0 utiliser. Glissez un Vertical Layout dans la fen\u00eatre principale. Cliquez ensuite sur la fen\u00eatre principale \u00e0 l'ext\u00e9rieur du widget que vous venez d'ajouter et dans la barre de menu du haut de l'\u00e9diteur cliquez sur le bouton mettre en forme verticalement. Le widget Vertical Layout devrait s'\u00e9tendre \u00e0 la totalit\u00e9 de la fen\u00eatre.</p> <p></p> <p>Ensuite dans l'ordre on va ajouter un Label, un Line Edit, un Push Button et un autre Label.</p> <p></p> <p>En s\u00e9lectionnant chaque widget, modifiez la propri\u00e9t\u00e9 objectName dans l'\u00e9diteur de propri\u00e9t\u00e9s. Je n'ai pas renomm\u00e9 le premier label, mais pour les suivants j'ai utilis\u00e9 les noms suivants : </p> <ul> <li>Line Edit = editCitoyenId</li> <li>Push Button = btnRechercher</li> <li>Label = lblResultat</li> </ul> <p></p> <p>Vous pouvez modifier le texte affich\u00e9 sur un widget avec la propri\u00e9t\u00e9 text. Vous pouvez ajuter le format du texte avec plusieurs propri\u00e9t\u00e9s, dont font et alignment.</p> <p></p> <p>Derni\u00e8re chose, on va associer une fonction \u00e0 un \u00e9v\u00e9nement, ici un clique de la souris sur le bouton. On peut le faire depuis l'interface de Qt Designer ou dans notre script python. Pour le faire depuis Qt Designer, dans le menu principal, sous \u00c9dition s\u00e9lectionnez \u00c9diter signaux/slots. Ensuite cliquez sur le bouton et sans rel\u00e2cher le bouton glisser la souris vers la fen\u00eatre principale (attention on cible la fen\u00eatre principale et non le widget layout). Vous devriez avoir une ligne rouge avec \u00e0 son bout une fl\u00e8che compos\u00e9e de barre rouge. Rel\u00e2cher maintenant le bouton de la souris et la fen\u00eatre Configurer connexion va s'afficher.</p> <p></p> <p>S\u00e9lectionnez clicked() et cliquez sur \u00c9diter. Dans la fen\u00eatre qui va appara\u00eetre cliquez sur le bouton avec une croix verte dans la section Slots. Modifier ensuite le nom de la fonction (slot1() par d\u00e9faut) pour le nom que vous allez donner \u00e0 votre fonction. Cliquez ensuite sur ok. Dans la fen\u00eatre pr\u00e9c\u00e9dente vous avez maintenant votre fonction dans la section de droite, s\u00e9lectionnez la et cliquez sur ok.</p> <p></p> <p></p> <p>Pour connecter un \u00e9v\u00e9nement depuis le script python, voir plus bas dans l'exemble du fichier app.py.</p> <p>Voila le travail pour notre interface vous pouvez sauvegarder le tout et ouvrir un terminal dans le r\u00e9pertoire o\u00f9 le fichier se trouve.  Utilisez la commande qu'on a vu plus haut pour convertir le fichier ui et fichier python.</p> <pre><code>pyuic5 exemple.ui -o demo.py\n</code></pre> <p>Si on regarde dans le fichier python qu'on a cr\u00e9\u00e9 on peut voir qu'il y a une classe ==Ui_MainWindow== qui contient notre interface. Maintenant on va cr\u00e9er un fichier python qui va \u00eatre le script principal et o\u00f9 on va appeler cette classe et l'afficher.</p> app.py<pre><code>import sys\nfrom PyQt5.QtWidgets import QApplication, QMainWindow\n# Importer la classe Ui_MainWindow du fichier demo.py\nfrom demo import Ui_MainWindow\n\n# En param\u00eatre de la classe MainWindow on va h\u00e9riter des fonctionnalit\u00e9s\n# de QMainWindow et de notre interface Ui_MainWindow\nclass MainWindow(QMainWindow, Ui_MainWindow):\n    def __init__(self, *args, obj=None, **kwargs):\n        super(MainWindow, self).__init__(*args, **kwargs)\n        # On va cr\u00e9er la fen\u00eatre avec cette commande\n        self.setupUi(self)\n        # On a acc\u00e8s \u00e0 tous les \u00e9l\u00e9ments de notre interface\n        # Par exemple ici on branche une fonction \u00e0 l'appui sur le bouton\n        self.editCitoyenId.returnPressed.connect(self.test)\n\n    # On d\u00e9fini la fonction qu'on avait d\u00e9clar\u00e9 pour le clique sur le bouton \n    # dans qtDesigner\n    def rechercherCitoyen(self):\n        # On r\u00e9cup\u00e8re la valeur du line edit\n        citoyen_id = self.editCitoyenId.text()\n        # Ensuite on pourrait lancer une fonction qui interroge la BD\n        # Pour l'exemple on va simplement afficher la valeur dans le label \n        # lblResultat\n        self.lblResultat.setText(citoyen_id)\n        # editCitoyenId et lblResultat sont les noms qu'on a donn\u00e9 au widget\n        # dans l'\u00e9diteur Qt Designer\n\n    def test(self):\n        self.lblResultat.setText('Tu as appuy\u00e9 sur Enter')\n\napp = QApplication(sys.argv)\n\nwindow = MainWindow()\nwindow.show()\napp.exec()\n</code></pre> <p>Finalement ex\u00e9cutez le script app.py pour afficher le r\u00e9sultat.</p> <p></p>"},{"location":"python/qtdesigner/#ressources","title":"Ressources","text":"<ul> <li>https://realpython.com/qt-designer-python/</li> <li>https://www.pythonguis.com/tutorials/qt-designer-gui-layout/</li> <li>https://doc.qt.io/qt-5/qtdesigner-manual.html</li> </ul>"}]}